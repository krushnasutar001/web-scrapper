{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krush\\\\OneDrive\\\\Desktop\\\\Final\\\\linkedin-automation-saas\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\n\n// =============================\n// Initial State\n// =============================\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: null,\n  loading: true,\n  error: null\n};\n\n// =============================\n// Action Types\n// =============================\nconst AUTH_ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGOUT: 'LOGOUT',\n  SET_ERROR: 'SET_ERROR',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  UPDATE_USER: 'UPDATE_USER'\n};\n\n// =============================\n// Reducer\n// =============================\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    default:\n      return state;\n  }\n};\n\n// =============================\n// Context Setup\n// =============================\nconst AuthContext = /*#__PURE__*/createContext();\n\n// =============================\n// Provider Component\n// =============================\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // =============================\n  // Auto-load user + token on app start\n  // =============================\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        const token = localStorage.getItem('authToken') || localStorage.getItem('token');\n        const userStr = localStorage.getItem('user');\n        if (token) {\n          // Ensure axios has token\n          authAPI.setAuthToken(token);\n        }\n        if (token && userStr) {\n          const user = JSON.parse(userStr);\n          dispatch({\n            type: AUTH_ACTIONS.LOGIN_SUCCESS,\n            payload: {\n              user,\n              token\n            }\n          });\n        } else if (token) {\n          // If only token is present, try to fetch user\n          authAPI.setAuthToken(token);\n          authAPI.getProfile().then(profile => {\n            if (profile) {\n              localStorage.setItem('user', JSON.stringify(profile));\n              dispatch({\n                type: AUTH_ACTIONS.LOGIN_SUCCESS,\n                payload: {\n                  user: profile,\n                  token\n                }\n              });\n            } else {\n              dispatch({\n                type: AUTH_ACTIONS.SET_LOADING,\n                payload: false\n              });\n            }\n          }).catch(() => {\n            dispatch({\n              type: AUTH_ACTIONS.SET_LOADING,\n              payload: false\n            });\n          });\n        } else {\n          dispatch({\n            type: AUTH_ACTIONS.LOGOUT\n          });\n          dispatch({\n            type: AUTH_ACTIONS.SET_LOADING,\n            payload: false\n          });\n        }\n      } catch (error) {\n        console.error('‚ùå Error loading user:', error);\n        localStorage.clear();\n        authAPI.clearAuthToken();\n        dispatch({\n          type: AUTH_ACTIONS.SET_LOADING,\n          payload: false\n        });\n      }\n    };\n    loadUser();\n  }, []);\n\n  // Re-emit login signal on startup when tokens are present to aid extension detection\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      try {\n        var _window$location;\n        const token = localStorage.getItem('authToken') || localStorage.getItem('token');\n        const refreshToken = localStorage.getItem('refreshToken') || localStorage.getItem('refresh_token') || null;\n        const userStr = localStorage.getItem('user');\n        const user = userStr ? JSON.parse(userStr) : null;\n        const apiBase = typeof window !== 'undefined' && (_window$location = window.location) !== null && _window$location !== void 0 && _window$location.origin ? window.location.origin : undefined;\n        if (token && typeof window !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('scralytics:loginSuccess', {\n            detail: {\n              authToken: token,\n              refreshToken,\n              user,\n              apiBaseUrl: apiBase\n            }\n          }));\n        }\n      } catch (_) {}\n    }, 1500);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // =============================\n  // Login Function\n  // =============================\n  const login = async (email, password) => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      dispatch({\n        type: AUTH_ACTIONS.CLEAR_ERROR\n      });\n      console.log('Login function called'); // Add this line\n\n      console.log('üîê Attempting login for:', email);\n      const result = await authAPI.login(email, password);\n      const data = result || {};\n      if (data.success) {\n        const user = data.user || null;\n        const token = data.authToken || null;\n        const refreshToken = data.refreshToken || null;\n\n        // Store tokens and user info\n        localStorage.setItem('authToken', token);\n        localStorage.setItem('token', token); // for backward compatibility\n        localStorage.setItem('refreshToken', refreshToken || '');\n        localStorage.setItem('user', JSON.stringify(user));\n\n        // Sync token to chrome.storage for extension\n        try {\n          var _window$chrome, _window$chrome$storag;\n          if (typeof window !== 'undefined' && (_window$chrome = window.chrome) !== null && _window$chrome !== void 0 && (_window$chrome$storag = _window$chrome.storage) !== null && _window$chrome$storag !== void 0 && _window$chrome$storag.local) {\n            window.chrome.storage.local.set({\n              toolToken: token,\n              toolUser: user\n            });\n          }\n        } catch (_) {}\n\n        // Apply token globally\n        authAPI.setAuthToken(token);\n\n        // Update state\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: {\n            user,\n            token\n          }\n        });\n\n        // Best-effort: notify extension of login with token and API base\n        try {\n          var _window, _window$chrome2, _window$chrome2$runti;\n          const extId = process.env.REACT_APP_EXTENSION_ID || localStorage.getItem('EXTENSION_ID');\n          const apiBase = window.__API_BASE_URL__ || localStorage.getItem('API_BASE_URL') || (typeof window !== 'undefined' ? window.location.origin : undefined);\n          // Dispatch a window event so the content script can react without polling\n          try {\n            window.dispatchEvent(new CustomEvent('scralytics:loginSuccess', {\n              detail: {\n                authToken: token,\n                user,\n                apiBaseUrl: apiBase\n              }\n            }));\n          } catch (_) {}\n\n          // Also notify extension directly\n          if (extId && (_window = window) !== null && _window !== void 0 && (_window$chrome2 = _window.chrome) !== null && _window$chrome2 !== void 0 && (_window$chrome2$runti = _window$chrome2.runtime) !== null && _window$chrome2$runti !== void 0 && _window$chrome2$runti.sendMessage) {\n            const payload = {\n              type: 'SCRALYTICS_LOGIN_STATUS',\n              source: 'web_app',\n              data: {\n                isLoggedIn: true,\n                authToken: token,\n                apiBaseUrl: apiBase,\n                userEmail: user === null || user === void 0 ? void 0 : user.email,\n                userName: (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.fullName) || (user === null || user === void 0 ? void 0 : user.username),\n                userId: (user === null || user === void 0 ? void 0 : user.id) || (user === null || user === void 0 ? void 0 : user._id)\n              }\n            };\n            window.chrome.runtime.sendMessage(extId, payload, () => {});\n            console.log('‚úÖ Token sent to extension');\n          }\n        } catch (err) {\n          console.warn('‚ö†Ô∏è Failed to send token to extension:', (err === null || err === void 0 ? void 0 : err.message) || err);\n        }\n        toast.success('Login successful!');\n        console.log('‚úÖ Token saved and applied');\n        return {\n          success: true\n        };\n      } else {\n        const friendly = data.message || 'Login failed';\n        console.error('‚ùå Login failed:', friendly);\n        dispatch({\n          type: AUTH_ACTIONS.SET_ERROR,\n          payload: friendly\n        });\n        toast.error(friendly);\n        return {\n          success: false,\n          message: friendly\n        };\n      }\n    } catch (error) {\n      var _error$response;\n      const status = (error === null || error === void 0 ? void 0 : error.status) || (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status);\n      let message = (error === null || error === void 0 ? void 0 : error.message) || 'Login failed';\n      if (!status && /Network Error/i.test(message)) {\n        message = 'Backend unreachable. Make sure the server is running.';\n      } else if (status === 401) {\n        message = 'Invalid credentials. Please check your email and password.';\n      } else if (status === 429) {\n        message = 'Too many attempts. Please wait a moment.';\n      } else if (status === 403) {\n        message = 'Access denied. You may not have permission.';\n      } else if (status === 500) {\n        message = 'Server error. Try again later.';\n      }\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: message\n      });\n      toast.error(message);\n      console.error(`‚ùå Login error: ${message}`);\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    }\n  };\n\n  // =============================\n  // Register Function\n  // =============================\n  const register = async userData => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      dispatch({\n        type: AUTH_ACTIONS.CLEAR_ERROR\n      });\n      const response = await authAPI.register(userData);\n      if (response.success) {\n        const {\n          user,\n          accessToken,\n          refreshToken\n        } = response.data;\n        localStorage.setItem('token', accessToken);\n        localStorage.setItem('refreshToken', refreshToken);\n        localStorage.setItem('user', JSON.stringify(user));\n        authAPI.setAuthToken(accessToken);\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: {\n            user,\n            token: accessToken\n          }\n        });\n        toast.success('Registration successful!');\n        return {\n          success: true\n        };\n      } else {\n        const message = response.message || 'Registration failed';\n        dispatch({\n          type: AUTH_ACTIONS.SET_ERROR,\n          payload: message\n        });\n        toast.error(message);\n        return {\n          success: false,\n          message\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: message\n      });\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    }\n  };\n\n  // =============================\n  // Logout Function\n  // =============================\n  const logout = async () => {\n    try {\n      await authAPI.logout().catch(() => {});\n    } finally {\n      // Fire explicit logout event for content script listeners\n      try {\n        if (typeof window !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('scralytics:logout', {\n            detail: {\n              explicitLogout: true,\n              ts: Date.now()\n            }\n          }));\n        }\n      } catch (_) {}\n      // Notify extension of logout\n      try {\n        var _window2, _window2$chrome, _window2$chrome$runti;\n        const extId = process.env.REACT_APP_EXTENSION_ID || localStorage.getItem('EXTENSION_ID');\n        if (extId && (_window2 = window) !== null && _window2 !== void 0 && (_window2$chrome = _window2.chrome) !== null && _window2$chrome !== void 0 && (_window2$chrome$runti = _window2$chrome.runtime) !== null && _window2$chrome$runti !== void 0 && _window2$chrome$runti.sendMessage) {\n          window.chrome.runtime.sendMessage(extId, {\n            type: 'SCRALYTICS_LOGIN_STATUS',\n            source: 'web_app',\n            data: {\n              isLoggedIn: false,\n              explicitLogout: true\n            }\n          }, () => {});\n        }\n      } catch (_) {}\n      // Remove only auth-related keys to avoid wiping unrelated app state\n      try {\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('token');\n        localStorage.removeItem('refreshToken');\n        localStorage.removeItem('user');\n      } catch (_) {}\n      // Clear extension token sync\n      try {\n        var _window$chrome3, _window$chrome3$stora;\n        if (typeof window !== 'undefined' && (_window$chrome3 = window.chrome) !== null && _window$chrome3 !== void 0 && (_window$chrome3$stora = _window$chrome3.storage) !== null && _window$chrome3$stora !== void 0 && _window$chrome3$stora.local) {\n          window.chrome.storage.local.remove(['toolToken', 'toolUser']);\n        }\n      } catch (_) {}\n      authAPI.clearAuthToken();\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT\n      });\n      toast.success('Logged out successfully!');\n    }\n  };\n\n  // =============================\n  // Update User Function\n  // =============================\n  const updateUser = userData => {\n    const updatedUser = {\n      ...state.user,\n      ...userData\n    };\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n    dispatch({\n      type: AUTH_ACTIONS.UPDATE_USER,\n      payload: userData\n    });\n  };\n\n  // =============================\n  // Global Value\n  // =============================\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n};\n\n// =============================\n// Hook to Use Context\n// =============================\n_s(AuthProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// =============================\n// Always Apply Token on Load\n// =============================\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst savedToken = localStorage.getItem('authToken') || localStorage.getItem('token');\nif (savedToken) {\n  authAPI.setAuthToken(savedToken);\n}\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","toast","jsxDEV","_jsxDEV","initialState","user","token","loading","error","AUTH_ACTIONS","SET_LOADING","LOGIN_SUCCESS","LOGOUT","SET_ERROR","CLEAR_ERROR","UPDATE_USER","authReducer","state","action","type","payload","AuthContext","AuthProvider","children","_s","dispatch","loadUser","localStorage","getItem","userStr","setAuthToken","JSON","parse","getProfile","then","profile","setItem","stringify","catch","console","clear","clearAuthToken","timer","setTimeout","_window$location","refreshToken","apiBase","window","location","origin","undefined","dispatchEvent","CustomEvent","detail","authToken","apiBaseUrl","_","clearTimeout","login","email","password","log","result","data","success","_window$chrome","_window$chrome$storag","chrome","storage","local","set","toolToken","toolUser","_window","_window$chrome2","_window$chrome2$runti","extId","process","env","REACT_APP_EXTENSION_ID","__API_BASE_URL__","runtime","sendMessage","source","isLoggedIn","userEmail","userName","name","fullName","username","userId","id","_id","err","warn","message","friendly","_error$response","status","response","test","register","userData","accessToken","_error$response2","_error$response2$data","logout","explicitLogout","ts","Date","now","_window2","_window2$chrome","_window2$chrome$runti","removeItem","_window$chrome3","_window$chrome3$stora","remove","updateUser","updatedUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","savedToken","$RefreshReg$"],"sources":["C:/Users/krush/OneDrive/Desktop/Final/linkedin-automation-saas/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\n\n// =============================\n// Initial State\n// =============================\nconst initialState = {\n  user: null,\n  token: null,\n  loading: true,\n  error: null,\n};\n\n// =============================\n// Action Types\n// =============================\nconst AUTH_ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGOUT: 'LOGOUT',\n  SET_ERROR: 'SET_ERROR',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  UPDATE_USER: 'UPDATE_USER',\n};\n\n// =============================\n// Reducer\n// =============================\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.SET_LOADING:\n      return { ...state, loading: action.payload };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return { ...state, user: action.payload.user, token: action.payload.token, loading: false, error: null };\n    case AUTH_ACTIONS.LOGOUT:\n      return { ...state, user: null, token: null, loading: false, error: null };\n    case AUTH_ACTIONS.SET_ERROR:\n      return { ...state, error: action.payload, loading: false };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return { ...state, error: null };\n    case AUTH_ACTIONS.UPDATE_USER:\n      return { ...state, user: { ...state.user, ...action.payload } };\n    default:\n      return state;\n  }\n};\n\n// =============================\n// Context Setup\n// =============================\nconst AuthContext = createContext();\n\n// =============================\n// Provider Component\n// =============================\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // =============================\n  // Auto-load user + token on app start\n  // =============================\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        const token = localStorage.getItem('authToken') || localStorage.getItem('token');\n        const userStr = localStorage.getItem('user');\n\n        if (token) {\n          // Ensure axios has token\n          authAPI.setAuthToken(token);\n        }\n\n        if (token && userStr) {\n          const user = JSON.parse(userStr);\n          dispatch({ type: AUTH_ACTIONS.LOGIN_SUCCESS, payload: { user, token } });\n        } else if (token) {\n          // If only token is present, try to fetch user\n          authAPI.setAuthToken(token);\n          authAPI.getProfile().then(profile => {\n            if (profile) {\n              localStorage.setItem('user', JSON.stringify(profile));\n              dispatch({ type: AUTH_ACTIONS.LOGIN_SUCCESS, payload: { user: profile, token } });\n            } else {\n              dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\n            }\n          }).catch(() => {\n            dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\n          });\n        } else {\n          dispatch({ type: AUTH_ACTIONS.LOGOUT });\n          dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\n        }\n      } catch (error) {\n        console.error('‚ùå Error loading user:', error);\n        localStorage.clear();\n        authAPI.clearAuthToken();\n        dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\n      }\n    };\n    loadUser();\n  }, []);\n\n  // Re-emit login signal on startup when tokens are present to aid extension detection\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      try {\n        const token = localStorage.getItem('authToken') || localStorage.getItem('token');\n        const refreshToken = localStorage.getItem('refreshToken') || localStorage.getItem('refresh_token') || null;\n        const userStr = localStorage.getItem('user');\n        const user = userStr ? JSON.parse(userStr) : null;\n        const apiBase = (typeof window !== 'undefined' && window.location?.origin) ? window.location.origin : undefined;\n        if (token && typeof window !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('scralytics:loginSuccess', {\n            detail: { authToken: token, refreshToken, user, apiBaseUrl: apiBase }\n          }));\n        }\n      } catch (_) {}\n    }, 1500);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // =============================\n  // Login Function\n  // =============================\n  const login = async (email, password) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\n      dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n\n      console.log('Login function called'); // Add this line\n\n      console.log('üîê Attempting login for:', email);\n      const result = await authAPI.login(email, password);\n      const data = result || {};\n\n      if (data.success) {\n        const user = data.user || null;\n        const token = data.authToken || null;\n        const refreshToken = data.refreshToken || null;\n\n        // Store tokens and user info\n        localStorage.setItem('authToken', token);\n        localStorage.setItem('token', token); // for backward compatibility\n        localStorage.setItem('refreshToken', refreshToken || '');\n        localStorage.setItem('user', JSON.stringify(user));\n\n        // Sync token to chrome.storage for extension\n        try {\n          if (typeof window !== 'undefined' && window.chrome?.storage?.local) {\n            window.chrome.storage.local.set({ toolToken: token, toolUser: user });\n          }\n        } catch (_) {}\n\n        // Apply token globally\n        authAPI.setAuthToken(token);\n\n        // Update state\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: { user, token },\n        });\n\n        // Best-effort: notify extension of login with token and API base\n        try {\n          const extId = process.env.REACT_APP_EXTENSION_ID || localStorage.getItem('EXTENSION_ID');\n          const apiBase = window.__API_BASE_URL__\n            || localStorage.getItem('API_BASE_URL')\n            || (typeof window !== 'undefined' ? window.location.origin : undefined);\n          // Dispatch a window event so the content script can react without polling\n          try {\n            window.dispatchEvent(new CustomEvent('scralytics:loginSuccess', {\n              detail: { authToken: token, user, apiBaseUrl: apiBase }\n            }));\n          } catch (_) {}\n\n          // Also notify extension directly\n          if (extId && window?.chrome?.runtime?.sendMessage) {\n            const payload = {\n              type: 'SCRALYTICS_LOGIN_STATUS',\n              source: 'web_app',\n              data: {\n                isLoggedIn: true,\n                authToken: token,\n                apiBaseUrl: apiBase,\n                userEmail: user?.email,\n                userName: user?.name || user?.fullName || user?.username,\n                userId: user?.id || user?._id\n              }\n            };\n            window.chrome.runtime.sendMessage(extId, payload, () => {});\n            console.log('‚úÖ Token sent to extension');\n          }\n        } catch (err) {\n          console.warn('‚ö†Ô∏è Failed to send token to extension:', err?.message || err);\n        }\n\n        toast.success('Login successful!');\n        console.log('‚úÖ Token saved and applied');\n        return { success: true };\n      } else {\n        const friendly = data.message || 'Login failed';\n        console.error('‚ùå Login failed:', friendly);\n        dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: friendly });\n        toast.error(friendly);\n        return { success: false, message: friendly };\n      }\n    } catch (error) {\n      const status = error?.status || error?.response?.status;\n      let message = error?.message || 'Login failed';\n\n      if (!status && /Network Error/i.test(message)) {\n        message = 'Backend unreachable. Make sure the server is running.';\n      } else if (status === 401) {\n        message = 'Invalid credentials. Please check your email and password.';\n      } else if (status === 429) {\n        message = 'Too many attempts. Please wait a moment.';\n      } else if (status === 403) {\n        message = 'Access denied. You may not have permission.';\n      } else if (status === 500) {\n        message = 'Server error. Try again later.';\n      }\n\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: message });\n      toast.error(message);\n      console.error(`‚ùå Login error: ${message}`);\n      return { success: false, message };\n    } finally {\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\n    }\n  };\n\n  // =============================\n  // Register Function\n  // =============================\n  const register = async (userData) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\n      dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n\n      const response = await authAPI.register(userData);\n\n      if (response.success) {\n        const { user, accessToken, refreshToken } = response.data;\n\n        localStorage.setItem('token', accessToken);\n        localStorage.setItem('refreshToken', refreshToken);\n        localStorage.setItem('user', JSON.stringify(user));\n\n        authAPI.setAuthToken(accessToken);\n\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: { user, token: accessToken },\n        });\n\n        toast.success('Registration successful!');\n        return { success: true };\n      } else {\n        const message = response.message || 'Registration failed';\n        dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: message });\n        toast.error(message);\n        return { success: false, message };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Registration failed';\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: message });\n      toast.error(message);\n      return { success: false, message };\n    } finally {\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\n    }\n  };\n\n  // =============================\n  // Logout Function\n  // =============================\n  const logout = async () => {\n    try {\n      await authAPI.logout().catch(() => {});\n    } finally {\n      // Fire explicit logout event for content script listeners\n      try {\n        if (typeof window !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('scralytics:logout', {\n            detail: { explicitLogout: true, ts: Date.now() }\n          }));\n        }\n      } catch (_) {}\n      // Notify extension of logout\n      try {\n        const extId = process.env.REACT_APP_EXTENSION_ID || localStorage.getItem('EXTENSION_ID');\n        if (extId && window?.chrome?.runtime?.sendMessage) {\n          window.chrome.runtime.sendMessage(\n            extId,\n            { type: 'SCRALYTICS_LOGIN_STATUS', source: 'web_app', data: { isLoggedIn: false, explicitLogout: true } },\n            () => {}\n          );\n        }\n      } catch (_) {}\n      // Remove only auth-related keys to avoid wiping unrelated app state\n      try {\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('token');\n        localStorage.removeItem('refreshToken');\n        localStorage.removeItem('user');\n      } catch (_) {}\n      // Clear extension token sync\n      try {\n        if (typeof window !== 'undefined' && window.chrome?.storage?.local) {\n          window.chrome.storage.local.remove(['toolToken', 'toolUser']);\n        }\n      } catch (_) {}\n      authAPI.clearAuthToken();\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\n      toast.success('Logged out successfully!');\n    }\n  };\n\n  // =============================\n  // Update User Function\n  // =============================\n  const updateUser = (userData) => {\n    const updatedUser = { ...state.user, ...userData };\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n    dispatch({ type: AUTH_ACTIONS.UPDATE_USER, payload: userData });\n  };\n\n  // =============================\n  // Global Value\n  // =============================\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// =============================\n// Hook to Use Context\n// =============================\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// =============================\n// Always Apply Token on Load\n// =============================\nconst savedToken = localStorage.getItem('authToken') || localStorage.getItem('token');\nif (savedToken) {\n  authAPI.setAuthToken(savedToken);\n}\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}