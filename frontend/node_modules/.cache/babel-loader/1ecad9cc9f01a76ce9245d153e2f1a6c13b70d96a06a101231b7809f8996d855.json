{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krush\\\\OneDrive\\\\Desktop\\\\Final\\\\linkedin-automation-saas\\\\frontend\\\\src\\\\components\\\\Jobs\\\\NewJobModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { XMarkIcon, DocumentArrowUpIcon, MagnifyingGlassIcon, BuildingOfficeIcon, UserIcon } from '@heroicons/react/24/outline';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewJobModal = ({\n  isOpen,\n  onClose,\n  onSubmit\n}) => {\n  _s();\n  const [step, setStep] = useState(1);\n  const [jobType, setJobType] = useState('');\n  const [formData, setFormData] = useState({\n    jobType: '',\n    urls: [],\n    searchQuery: '',\n    maxPages: 5,\n    jobName: '',\n    accountSelectionMode: 'rotation',\n    selectedAccountIds: [],\n    file: null\n  });\n  const [urlsText, setUrlsText] = useState('');\n  const [inputMethod, setInputMethod] = useState('urls'); // 'urls' or 'file'\n  const [availableAccounts, setAvailableAccounts] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [dragActive, setDragActive] = useState(false);\n  const jobTypes = [{\n    id: 'profiles',\n    name: 'Scrape LinkedIn Profiles',\n    description: 'Extract profile data from LinkedIn profile URLs',\n    icon: UserIcon,\n    color: 'bg-blue-500',\n    inputType: 'urls',\n    placeholder: 'Enter LinkedIn profile URLs (one per line)'\n  }, {\n    id: 'companies',\n    name: 'Scrape Company Profiles',\n    description: 'Extract company data from LinkedIn company URLs',\n    icon: BuildingOfficeIcon,\n    color: 'bg-green-500',\n    inputType: 'urls',\n    placeholder: 'Enter LinkedIn company URLs (one per line)'\n  }, {\n    id: 'sales_navigator',\n    name: 'Sales Navigator Search',\n    description: 'Scrape Sales Navigator search results with pagination',\n    icon: MagnifyingGlassIcon,\n    color: 'bg-purple-500',\n    inputType: 'search',\n    placeholder: 'Enter search query or Sales Navigator URL'\n  }];\n  useEffect(() => {\n    if (isOpen) {\n      fetchAvailableAccounts();\n    }\n  }, [isOpen]);\n  const fetchAvailableAccounts = async () => {\n    try {\n      const response = await api.get('/api/linkedin-accounts/available');\n      if (response.data.success) {\n        setAvailableAccounts(response.data.data || []);\n      }\n    } catch (error) {\n      console.error('Failed to fetch available accounts:', error);\n    }\n  };\n  const resetForm = () => {\n    setStep(1);\n    setJobType('');\n    setFormData({\n      jobType: '',\n      urls: [],\n      searchQuery: '',\n      maxPages: 5,\n      jobName: '',\n      accountSelectionMode: 'rotation',\n      selectedAccountIds: [],\n      file: null\n    });\n    setUrlsText('');\n    setInputMethod('urls');\n    setErrors({});\n    setDragActive(false);\n  };\n  const handleClose = () => {\n    resetForm();\n    onClose();\n  };\n  const handleJobTypeSelect = type => {\n    setJobType(type);\n    setFormData(prev => ({\n      ...prev,\n      jobType: type\n    }));\n    setStep(2);\n  };\n  const handleUrlsChange = e => {\n    const text = e.target.value;\n    setUrlsText(text);\n    const urls = text.split('\\n').filter(url => url.trim().length > 0);\n    setFormData(prev => ({\n      ...prev,\n      urls\n    }));\n  };\n  const handleFileUpload = file => {\n    if (file) {\n      const allowedTypes = ['.csv', '.xlsx', '.xls'];\n      const fileExtension = file.name.toLowerCase().substring(file.name.lastIndexOf('.'));\n      if (!allowedTypes.includes(fileExtension)) {\n        setErrors(prev => ({\n          ...prev,\n          file: 'Please upload a CSV or Excel file'\n        }));\n        return;\n      }\n      setFormData(prev => ({\n        ...prev,\n        file\n      }));\n      setErrors(prev => ({\n        ...prev,\n        file: ''\n      }));\n    }\n  };\n  const handleDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === 'dragenter' || e.type === 'dragover') {\n      setDragActive(true);\n    } else if (e.type === 'dragleave') {\n      setDragActive(false);\n    }\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      handleFileUpload(e.dataTransfer.files[0]);\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.jobName.trim()) {\n      newErrors.jobName = 'Job name is required';\n    }\n    if (jobType === 'sales_navigator') {\n      if (!formData.searchQuery.trim()) {\n        newErrors.searchQuery = 'Search query or Sales Navigator URL is required';\n      }\n    } else {\n      if (inputMethod === 'file') {\n        if (!formData.file) {\n          newErrors.file = 'Please upload a CSV or Excel file';\n        }\n      } else {\n        // Parse URLs from text input\n        const urls = urlsText.split('\\n').filter(url => url.trim().length > 0);\n        if (urls.length === 0) {\n          newErrors.urls = 'Please enter at least one LinkedIn URL';\n        } else {\n          // Validate URL format\n          const invalidUrls = urls.filter(url => !url.includes('linkedin.com'));\n          if (invalidUrls.length > 0) {\n            newErrors.urls = 'All URLs must be LinkedIn URLs';\n          }\n        }\n      }\n    }\n    if (availableAccounts.length === 0) {\n      newErrors.accounts = 'No LinkedIn accounts available. Please add accounts first.';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const downloadTemplate = async jobType => {\n    try {\n      const response = await api.get(`/api/templates/${jobType}`, {\n        responseType: 'blob'\n      });\n\n      // Create download link\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n\n      // Set filename based on job type\n      const filenames = {\n        'profiles': 'profile-scraping-template.csv',\n        'companies': 'company-scraping-template.csv',\n        'sales_navigator': 'sales-navigator-template.csv'\n      };\n      link.setAttribute('download', filenames[jobType] || 'template.csv');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error downloading template:', error);\n      // You could add a toast notification here\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      onSubmit(formData);\n      handleClose();\n    }\n  };\n  const selectedJobType = jobTypes.find(type => type.id === jobType);\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center p-6 border-b\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-900\",\n          children: step === 1 ? 'Create New Job' : `Create ${selectedJobType === null || selectedJobType === void 0 ? void 0 : selectedJobType.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClose,\n          className: \"text-gray-400 hover:text-gray-600 transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"p-6\",\n        children: step === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900 mb-4\",\n            children: \"Select Job Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 gap-4\",\n            children: jobTypes.map(type => {\n              const IconComponent = type.icon;\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => handleJobTypeSelect(type.id),\n                className: \"p-4 border-2 border-gray-200 rounded-lg hover:border-blue-500 hover:bg-blue-50 transition-all text-left group\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start space-x-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `p-2 rounded-lg ${type.color} text-white group-hover:scale-110 transition-transform`,\n                    children: /*#__PURE__*/_jsxDEV(IconComponent, {\n                      className: \"h-6 w-6\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-medium text-gray-900 group-hover:text-blue-600\",\n                      children: type.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-gray-600 mt-1\",\n                      children: type.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 23\n                }, this)\n              }, type.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Job Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formData.jobName,\n              onChange: e => setFormData(prev => ({\n                ...prev,\n                jobName: e.target.value\n              })),\n              className: `w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${errors.jobName ? 'border-red-500' : 'border-gray-300'}`,\n              placeholder: \"Enter a descriptive name for this job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), errors.jobName && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-sm mt-1\",\n              children: errors.jobName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), jobType === 'sales_navigator' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Search Query or Sales Navigator URL *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: formData.searchQuery,\n                onChange: e => setFormData(prev => ({\n                  ...prev,\n                  searchQuery: e.target.value\n                })),\n                className: `w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${errors.searchQuery ? 'border-red-500' : 'border-gray-300'}`,\n                placeholder: \"e.g., Software Engineer San Francisco OR https://www.linkedin.com/sales/search/...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this), errors.searchQuery && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-red-500 text-sm mt-1\",\n                children: errors.searchQuery\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Max Pages to Scrape\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"1\",\n                max: \"25\",\n                value: formData.maxPages,\n                onChange: e => setFormData(prev => ({\n                  ...prev,\n                  maxPages: parseInt(e.target.value) || 5\n                })),\n                className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500 text-xs mt-1\",\n                children: \"Number of result pages to scrape (1-25)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"LinkedIn URLs *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-4 mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center cursor-pointer\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"inputMethod\",\n                  value: \"urls\",\n                  checked: inputMethod === 'urls',\n                  onChange: e => setInputMethod(e.target.value),\n                  className: \"mr-2 text-blue-600 focus:ring-blue-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm font-medium text-gray-900\",\n                  children: \"Paste URLs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center cursor-pointer\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"inputMethod\",\n                  value: \"file\",\n                  checked: inputMethod === 'file',\n                  onChange: e => setInputMethod(e.target.value),\n                  className: \"mr-2 text-blue-600 focus:ring-blue-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm font-medium text-gray-900\",\n                  children: \"Upload CSV/Excel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 19\n            }, this), inputMethod === 'urls' ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-600\",\n                  children: \"Enter URLs manually:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 26\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => downloadTemplate(jobType),\n                  className: \"text-blue-500 hover:text-blue-700 text-sm underline\",\n                  children: \"\\uD83D\\uDCE5 Download Sample Template\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 26\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: urlsText,\n                onChange: handleUrlsChange,\n                rows: 8,\n                className: `w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${errors.urls ? 'border-red-500' : 'border-gray-300'}`,\n                placeholder: (selectedJobType === null || selectedJobType === void 0 ? void 0 : selectedJobType.placeholder) || 'Enter LinkedIn URLs (one per line)'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 24\n              }, this), errors.urls && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-red-500 text-sm mt-1\",\n                children: errors.urls\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 26\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500 text-xs mt-2\",\n                children: [\"Enter one LinkedIn URL per line. \", formData.urls.length, \" URLs entered.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 22\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `border-2 border-dashed rounded-lg p-6 text-center transition-colors ${dragActive ? 'border-blue-500 bg-blue-50' : 'border-gray-300'} ${errors.file ? 'border-red-500' : ''}`,\n                onDragEnter: handleDrag,\n                onDragLeave: handleDrag,\n                onDragOver: handleDrag,\n                onDrop: handleDrop,\n                children: [/*#__PURE__*/_jsxDEV(DocumentArrowUpIcon, {\n                  className: \"h-12 w-12 text-gray-400 mx-auto mb-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 25\n                }, this), formData.file ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-green-600 font-medium\",\n                    children: formData.file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-500 text-sm\",\n                    children: \"File uploaded successfully\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-600 mb-2\",\n                    children: \"Drag and drop your CSV/Excel file here, or\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    accept: \".csv,.xlsx,.xls\",\n                    onChange: e => handleFileUpload(e.target.files[0]),\n                    className: \"hidden\",\n                    id: \"file-upload\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"file-upload\",\n                    className: \"inline-block bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 cursor-pointer transition-colors\",\n                    children: \"Choose File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 23\n              }, this), errors.file && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-red-500 text-sm mt-1\",\n                children: errors.file\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500 text-xs mt-2\",\n                children: \"Supported formats: CSV, Excel (.xlsx, .xls). First column should contain LinkedIn URLs.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"LinkedIn Accounts *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this), availableAccounts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-4 bg-yellow-50 border border-yellow-200 rounded-md\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-yellow-800 text-sm\",\n                children: \"No LinkedIn accounts available. Please add accounts first in the LinkedIn Accounts section.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-4 bg-green-50 border border-green-200 rounded-md\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-green-800 text-sm\",\n                children: [\"\\u2705 \", availableAccounts.length, \" active LinkedIn account(s) available for scraping.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 19\n            }, this), errors.accounts && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-sm mt-1\",\n              children: errors.accounts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between pt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setStep(1),\n              className: \"px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\",\n              children: \"\\u2190 Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleClose,\n                className: \"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                disabled: availableAccounts.length === 0,\n                className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\",\n                children: \"Create Job\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(NewJobModal, \"Tltv/IIIqHiAJgKH6DrzdbailhE=\");\n_c = NewJobModal;\nexport default NewJobModal;\nvar _c;\n$RefreshReg$(_c, \"NewJobModal\");","map":{"version":3,"names":["React","useState","useEffect","XMarkIcon","DocumentArrowUpIcon","MagnifyingGlassIcon","BuildingOfficeIcon","UserIcon","api","jsxDEV","_jsxDEV","NewJobModal","isOpen","onClose","onSubmit","_s","step","setStep","jobType","setJobType","formData","setFormData","urls","searchQuery","maxPages","jobName","accountSelectionMode","selectedAccountIds","file","urlsText","setUrlsText","inputMethod","setInputMethod","availableAccounts","setAvailableAccounts","errors","setErrors","dragActive","setDragActive","jobTypes","id","name","description","icon","color","inputType","placeholder","fetchAvailableAccounts","response","get","data","success","error","console","resetForm","handleClose","handleJobTypeSelect","type","prev","handleUrlsChange","e","text","target","value","split","filter","url","trim","length","handleFileUpload","allowedTypes","fileExtension","toLowerCase","substring","lastIndexOf","includes","handleDrag","preventDefault","stopPropagation","handleDrop","dataTransfer","files","validateForm","newErrors","invalidUrls","accounts","Object","keys","downloadTemplate","responseType","window","URL","createObjectURL","Blob","link","document","createElement","href","filenames","setAttribute","body","appendChild","click","remove","revokeObjectURL","handleSubmit","selectedJobType","find","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","IconComponent","onChange","min","max","parseInt","checked","rows","onDragEnter","onDragLeave","onDragOver","onDrop","accept","htmlFor","disabled","_c","$RefreshReg$"],"sources":["C:/Users/krush/OneDrive/Desktop/Final/linkedin-automation-saas/frontend/src/components/Jobs/NewJobModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { XMarkIcon, DocumentArrowUpIcon, MagnifyingGlassIcon, BuildingOfficeIcon, UserIcon } from '@heroicons/react/24/outline';\nimport api from '../../services/api';\n\nconst NewJobModal = ({ isOpen, onClose, onSubmit }) => {\n  const [step, setStep] = useState(1);\n  const [jobType, setJobType] = useState('');\n  const [formData, setFormData] = useState({\n    jobType: '',\n    urls: [],\n    searchQuery: '',\n    maxPages: 5,\n    jobName: '',\n    accountSelectionMode: 'rotation',\n    selectedAccountIds: [],\n    file: null\n  });\n  const [urlsText, setUrlsText] = useState('');\n  const [inputMethod, setInputMethod] = useState('urls'); // 'urls' or 'file'\n  const [availableAccounts, setAvailableAccounts] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [dragActive, setDragActive] = useState(false);\n\n  const jobTypes = [\n    {\n      id: 'profiles',\n      name: 'Scrape LinkedIn Profiles',\n      description: 'Extract profile data from LinkedIn profile URLs',\n      icon: UserIcon,\n      color: 'bg-blue-500',\n      inputType: 'urls',\n      placeholder: 'Enter LinkedIn profile URLs (one per line)'\n    },\n    {\n      id: 'companies',\n      name: 'Scrape Company Profiles',\n      description: 'Extract company data from LinkedIn company URLs',\n      icon: BuildingOfficeIcon,\n      color: 'bg-green-500',\n      inputType: 'urls',\n      placeholder: 'Enter LinkedIn company URLs (one per line)'\n    },\n    {\n      id: 'sales_navigator',\n      name: 'Sales Navigator Search',\n      description: 'Scrape Sales Navigator search results with pagination',\n      icon: MagnifyingGlassIcon,\n      color: 'bg-purple-500',\n      inputType: 'search',\n      placeholder: 'Enter search query or Sales Navigator URL'\n    }\n  ];\n\n  useEffect(() => {\n    if (isOpen) {\n      fetchAvailableAccounts();\n    }\n  }, [isOpen]);\n\n  const fetchAvailableAccounts = async () => {\n    try {\n      const response = await api.get('/api/linkedin-accounts/available');\n      if (response.data.success) {\n        setAvailableAccounts(response.data.data || []);\n      }\n    } catch (error) {\n      console.error('Failed to fetch available accounts:', error);\n    }\n  };\n\n  const resetForm = () => {\n    setStep(1);\n    setJobType('');\n    setFormData({\n      jobType: '',\n      urls: [],\n      searchQuery: '',\n      maxPages: 5,\n      jobName: '',\n      accountSelectionMode: 'rotation',\n      selectedAccountIds: [],\n      file: null\n    });\n    setUrlsText('');\n    setInputMethod('urls');\n    setErrors({});\n    setDragActive(false);\n  };\n\n  const handleClose = () => {\n    resetForm();\n    onClose();\n  };\n\n  const handleJobTypeSelect = (type) => {\n    setJobType(type);\n    setFormData(prev => ({ ...prev, jobType: type }));\n    setStep(2);\n  };\n\n  const handleUrlsChange = (e) => {\n    const text = e.target.value;\n    setUrlsText(text);\n    const urls = text.split('\\n').filter(url => url.trim().length > 0);\n    setFormData(prev => ({ ...prev, urls }));\n  };\n\n  const handleFileUpload = (file) => {\n    if (file) {\n      const allowedTypes = ['.csv', '.xlsx', '.xls'];\n      const fileExtension = file.name.toLowerCase().substring(file.name.lastIndexOf('.'));\n      \n      if (!allowedTypes.includes(fileExtension)) {\n        setErrors(prev => ({ ...prev, file: 'Please upload a CSV or Excel file' }));\n        return;\n      }\n      \n      setFormData(prev => ({ ...prev, file }));\n      setErrors(prev => ({ ...prev, file: '' }));\n    }\n  };\n\n  const handleDrag = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === 'dragenter' || e.type === 'dragover') {\n      setDragActive(true);\n    } else if (e.type === 'dragleave') {\n      setDragActive(false);\n    }\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    \n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      handleFileUpload(e.dataTransfer.files[0]);\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.jobName.trim()) {\n      newErrors.jobName = 'Job name is required';\n    }\n    \n    if (jobType === 'sales_navigator') {\n      if (!formData.searchQuery.trim()) {\n        newErrors.searchQuery = 'Search query or Sales Navigator URL is required';\n      }\n    } else {\n      if (inputMethod === 'file') {\n        if (!formData.file) {\n          newErrors.file = 'Please upload a CSV or Excel file';\n        }\n      } else {\n        // Parse URLs from text input\n        const urls = urlsText.split('\\n').filter(url => url.trim().length > 0);\n        if (urls.length === 0) {\n          newErrors.urls = 'Please enter at least one LinkedIn URL';\n        } else {\n          // Validate URL format\n          const invalidUrls = urls.filter(url => !url.includes('linkedin.com'));\n          if (invalidUrls.length > 0) {\n            newErrors.urls = 'All URLs must be LinkedIn URLs';\n          }\n        }\n      }\n    }\n    \n    if (availableAccounts.length === 0) {\n      newErrors.accounts = 'No LinkedIn accounts available. Please add accounts first.';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const downloadTemplate = async (jobType) => {\n    try {\n      const response = await api.get(`/api/templates/${jobType}`, {\n        responseType: 'blob'\n      });\n      \n      // Create download link\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      \n      // Set filename based on job type\n      const filenames = {\n        'profiles': 'profile-scraping-template.csv',\n        'companies': 'company-scraping-template.csv',\n        'sales_navigator': 'sales-navigator-template.csv'\n      };\n      \n      link.setAttribute('download', filenames[jobType] || 'template.csv');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      window.URL.revokeObjectURL(url);\n      \n    } catch (error) {\n      console.error('Error downloading template:', error);\n      // You could add a toast notification here\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (validateForm()) {\n      onSubmit(formData);\n      handleClose();\n    }\n  };\n\n  const selectedJobType = jobTypes.find(type => type.id === jobType);\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\n        <div className=\"flex justify-between items-center p-6 border-b\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">\n            {step === 1 ? 'Create New Job' : `Create ${selectedJobType?.name}`}\n          </h2>\n          <button\n            onClick={handleClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            <XMarkIcon className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"p-6\">\n          {step === 1 ? (\n            <div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n                Select Job Type\n              </h3>\n              <div className=\"grid grid-cols-1 gap-4\">\n                {jobTypes.map((type) => {\n                  const IconComponent = type.icon;\n                  return (\n                    <button\n                      key={type.id}\n                      type=\"button\"\n                      onClick={() => handleJobTypeSelect(type.id)}\n                      className=\"p-4 border-2 border-gray-200 rounded-lg hover:border-blue-500 hover:bg-blue-50 transition-all text-left group\"\n                    >\n                      <div className=\"flex items-start space-x-3\">\n                        <div className={`p-2 rounded-lg ${type.color} text-white group-hover:scale-110 transition-transform`}>\n                          <IconComponent className=\"h-6 w-6\" />\n                        </div>\n                        <div className=\"flex-1\">\n                          <h4 className=\"font-medium text-gray-900 group-hover:text-blue-600\">\n                            {type.name}\n                          </h4>\n                          <p className=\"text-sm text-gray-600 mt-1\">\n                            {type.description}\n                          </p>\n                        </div>\n                      </div>\n                    </button>\n                  );\n                })}\n              </div>\n            </div>\n          ) : (\n            <div className=\"space-y-6\">\n              {/* Job Name */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Job Name *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.jobName}\n                  onChange={(e) => setFormData(prev => ({ ...prev, jobName: e.target.value }))}\n                  className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n                    errors.jobName ? 'border-red-500' : 'border-gray-300'\n                  }`}\n                  placeholder=\"Enter a descriptive name for this job\"\n                />\n                {errors.jobName && (\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.jobName}</p>\n                )}\n              </div>\n\n              {/* URL Input or Search Query */}\n              {jobType === 'sales_navigator' ? (\n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Search Query or Sales Navigator URL *\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.searchQuery}\n                      onChange={(e) => setFormData(prev => ({ ...prev, searchQuery: e.target.value }))}\n                      className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n                        errors.searchQuery ? 'border-red-500' : 'border-gray-300'\n                      }`}\n                      placeholder=\"e.g., Software Engineer San Francisco OR https://www.linkedin.com/sales/search/...\"\n                    />\n                    {errors.searchQuery && (\n                      <p className=\"text-red-500 text-sm mt-1\">{errors.searchQuery}</p>\n                    )}\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Max Pages to Scrape\n                    </label>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"25\"\n                      value={formData.maxPages}\n                      onChange={(e) => setFormData(prev => ({ ...prev, maxPages: parseInt(e.target.value) || 5 }))}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <p className=\"text-gray-500 text-xs mt-1\">\n                      Number of result pages to scrape (1-25)\n                    </p>\n                  </div>\n                </div>\n              ) : (\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    LinkedIn URLs *\n                  </label>\n                  \n                  {/* Input Method Selection */}\n                  <div className=\"flex space-x-4 mb-4\">\n                    <label className=\"flex items-center cursor-pointer\">\n                      <input\n                        type=\"radio\"\n                        name=\"inputMethod\"\n                        value=\"urls\"\n                        checked={inputMethod === 'urls'}\n                        onChange={(e) => setInputMethod(e.target.value)}\n                        className=\"mr-2 text-blue-600 focus:ring-blue-500\"\n                      />\n                      <span className=\"text-sm font-medium text-gray-900\">Paste URLs</span>\n                    </label>\n                    <label className=\"flex items-center cursor-pointer\">\n                      <input\n                        type=\"radio\"\n                        name=\"inputMethod\"\n                        value=\"file\"\n                        checked={inputMethod === 'file'}\n                        onChange={(e) => setInputMethod(e.target.value)}\n                        className=\"mr-2 text-blue-600 focus:ring-blue-500\"\n                      />\n                      <span className=\"text-sm font-medium text-gray-900\">Upload CSV/Excel</span>\n                    </label>\n                  </div>\n                  \n                  {inputMethod === 'urls' ? (\n                     <div>\n                       <div className=\"flex justify-between items-center mb-2\">\n                         <span className=\"text-sm text-gray-600\">Enter URLs manually:</span>\n                         <button\n                           type=\"button\"\n                           onClick={() => downloadTemplate(jobType)}\n                           className=\"text-blue-500 hover:text-blue-700 text-sm underline\"\n                         >\n                           📥 Download Sample Template\n                         </button>\n                       </div>\n                       <textarea\n                         value={urlsText}\n                         onChange={handleUrlsChange}\n                         rows={8}\n                         className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n                           errors.urls ? 'border-red-500' : 'border-gray-300'\n                         }`}\n                         placeholder={selectedJobType?.placeholder || 'Enter LinkedIn URLs (one per line)'}\n                       />\n                       {errors.urls && (\n                         <p className=\"text-red-500 text-sm mt-1\">{errors.urls}</p>\n                       )}\n                       <p className=\"text-gray-500 text-xs mt-2\">\n                         Enter one LinkedIn URL per line. {formData.urls.length} URLs entered.\n                       </p>\n                     </div>\n                  ) : (\n                    <div>\n                      <div\n                        className={`border-2 border-dashed rounded-lg p-6 text-center transition-colors ${\n                          dragActive ? 'border-blue-500 bg-blue-50' : 'border-gray-300'\n                        } ${errors.file ? 'border-red-500' : ''}`}\n                        onDragEnter={handleDrag}\n                        onDragLeave={handleDrag}\n                        onDragOver={handleDrag}\n                        onDrop={handleDrop}\n                      >\n                        <DocumentArrowUpIcon className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                        {formData.file ? (\n                          <div>\n                            <p className=\"text-green-600 font-medium\">{formData.file.name}</p>\n                            <p className=\"text-gray-500 text-sm\">File uploaded successfully</p>\n                          </div>\n                        ) : (\n                          <div>\n                            <p className=\"text-gray-600 mb-2\">\n                              Drag and drop your CSV/Excel file here, or\n                            </p>\n                            <input\n                              type=\"file\"\n                              accept=\".csv,.xlsx,.xls\"\n                              onChange={(e) => handleFileUpload(e.target.files[0])}\n                              className=\"hidden\"\n                              id=\"file-upload\"\n                            />\n                            <label\n                              htmlFor=\"file-upload\"\n                              className=\"inline-block bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 cursor-pointer transition-colors\"\n                            >\n                              Choose File\n                            </label>\n                          </div>\n                        )}\n                      </div>\n                      {errors.file && (\n                        <p className=\"text-red-500 text-sm mt-1\">{errors.file}</p>\n                      )}\n                      <p className=\"text-gray-500 text-xs mt-2\">\n                        Supported formats: CSV, Excel (.xlsx, .xls). First column should contain LinkedIn URLs.\n                      </p>\n                    </div>\n                  )}\n                </div>\n              )}\n\n              {/* Account Selection */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  LinkedIn Accounts *\n                </label>\n                \n                {availableAccounts.length === 0 ? (\n                  <div className=\"p-4 bg-yellow-50 border border-yellow-200 rounded-md\">\n                    <p className=\"text-yellow-800 text-sm\">\n                      No LinkedIn accounts available. Please add accounts first in the LinkedIn Accounts section.\n                    </p>\n                  </div>\n                ) : (\n                  <div className=\"p-4 bg-green-50 border border-green-200 rounded-md\">\n                    <p className=\"text-green-800 text-sm\">\n                      ✅ {availableAccounts.length} active LinkedIn account(s) available for scraping.\n                    </p>\n                  </div>\n                )}\n                \n                {errors.accounts && (\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.accounts}</p>\n                )}\n              </div>\n\n              {/* Form Actions */}\n              <div className=\"flex justify-between pt-4\">\n                <button\n                  type=\"button\"\n                  onClick={() => setStep(1)}\n                  className=\"px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\"\n                >\n                  ← Back\n                </button>\n                <div className=\"flex space-x-3\">\n                  <button\n                    type=\"button\"\n                    onClick={handleClose}\n                    className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    disabled={availableAccounts.length === 0}\n                    className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\n                  >\n                    Create Job\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default NewJobModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}