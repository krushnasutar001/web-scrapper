{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krush\\\\OneDrive\\\\Desktop\\\\Final\\\\linkedin-automation-saas\\\\frontend\\\\src\\\\components\\\\Jobs\\\\NewJobModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { XMarkIcon, DocumentArrowUpIcon, MagnifyingGlassIcon, BuildingOfficeIcon, UserIcon, UsersIcon } from '@heroicons/react/24/outline';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewJobModal = ({\n  isOpen,\n  onClose,\n  onSubmit\n}) => {\n  _s();\n  const [step, setStep] = useState(1);\n  const [jobType, setJobType] = useState('');\n  const [formData, setFormData] = useState({\n    jobType: '',\n    file: null,\n    searchQuery: '',\n    proxyUrl: '',\n    linkedinCookie: '',\n    jobName: '',\n    accountSelectionMode: 'rotation',\n    // New: 'rotation', 'specific', 'manual'\n    selectedAccountIds: [],\n    accountUid: '',\n    // New: specific account UID\n    useAccountRotation: true,\n    // New: enable automatic rotation\n    autoRotateAccounts: true,\n    maxAccountsPerJob: 1\n  });\n  const [availableAccounts, setAvailableAccounts] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [dragActive, setDragActive] = useState(false);\n  const jobTypes = [{\n    id: 'profile',\n    name: 'Scrape LinkedIn Profiles',\n    description: 'Extract profile data from LinkedIn profile URLs',\n    icon: UserIcon,\n    color: 'bg-blue-500',\n    inputType: 'file',\n    fileTypes: 'CSV/Excel with LinkedIn profile URLs'\n  }, {\n    id: 'company',\n    name: 'Scrape Company Profiles',\n    description: 'Extract company data from LinkedIn company URLs',\n    icon: BuildingOfficeIcon,\n    color: 'bg-green-500',\n    inputType: 'file',\n    fileTypes: 'CSV/Excel with LinkedIn company URLs'\n  }, {\n    id: 'search',\n    name: 'Scrape Search Results',\n    description: 'Search LinkedIn and collect profile URLs from results',\n    icon: MagnifyingGlassIcon,\n    color: 'bg-purple-500',\n    inputType: 'query',\n    fileTypes: 'Search keyword or query'\n  }];\n  useEffect(() => {\n    if (isOpen) {\n      fetchAvailableAccounts();\n    }\n  }, [isOpen]);\n  const fetchAvailableAccounts = async () => {\n    try {\n      console.log('🔍 Fetching available LinkedIn accounts...');\n      const response = await api.get('/api/linkedin-accounts/available');\n      console.log('📋 Available accounts response:', response);\n      if (response.success) {\n        console.log('✅ Found accounts:', response.data);\n        setAvailableAccounts(response.data || []);\n      } else {\n        console.log('❌ No success flag in response');\n        setAvailableAccounts([]);\n      }\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('❌ Failed to fetch available accounts:', error);\n      console.error('Error details:', {\n        message: error.message,\n        status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n        data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data\n      });\n      setAvailableAccounts([]);\n    }\n  };\n  const resetForm = () => {\n    setStep(1);\n    setJobType('');\n    setFormData({\n      jobType: '',\n      file: null,\n      searchQuery: '',\n      proxyUrl: '',\n      linkedinCookie: '',\n      jobName: '',\n      accountSelectionMode: 'manual',\n      selectedAccountIds: [],\n      autoRotateAccounts: false,\n      maxAccountsPerJob: 1\n    });\n    setErrors({});\n    setDragActive(false);\n  };\n  const handleClose = () => {\n    resetForm();\n    onClose();\n  };\n  const handleJobTypeSelect = type => {\n    setJobType(type);\n    setFormData(prev => ({\n      ...prev,\n      jobType: type\n    }));\n    setStep(2);\n  };\n  const handleFileUpload = file => {\n    if (file) {\n      const allowedTypes = ['.csv', '.xlsx', '.xls'];\n      const fileExtension = file.name.toLowerCase().substring(file.name.lastIndexOf('.'));\n      if (!allowedTypes.includes(fileExtension)) {\n        setErrors(prev => ({\n          ...prev,\n          file: 'Please upload a CSV or Excel file'\n        }));\n        return;\n      }\n      setFormData(prev => ({\n        ...prev,\n        file\n      }));\n      setErrors(prev => ({\n        ...prev,\n        file: ''\n      }));\n    }\n  };\n  const handleDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === 'dragenter' || e.type === 'dragover') {\n      setDragActive(true);\n    } else if (e.type === 'dragleave') {\n      setDragActive(false);\n    }\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      handleFileUpload(e.dataTransfer.files[0]);\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.jobName.trim()) {\n      newErrors.jobName = 'Job name is required';\n    }\n    if (jobType === 'search') {\n      if (!formData.searchQuery.trim()) {\n        newErrors.searchQuery = 'Search query is required';\n      }\n    } else {\n      if (!formData.file) {\n        newErrors.file = 'File upload is required';\n      }\n    }\n    if (!formData.proxyUrl.trim()) {\n      newErrors.proxyUrl = 'Proxy URL is required';\n    } else {\n      const proxyRegex = /^(https?|socks5):\\/\\/.+/;\n      if (!proxyRegex.test(formData.proxyUrl)) {\n        newErrors.proxyUrl = 'Please enter a valid proxy URL (http, https, or socks5)';\n      }\n    }\n\n    // Account selection validation\n    if (formData.accountSelectionMode === 'manual' && formData.selectedAccountIds.length === 0) {\n      newErrors.accounts = 'Please select at least one LinkedIn account';\n    }\n    if (availableAccounts.length === 0) {\n      newErrors.accounts = 'No LinkedIn accounts available. Please add accounts first.';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      onSubmit(formData);\n      handleClose();\n    }\n  };\n  const selectedJobType = jobTypes.find(type => type.id === jobType);\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between p-6 border-b\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-900\",\n          children: step === 1 ? 'Create New Job' : `Configure ${selectedJobType === null || selectedJobType === void 0 ? void 0 : selectedJobType.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClose,\n          className: \"text-gray-400 hover:text-gray-600 transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-6\",\n          children: \"Choose the type of LinkedIn scraping job you want to create:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: jobTypes.map(type => {\n            const Icon = type.icon;\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleJobTypeSelect(type.id),\n              className: \"w-full p-4 border-2 border-gray-200 rounded-lg hover:border-blue-500 hover:bg-blue-50 transition-all duration-200 text-left group\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-start space-x-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${type.color} p-3 rounded-lg text-white group-hover:scale-110 transition-transform`,\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    className: \"h-6 w-6\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold text-gray-900 group-hover:text-blue-600\",\n                    children: type.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-600 text-sm mt-1\",\n                    children: type.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-blue-600 text-xs mt-2 font-medium\",\n                    children: [\"Input: \", type.fileTypes]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this)\n            }, type.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"Job Name *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.jobName,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              jobName: e.target.value\n            })),\n            className: `w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${errors.jobName ? 'border-red-500' : 'border-gray-300'}`,\n            placeholder: \"Enter a name for this job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), errors.jobName && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: errors.jobName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), jobType === 'search' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"Search Query *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.searchQuery,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              searchQuery: e.target.value\n            })),\n            className: `w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${errors.searchQuery ? 'border-red-500' : 'border-gray-300'}`,\n            placeholder: \"Enter LinkedIn search keywords (e.g., 'Software Engineer San Francisco')\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this), errors.searchQuery && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: errors.searchQuery\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"Upload File *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `border-2 border-dashed rounded-lg p-6 text-center transition-colors ${dragActive ? 'border-blue-500 bg-blue-50' : 'border-gray-300'} ${errors.file ? 'border-red-500' : ''}`,\n            onDragEnter: handleDrag,\n            onDragLeave: handleDrag,\n            onDragOver: handleDrag,\n            onDrop: handleDrop,\n            children: [/*#__PURE__*/_jsxDEV(DocumentArrowUpIcon, {\n              className: \"h-12 w-12 text-gray-400 mx-auto mb-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this), formData.file ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-green-600 font-medium\",\n                children: formData.file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500 text-sm\",\n                children: \"File uploaded successfully\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600 mb-2\",\n                children: \"Drag and drop your CSV/Excel file here, or\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".csv,.xlsx,.xls\",\n                onChange: e => handleFileUpload(e.target.files[0]),\n                className: \"hidden\",\n                id: \"file-upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"file-upload\",\n                className: \"inline-block bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 cursor-pointer transition-colors\",\n                children: \"Choose File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 17\n          }, this), errors.file && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: errors.file\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 text-xs mt-2\",\n            children: \"Supported formats: CSV, Excel (.xlsx, .xls)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"LinkedIn Accounts *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this), availableAccounts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 bg-yellow-50 border border-yellow-200 rounded-md\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-yellow-800 text-sm\",\n              children: \"No LinkedIn accounts available. Please add accounts first in the LinkedIn Accounts section.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"accountMode\",\n                  value: \"manual\",\n                  checked: formData.accountSelectionMode === 'manual',\n                  onChange: e => setFormData(prev => ({\n                    ...prev,\n                    accountSelectionMode: e.target.value\n                  })),\n                  className: \"mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm\",\n                  children: \"Manual Selection\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"accountMode\",\n                  value: \"auto_rotate\",\n                  checked: formData.accountSelectionMode === 'auto_rotate',\n                  onChange: e => setFormData(prev => ({\n                    ...prev,\n                    accountSelectionMode: e.target.value\n                  })),\n                  className: \"mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm\",\n                  children: \"Auto-Rotate All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"accountMode\",\n                  value: \"load_balance\",\n                  checked: formData.accountSelectionMode === 'load_balance',\n                  onChange: e => setFormData(prev => ({\n                    ...prev,\n                    accountSelectionMode: e.target.value\n                  })),\n                  className: \"mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm\",\n                  children: \"Load Balance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 19\n            }, this), formData.accountSelectionMode === 'manual' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"max-h-40 overflow-y-auto border border-gray-300 rounded-md p-3\",\n              children: availableAccounts.map(account => /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center mb-2 last:mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: formData.selectedAccountIds.includes(account.id),\n                  onChange: e => {\n                    if (e.target.checked) {\n                      setFormData(prev => ({\n                        ...prev,\n                        selectedAccountIds: [...prev.selectedAccountIds, account.id]\n                      }));\n                    } else {\n                      setFormData(prev => ({\n                        ...prev,\n                        selectedAccountIds: prev.selectedAccountIds.filter(id => id !== account.id)\n                      }));\n                    }\n                  },\n                  className: \"mr-3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm font-medium text-gray-900\",\n                    children: account.account_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-500\",\n                    children: [account.email, \" \\u2022 \", account.requests_today || 0, \"/\", account.daily_request_limit, \" requests today\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `px-2 py-1 rounded-full ${account.validation_status === 'valid' ? 'bg-green-100 text-green-800' : account.validation_status === 'invalid' ? 'bg-red-100 text-red-800' : 'bg-gray-100 text-gray-800'}`,\n                    children: account.validation_status || 'Unknown'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 27\n                }, this)]\n              }, account.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 21\n            }, this), formData.accountSelectionMode === 'auto_rotate' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 bg-blue-50 border border-blue-200 rounded-md\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-blue-800 text-sm\",\n                children: [/*#__PURE__*/_jsxDEV(UsersIcon, {\n                  className: \"h-4 w-4 inline mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 25\n                }, this), \"Job will automatically rotate across all \", availableAccounts.length, \" available accounts\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 21\n            }, this), formData.accountSelectionMode === 'load_balance' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 bg-purple-50 border border-purple-200 rounded-md\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-purple-800 text-sm\",\n                children: [/*#__PURE__*/_jsxDEV(UsersIcon, {\n                  className: \"h-4 w-4 inline mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 25\n                }, this), \"Job will intelligently distribute workload across all \", availableAccounts.length, \" accounts based on usage and cooldowns\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 17\n          }, this), errors.accounts && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: errors.accounts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between pt-4 border-t\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setStep(1),\n            className: \"px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\",\n            children: \"\\u2190 Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleClose,\n              className: \"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"px-6 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors\",\n              children: \"Create Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_s(NewJobModal, \"IJGWfMtU+Y0ETbBnTyUjMx0LRGk=\");\n_c = NewJobModal;\nexport default NewJobModal;\nvar _c;\n$RefreshReg$(_c, \"NewJobModal\");","map":{"version":3,"names":["React","useState","useEffect","XMarkIcon","DocumentArrowUpIcon","MagnifyingGlassIcon","BuildingOfficeIcon","UserIcon","UsersIcon","api","jsxDEV","_jsxDEV","NewJobModal","isOpen","onClose","onSubmit","_s","step","setStep","jobType","setJobType","formData","setFormData","file","searchQuery","proxyUrl","linkedinCookie","jobName","accountSelectionMode","selectedAccountIds","accountUid","useAccountRotation","autoRotateAccounts","maxAccountsPerJob","availableAccounts","setAvailableAccounts","errors","setErrors","dragActive","setDragActive","jobTypes","id","name","description","icon","color","inputType","fileTypes","fetchAvailableAccounts","console","log","response","get","success","data","error","_error$response","_error$response2","message","status","resetForm","handleClose","handleJobTypeSelect","type","prev","handleFileUpload","allowedTypes","fileExtension","toLowerCase","substring","lastIndexOf","includes","handleDrag","e","preventDefault","stopPropagation","handleDrop","dataTransfer","files","validateForm","newErrors","trim","proxyRegex","test","length","accounts","Object","keys","handleSubmit","selectedJobType","find","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","Icon","value","onChange","target","placeholder","onDragEnter","onDragLeave","onDragOver","onDrop","accept","htmlFor","checked","account","filter","account_name","email","requests_today","daily_request_limit","validation_status","_c","$RefreshReg$"],"sources":["C:/Users/krush/OneDrive/Desktop/Final/linkedin-automation-saas/frontend/src/components/Jobs/NewJobModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { XMarkIcon, DocumentArrowUpIcon, MagnifyingGlassIcon, BuildingOfficeIcon, UserIcon, UsersIcon } from '@heroicons/react/24/outline';\nimport api from '../../services/api';\n\nconst NewJobModal = ({ isOpen, onClose, onSubmit }) => {\n  const [step, setStep] = useState(1);\n  const [jobType, setJobType] = useState('');\n  const [formData, setFormData] = useState({\n    jobType: '',\n    file: null,\n    searchQuery: '',\n    proxyUrl: '',\n    linkedinCookie: '',\n    jobName: '',\n    accountSelectionMode: 'rotation', // New: 'rotation', 'specific', 'manual'\n    selectedAccountIds: [],\n    accountUid: '', // New: specific account UID\n    useAccountRotation: true, // New: enable automatic rotation\n    autoRotateAccounts: true,\n    maxAccountsPerJob: 1\n  });\n  const [availableAccounts, setAvailableAccounts] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [dragActive, setDragActive] = useState(false);\n\n  const jobTypes = [\n    {\n      id: 'profile',\n      name: 'Scrape LinkedIn Profiles',\n      description: 'Extract profile data from LinkedIn profile URLs',\n      icon: UserIcon,\n      color: 'bg-blue-500',\n      inputType: 'file',\n      fileTypes: 'CSV/Excel with LinkedIn profile URLs'\n    },\n    {\n      id: 'company',\n      name: 'Scrape Company Profiles',\n      description: 'Extract company data from LinkedIn company URLs',\n      icon: BuildingOfficeIcon,\n      color: 'bg-green-500',\n      inputType: 'file',\n      fileTypes: 'CSV/Excel with LinkedIn company URLs'\n    },\n    {\n      id: 'search',\n      name: 'Scrape Search Results',\n      description: 'Search LinkedIn and collect profile URLs from results',\n      icon: MagnifyingGlassIcon,\n      color: 'bg-purple-500',\n      inputType: 'query',\n      fileTypes: 'Search keyword or query'\n    }\n  ];\n\n  useEffect(() => {\n    if (isOpen) {\n      fetchAvailableAccounts();\n    }\n  }, [isOpen]);\n\n  const fetchAvailableAccounts = async () => {\n    try {\n      console.log('🔍 Fetching available LinkedIn accounts...');\n      const response = await api.get('/api/linkedin-accounts/available');\n      console.log('📋 Available accounts response:', response);\n      \n      if (response.success) {\n        console.log('✅ Found accounts:', response.data);\n        setAvailableAccounts(response.data || []);\n      } else {\n        console.log('❌ No success flag in response');\n        setAvailableAccounts([]);\n      }\n    } catch (error) {\n      console.error('❌ Failed to fetch available accounts:', error);\n      console.error('Error details:', {\n        message: error.message,\n        status: error.response?.status,\n        data: error.response?.data\n      });\n      setAvailableAccounts([]);\n    }\n  };\n\n  const resetForm = () => {\n    setStep(1);\n    setJobType('');\n    setFormData({\n      jobType: '',\n      file: null,\n      searchQuery: '',\n      proxyUrl: '',\n      linkedinCookie: '',\n      jobName: '',\n      accountSelectionMode: 'manual',\n      selectedAccountIds: [],\n      autoRotateAccounts: false,\n      maxAccountsPerJob: 1\n    });\n    setErrors({});\n    setDragActive(false);\n  };\n\n  const handleClose = () => {\n    resetForm();\n    onClose();\n  };\n\n  const handleJobTypeSelect = (type) => {\n    setJobType(type);\n    setFormData(prev => ({ ...prev, jobType: type }));\n    setStep(2);\n  };\n\n  const handleFileUpload = (file) => {\n    if (file) {\n      const allowedTypes = ['.csv', '.xlsx', '.xls'];\n      const fileExtension = file.name.toLowerCase().substring(file.name.lastIndexOf('.'));\n      \n      if (!allowedTypes.includes(fileExtension)) {\n        setErrors(prev => ({ ...prev, file: 'Please upload a CSV or Excel file' }));\n        return;\n      }\n      \n      setFormData(prev => ({ ...prev, file }));\n      setErrors(prev => ({ ...prev, file: '' }));\n    }\n  };\n\n  const handleDrag = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === 'dragenter' || e.type === 'dragover') {\n      setDragActive(true);\n    } else if (e.type === 'dragleave') {\n      setDragActive(false);\n    }\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    \n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      handleFileUpload(e.dataTransfer.files[0]);\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.jobName.trim()) {\n      newErrors.jobName = 'Job name is required';\n    }\n    \n    if (jobType === 'search') {\n      if (!formData.searchQuery.trim()) {\n        newErrors.searchQuery = 'Search query is required';\n      }\n    } else {\n      if (!formData.file) {\n        newErrors.file = 'File upload is required';\n      }\n    }\n    \n    if (!formData.proxyUrl.trim()) {\n      newErrors.proxyUrl = 'Proxy URL is required';\n    } else {\n      const proxyRegex = /^(https?|socks5):\\/\\/.+/;\n      if (!proxyRegex.test(formData.proxyUrl)) {\n        newErrors.proxyUrl = 'Please enter a valid proxy URL (http, https, or socks5)';\n      }\n    }\n    \n    // Account selection validation\n    if (formData.accountSelectionMode === 'manual' && formData.selectedAccountIds.length === 0) {\n      newErrors.accounts = 'Please select at least one LinkedIn account';\n    }\n    \n    if (availableAccounts.length === 0) {\n      newErrors.accounts = 'No LinkedIn accounts available. Please add accounts first.';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (validateForm()) {\n      onSubmit(formData);\n      handleClose();\n    }\n  };\n\n  const selectedJobType = jobTypes.find(type => type.id === jobType);\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">\n            {step === 1 ? 'Create New Job' : `Configure ${selectedJobType?.name}`}\n          </h2>\n          <button\n            onClick={handleClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            <XMarkIcon className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        {/* Step 1: Job Type Selection */}\n        {step === 1 && (\n          <div className=\"p-6\">\n            <p className=\"text-gray-600 mb-6\">\n              Choose the type of LinkedIn scraping job you want to create:\n            </p>\n            \n            <div className=\"space-y-4\">\n              {jobTypes.map((type) => {\n                const Icon = type.icon;\n                return (\n                  <button\n                    key={type.id}\n                    onClick={() => handleJobTypeSelect(type.id)}\n                    className=\"w-full p-4 border-2 border-gray-200 rounded-lg hover:border-blue-500 hover:bg-blue-50 transition-all duration-200 text-left group\"\n                  >\n                    <div className=\"flex items-start space-x-4\">\n                      <div className={`${type.color} p-3 rounded-lg text-white group-hover:scale-110 transition-transform`}>\n                        <Icon className=\"h-6 w-6\" />\n                      </div>\n                      <div className=\"flex-1\">\n                        <h3 className=\"font-semibold text-gray-900 group-hover:text-blue-600\">\n                          {type.name}\n                        </h3>\n                        <p className=\"text-gray-600 text-sm mt-1\">\n                          {type.description}\n                        </p>\n                        <p className=\"text-blue-600 text-xs mt-2 font-medium\">\n                          Input: {type.fileTypes}\n                        </p>\n                      </div>\n                    </div>\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n        )}\n\n        {/* Step 2: Job Configuration */}\n        {step === 2 && (\n          <form onSubmit={handleSubmit} className=\"p-6\">\n            {/* Job Name */}\n            <div className=\"mb-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Job Name *\n              </label>\n              <input\n                type=\"text\"\n                value={formData.jobName}\n                onChange={(e) => setFormData(prev => ({ ...prev, jobName: e.target.value }))}\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n                  errors.jobName ? 'border-red-500' : 'border-gray-300'\n                }`}\n                placeholder=\"Enter a name for this job\"\n              />\n              {errors.jobName && (\n                <p className=\"text-red-500 text-sm mt-1\">{errors.jobName}</p>\n              )}\n            </div>\n\n            {/* File Upload or Search Query */}\n            {jobType === 'search' ? (\n              <div className=\"mb-6\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Search Query *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.searchQuery}\n                  onChange={(e) => setFormData(prev => ({ ...prev, searchQuery: e.target.value }))}\n                  className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n                    errors.searchQuery ? 'border-red-500' : 'border-gray-300'\n                  }`}\n                  placeholder=\"Enter LinkedIn search keywords (e.g., 'Software Engineer San Francisco')\"\n                />\n                {errors.searchQuery && (\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.searchQuery}</p>\n                )}\n              </div>\n            ) : (\n              <div className=\"mb-6\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Upload File *\n                </label>\n                <div\n                  className={`border-2 border-dashed rounded-lg p-6 text-center transition-colors ${\n                    dragActive ? 'border-blue-500 bg-blue-50' : 'border-gray-300'\n                  } ${errors.file ? 'border-red-500' : ''}`}\n                  onDragEnter={handleDrag}\n                  onDragLeave={handleDrag}\n                  onDragOver={handleDrag}\n                  onDrop={handleDrop}\n                >\n                  <DocumentArrowUpIcon className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                  {formData.file ? (\n                    <div>\n                      <p className=\"text-green-600 font-medium\">{formData.file.name}</p>\n                      <p className=\"text-gray-500 text-sm\">File uploaded successfully</p>\n                    </div>\n                  ) : (\n                    <div>\n                      <p className=\"text-gray-600 mb-2\">\n                        Drag and drop your CSV/Excel file here, or\n                      </p>\n                      <input\n                        type=\"file\"\n                        accept=\".csv,.xlsx,.xls\"\n                        onChange={(e) => handleFileUpload(e.target.files[0])}\n                        className=\"hidden\"\n                        id=\"file-upload\"\n                      />\n                      <label\n                        htmlFor=\"file-upload\"\n                        className=\"inline-block bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 cursor-pointer transition-colors\"\n                      >\n                        Choose File\n                      </label>\n                    </div>\n                  )}\n                </div>\n                {errors.file && (\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.file}</p>\n                )}\n                <p className=\"text-gray-500 text-xs mt-2\">\n                  Supported formats: CSV, Excel (.xlsx, .xls)\n                </p>\n              </div>\n            )}\n\n            {/* Account Selection */}\n            <div className=\"mb-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                LinkedIn Accounts *\n              </label>\n              \n              {availableAccounts.length === 0 ? (\n                <div className=\"p-4 bg-yellow-50 border border-yellow-200 rounded-md\">\n                  <p className=\"text-yellow-800 text-sm\">\n                    No LinkedIn accounts available. Please add accounts first in the LinkedIn Accounts section.\n                  </p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {/* Account Selection Mode */}\n                  <div className=\"flex space-x-4\">\n                    <label className=\"flex items-center\">\n                      <input\n                        type=\"radio\"\n                        name=\"accountMode\"\n                        value=\"manual\"\n                        checked={formData.accountSelectionMode === 'manual'}\n                        onChange={(e) => setFormData(prev => ({ ...prev, accountSelectionMode: e.target.value }))}\n                        className=\"mr-2\"\n                      />\n                      <span className=\"text-sm\">Manual Selection</span>\n                    </label>\n                    <label className=\"flex items-center\">\n                      <input\n                        type=\"radio\"\n                        name=\"accountMode\"\n                        value=\"auto_rotate\"\n                        checked={formData.accountSelectionMode === 'auto_rotate'}\n                        onChange={(e) => setFormData(prev => ({ ...prev, accountSelectionMode: e.target.value }))}\n                        className=\"mr-2\"\n                      />\n                      <span className=\"text-sm\">Auto-Rotate All</span>\n                    </label>\n                    <label className=\"flex items-center\">\n                      <input\n                        type=\"radio\"\n                        name=\"accountMode\"\n                        value=\"load_balance\"\n                        checked={formData.accountSelectionMode === 'load_balance'}\n                        onChange={(e) => setFormData(prev => ({ ...prev, accountSelectionMode: e.target.value }))}\n                        className=\"mr-2\"\n                      />\n                      <span className=\"text-sm\">Load Balance</span>\n                    </label>\n                  </div>\n                  \n                  {/* Manual Account Selection */}\n                  {formData.accountSelectionMode === 'manual' && (\n                    <div className=\"max-h-40 overflow-y-auto border border-gray-300 rounded-md p-3\">\n                      {availableAccounts.map((account) => (\n                        <label key={account.id} className=\"flex items-center mb-2 last:mb-0\">\n                          <input\n                            type=\"checkbox\"\n                            checked={formData.selectedAccountIds.includes(account.id)}\n                            onChange={(e) => {\n                              if (e.target.checked) {\n                                setFormData(prev => ({\n                                  ...prev,\n                                  selectedAccountIds: [...prev.selectedAccountIds, account.id]\n                                }));\n                              } else {\n                                setFormData(prev => ({\n                                  ...prev,\n                                  selectedAccountIds: prev.selectedAccountIds.filter(id => id !== account.id)\n                                }));\n                              }\n                            }}\n                            className=\"mr-3\"\n                          />\n                          <div className=\"flex-1\">\n                            <div className=\"text-sm font-medium text-gray-900\">\n                              {account.account_name}\n                            </div>\n                            <div className=\"text-xs text-gray-500\">\n                              {account.email} • {account.requests_today || 0}/{account.daily_request_limit} requests today\n                            </div>\n                          </div>\n                          <div className=\"text-xs\">\n                            <span className={`px-2 py-1 rounded-full ${\n                              account.validation_status === 'valid' ? 'bg-green-100 text-green-800' :\n                              account.validation_status === 'invalid' ? 'bg-red-100 text-red-800' :\n                              'bg-gray-100 text-gray-800'\n                            }`}>\n                              {account.validation_status || 'Unknown'}\n                            </span>\n                          </div>\n                        </label>\n                      ))}\n                    </div>\n                  )}\n                  \n                  {/* Auto-rotate and Load Balance Info */}\n                  {formData.accountSelectionMode === 'auto_rotate' && (\n                    <div className=\"p-3 bg-blue-50 border border-blue-200 rounded-md\">\n                      <p className=\"text-blue-800 text-sm\">\n                        <UsersIcon className=\"h-4 w-4 inline mr-1\" />\n                        Job will automatically rotate across all {availableAccounts.length} available accounts\n                      </p>\n                    </div>\n                  )}\n                  \n                  {formData.accountSelectionMode === 'load_balance' && (\n                    <div className=\"p-3 bg-purple-50 border border-purple-200 rounded-md\">\n                      <p className=\"text-purple-800 text-sm\">\n                        <UsersIcon className=\"h-4 w-4 inline mr-1\" />\n                        Job will intelligently distribute workload across all {availableAccounts.length} accounts based on usage and cooldowns\n                      </p>\n                    </div>\n                  )}\n                </div>\n              )}\n              \n              {errors.accounts && (\n                <p className=\"text-red-500 text-sm mt-1\">{errors.accounts}</p>\n              )}\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-between pt-4 border-t\">\n              <button\n                type=\"button\"\n                onClick={() => setStep(1)}\n                className=\"px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\"\n              >\n                ← Back\n              </button>\n              <div className=\"space-x-3\">\n                <button\n                  type=\"button\"\n                  onClick={handleClose}\n                  className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-6 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors\"\n                >\n                  Create Job\n                </button>\n              </div>\n            </div>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NewJobModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}