{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krush\\\\OneDrive\\\\Desktop\\\\Final\\\\linkedin-automation-saas\\\\frontend\\\\src\\\\components\\\\Jobs\\\\NewJobModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { XMarkIcon, DocumentArrowUpIcon, MagnifyingGlassIcon, BuildingOfficeIcon, UserIcon } from '@heroicons/react/24/outline';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewJobModal = ({\n  isOpen,\n  onClose,\n  onSubmit\n}) => {\n  _s();\n  var _availableAccounts$fi;\n  const [step, setStep] = useState(1);\n  const [jobType, setJobType] = useState('');\n  const [formData, setFormData] = useState({\n    jobType: '',\n    urls: [],\n    searchQuery: '',\n    maxPages: 5,\n    jobName: '',\n    accountSelectionMode: 'rotation',\n    selectedAccountIds: [],\n    file: null\n  });\n  const [urlsText, setUrlsText] = useState('');\n  const [inputMethod, setInputMethod] = useState('urls'); // 'urls' or 'file'\n  const [availableAccounts, setAvailableAccounts] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [dragActive, setDragActive] = useState(false);\n  const jobTypes = [{\n    id: 'profiles',\n    name: 'Scrape LinkedIn Profiles',\n    description: 'Extract profile data from LinkedIn profile URLs',\n    icon: UserIcon,\n    color: 'bg-blue-500',\n    inputType: 'urls',\n    placeholder: 'Enter LinkedIn profile URLs (one per line)'\n  }, {\n    id: 'companies',\n    name: 'Scrape Company Profiles',\n    description: 'Extract company data from LinkedIn company URLs',\n    icon: BuildingOfficeIcon,\n    color: 'bg-green-500',\n    inputType: 'urls',\n    placeholder: 'Enter LinkedIn company URLs (one per line)'\n  }, {\n    id: 'sales_navigator',\n    name: 'Sales Navigator Search',\n    description: 'Scrape Sales Navigator search results with pagination',\n    icon: MagnifyingGlassIcon,\n    color: 'bg-purple-500',\n    inputType: 'search',\n    placeholder: 'Enter search query or Sales Navigator URL'\n  }];\n  useEffect(() => {\n    if (isOpen) {\n      fetchAvailableAccounts();\n\n      // Set up interval to refresh accounts every 30 seconds when modal is open\n      const interval = setInterval(() => {\n        fetchAvailableAccounts();\n      }, 30000);\n      return () => clearInterval(interval);\n    }\n  }, [isOpen]);\n\n  // Listen for account updates from other parts of the app\n  useEffect(() => {\n    const handleAccountUpdate = () => {\n      if (isOpen) {\n        fetchAvailableAccounts();\n      }\n    };\n    window.addEventListener('linkedin-accounts-updated', handleAccountUpdate);\n    return () => window.removeEventListener('linkedin-accounts-updated', handleAccountUpdate);\n  }, [isOpen]);\n  const fetchAvailableAccounts = async () => {\n    try {\n      console.log('🔍 Fetching available accounts...');\n\n      // Use the configured API service instead of direct fetch\n      const response = await api.get('/api/linkedin-accounts/available');\n      console.log('📋 Raw accounts response:', response);\n\n      // Support both Axios-style (response.data) and raw JSON (response)\n      const result = response.data || response;\n      console.log('📋 Parsed accounts result:', result);\n      console.log('📋 Result type:', typeof result);\n      console.log('📋 Result.success:', result === null || result === void 0 ? void 0 : result.success);\n      console.log('📋 Result.data type:', typeof (result === null || result === void 0 ? void 0 : result.data));\n      console.log('📋 Result.data isArray:', Array.isArray(result === null || result === void 0 ? void 0 : result.data));\n      console.log('📋 Result.data content:', result === null || result === void 0 ? void 0 : result.data);\n\n      // Handle multiple response formats\n      let accounts = [];\n      if (result && result.success && Array.isArray(result.data)) {\n        // Standard API response: {success: true, data: [...]}\n        accounts = result.data;\n        console.log('✅ Using result.data format');\n      } else if (Array.isArray(result)) {\n        // Direct array response: [...]\n        accounts = result;\n        console.log('✅ Using direct array format');\n      } else if (result && Array.isArray(result.accounts)) {\n        // Object with accounts property: {accounts: [...]}\n        accounts = result.accounts;\n        console.log('✅ Using result.accounts format');\n      } else {\n        console.warn('⚠️ Invalid accounts response format:', result);\n        setAvailableAccounts([]);\n        return;\n      }\n\n      // Filter for active/pending accounts\n      const filteredAccounts = accounts.filter(account => account.validation_status === 'ACTIVE' || account.validation_status === 'PENDING');\n      console.log(`📊 Total accounts: ${accounts.length}`);\n      console.log(`📊 Filtered accounts: ${filteredAccounts.length}`);\n      console.log('📊 Filtered accounts list:', filteredAccounts);\n      setAvailableAccounts(filteredAccounts);\n\n      // Clear any previous error about accounts\n      setErrors(prev => ({\n        ...prev,\n        accounts: undefined\n      }));\n    } catch (error) {\n      var _error$response;\n      console.error('❌ Failed to fetch available accounts:', error);\n      console.error('Error details:', (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || (error === null || error === void 0 ? void 0 : error.message) || error);\n      setAvailableAccounts([]);\n\n      // Show user-friendly error message\n      setErrors(prev => ({\n        ...prev,\n        accounts: 'Failed to load LinkedIn accounts. Please try refreshing the page.'\n      }));\n    }\n  };\n  const resetForm = () => {\n    setStep(1);\n    setJobType('');\n    setFormData({\n      jobType: '',\n      urls: [],\n      searchQuery: '',\n      maxPages: 5,\n      jobName: '',\n      accountSelectionMode: 'rotation',\n      selectedAccountIds: [],\n      file: null\n    });\n    setUrlsText('');\n    setInputMethod('urls');\n    setErrors({});\n    setDragActive(false);\n  };\n  const handleClose = () => {\n    resetForm();\n    onClose();\n  };\n  const handleJobTypeSelect = type => {\n    setJobType(type);\n    setFormData(prev => ({\n      ...prev,\n      jobType: type\n    }));\n    setStep(2);\n  };\n  const handleUrlsChange = e => {\n    const text = e.target.value;\n    setUrlsText(text);\n    const urls = text.split('\\n').filter(url => url.trim().length > 0);\n    setFormData(prev => ({\n      ...prev,\n      urls\n    }));\n  };\n  const handleFileUpload = file => {\n    if (file) {\n      const allowedTypes = ['.csv', '.xlsx', '.xls'];\n      const fileExtension = file.name.toLowerCase().substring(file.name.lastIndexOf('.'));\n      if (!allowedTypes.includes(fileExtension)) {\n        setErrors(prev => ({\n          ...prev,\n          file: 'Please upload a CSV or Excel file'\n        }));\n        return;\n      }\n      setFormData(prev => ({\n        ...prev,\n        file\n      }));\n      setErrors(prev => ({\n        ...prev,\n        file: ''\n      }));\n    }\n  };\n  const handleDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === 'dragenter' || e.type === 'dragover') {\n      setDragActive(true);\n    } else if (e.type === 'dragleave') {\n      setDragActive(false);\n    }\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      handleFileUpload(e.dataTransfer.files[0]);\n    }\n  };\n  const validateForm = (dataToValidate = formData) => {\n    const newErrors = {};\n    if (!dataToValidate.jobName.trim()) {\n      newErrors.jobName = 'Job name is required';\n    }\n    if (jobType === 'sales_navigator') {\n      if (!dataToValidate.searchQuery.trim()) {\n        newErrors.searchQuery = 'Search query or Sales Navigator URL is required';\n      }\n    } else {\n      if (inputMethod === 'file') {\n        if (!dataToValidate.file) {\n          newErrors.file = 'Please upload a CSV or Excel file';\n        }\n      } else {\n        // Validate URLs from the data being validated\n        if (!dataToValidate.urls || dataToValidate.urls.length === 0) {\n          newErrors.urls = 'Please enter at least one LinkedIn URL';\n        } else {\n          // Validate URL format\n          const invalidUrls = dataToValidate.urls.filter(url => !url.includes('linkedin.com'));\n          if (invalidUrls.length > 0) {\n            newErrors.urls = 'All URLs must be LinkedIn URLs';\n          }\n        }\n      }\n    }\n\n    // Only check for accounts if we've attempted to fetch them\n    if (availableAccounts.length === 0) {\n      newErrors.accounts = 'No LinkedIn accounts available. Please add accounts first in the LinkedIn Accounts section.';\n    } else if (dataToValidate.accountSelectionMode === 'specific' && (!dataToValidate.selectedAccountIds || dataToValidate.selectedAccountIds.length === 0)) {\n      newErrors.accounts = 'Please select a specific LinkedIn account to use for scraping.';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const downloadTemplate = async jobType => {\n    try {\n      const response = await api.get(`/api/templates/${jobType}`, {\n        responseType: 'blob'\n      });\n\n      // Create download link\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n\n      // Set filename based on job type\n      const filenames = {\n        'profiles': 'profile-scraping-template.csv',\n        'companies': 'company-scraping-template.csv',\n        'sales_navigator': 'sales-navigator-template.csv'\n      };\n      link.setAttribute('download', filenames[jobType] || 'template.csv');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error downloading template:', error);\n      // You could add a toast notification here\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('📝 Form submission started');\n    console.log('📝 Current formData:', formData);\n    console.log('📝 Current jobType:', jobType);\n    console.log('📝 Current urlsText:', urlsText);\n    console.log('📝 Current inputMethod:', inputMethod);\n    console.log('📝 Available accounts:', availableAccounts);\n\n    // Update form data with URLs from text input before validation\n    const urls = urlsText.split('\\n').filter(url => url.trim().length > 0);\n    const updatedFormData = {\n      ...formData,\n      urls: inputMethod === 'urls' ? urls : formData.urls\n    };\n    console.log('📝 Updated form data:', updatedFormData);\n\n    // Update the form data state\n    setFormData(updatedFormData);\n    console.log('📝 Running validation...');\n    const isValid = validateForm(updatedFormData);\n    console.log('📝 Validation result:', isValid);\n    console.log('📝 Current errors:', errors);\n    if (isValid) {\n      // Prepare the form data with proper account selection\n      const submitData = {\n        ...updatedFormData,\n        selectedAccountIds: updatedFormData.accountSelectionMode === 'specific' ? updatedFormData.selectedAccountIds : availableAccounts.map(acc => acc.id)\n      };\n      console.log('🚀 Submitting job data:', submitData);\n      onSubmit(submitData);\n      handleClose();\n    } else {\n      console.log('❌ Validation failed, not submitting');\n    }\n  };\n  const selectedJobType = jobTypes.find(type => type.id === jobType);\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center p-6 border-b\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-900\",\n          children: step === 1 ? 'Create New Job' : `Create ${selectedJobType === null || selectedJobType === void 0 ? void 0 : selectedJobType.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClose,\n          className: \"text-gray-400 hover:text-gray-600 transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"p-6\",\n        children: step === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900 mb-4\",\n            children: \"Select Job Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 gap-4\",\n            children: jobTypes.map(type => {\n              const IconComponent = type.icon;\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => handleJobTypeSelect(type.id),\n                className: \"p-4 border-2 border-gray-200 rounded-lg hover:border-blue-500 hover:bg-blue-50 transition-all text-left group\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start space-x-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `p-2 rounded-lg ${type.color} text-white group-hover:scale-110 transition-transform`,\n                    children: /*#__PURE__*/_jsxDEV(IconComponent, {\n                      className: \"h-6 w-6\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-medium text-gray-900 group-hover:text-blue-600\",\n                      children: type.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-gray-600 mt-1\",\n                      children: type.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 376,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 23\n                }, this)\n              }, type.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Job Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formData.jobName,\n              onChange: e => setFormData(prev => ({\n                ...prev,\n                jobName: e.target.value\n              })),\n              className: `w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-900 placeholder-gray-500 ${errors.jobName ? 'border-red-500' : 'border-gray-300'}`,\n              placeholder: \"Enter a descriptive name for this job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 17\n            }, this), errors.jobName && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-sm mt-1\",\n              children: errors.jobName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this), jobType === 'sales_navigator' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Search Query or Sales Navigator URL *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: formData.searchQuery,\n                onChange: e => setFormData(prev => ({\n                  ...prev,\n                  searchQuery: e.target.value\n                })),\n                className: `w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${errors.searchQuery ? 'border-red-500' : 'border-gray-300'}`,\n                placeholder: \"e.g., Software Engineer San Francisco OR https://www.linkedin.com/sales/search/...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 21\n              }, this), errors.searchQuery && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-red-500 text-sm mt-1\",\n                children: errors.searchQuery\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Max Pages to Scrape\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"1\",\n                max: \"25\",\n                value: formData.maxPages,\n                onChange: e => setFormData(prev => ({\n                  ...prev,\n                  maxPages: parseInt(e.target.value) || 5\n                })),\n                className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500 text-xs mt-1\",\n                children: \"Number of result pages to scrape (1-25)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"LinkedIn URLs *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-4 mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center cursor-pointer\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"inputMethod\",\n                  value: \"urls\",\n                  checked: inputMethod === 'urls',\n                  onChange: e => setInputMethod(e.target.value),\n                  className: \"mr-2 text-blue-600 focus:ring-blue-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm font-medium text-gray-900\",\n                  children: \"Paste URLs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center cursor-pointer\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"inputMethod\",\n                  value: \"file\",\n                  checked: inputMethod === 'file',\n                  onChange: e => setInputMethod(e.target.value),\n                  className: \"mr-2 text-blue-600 focus:ring-blue-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm font-medium text-gray-900\",\n                  children: \"Upload CSV/Excel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 19\n            }, this), inputMethod === 'urls' ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-600\",\n                  children: \"Enter URLs manually:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 26\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => downloadTemplate(jobType),\n                  className: \"text-blue-500 hover:text-blue-700 text-sm underline\",\n                  children: \"\\uD83D\\uDCE5 Download Sample Template\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 26\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: urlsText,\n                onChange: handleUrlsChange,\n                rows: 8,\n                className: `w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-900 placeholder-gray-500 ${errors.urls ? 'border-red-500' : 'border-gray-300'}`,\n                placeholder: (selectedJobType === null || selectedJobType === void 0 ? void 0 : selectedJobType.placeholder) || 'Enter LinkedIn URLs (one per line)'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 24\n              }, this), errors.urls && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-red-500 text-sm mt-1\",\n                children: errors.urls\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 26\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500 text-xs mt-2\",\n                children: [\"Enter one LinkedIn URL per line. \", formData.urls.length, \" URLs entered.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 22\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `border-2 border-dashed rounded-lg p-6 text-center transition-colors ${dragActive ? 'border-blue-500 bg-blue-50' : 'border-gray-300'} ${errors.file ? 'border-red-500' : ''}`,\n                onDragEnter: handleDrag,\n                onDragLeave: handleDrag,\n                onDragOver: handleDrag,\n                onDrop: handleDrop,\n                children: [/*#__PURE__*/_jsxDEV(DocumentArrowUpIcon, {\n                  className: \"h-12 w-12 text-gray-400 mx-auto mb-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 25\n                }, this), formData.file ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-green-600 font-medium\",\n                    children: formData.file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-500 text-sm\",\n                    children: \"File uploaded successfully\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-600 mb-2\",\n                    children: \"Drag and drop your CSV/Excel file here, or\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 523,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    accept: \".csv,.xlsx,.xls\",\n                    onChange: e => handleFileUpload(e.target.files[0]),\n                    className: \"hidden\",\n                    id: \"file-upload\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 526,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"file-upload\",\n                    className: \"inline-block bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 cursor-pointer transition-colors\",\n                    children: \"Choose File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 23\n              }, this), errors.file && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-red-500 text-sm mt-1\",\n                children: errors.file\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500 text-xs mt-2\",\n                children: \"Supported formats: CSV, Excel (.xlsx, .xls). First column should contain LinkedIn URLs.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: [\"LinkedIn Accounts * (\", availableAccounts.length, \" available)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: fetchAvailableAccounts,\n                className: \"text-blue-600 hover:text-blue-800 text-sm font-medium flex items-center\",\n                children: \"\\uD83D\\uDD04 Refresh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 17\n            }, this), availableAccounts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-4 bg-yellow-50 border border-yellow-200 rounded-md\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-yellow-800 text-sm\",\n                  children: \"No LinkedIn accounts available. Please add accounts first in the LinkedIn Accounts section.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: fetchAvailableAccounts,\n                  className: \"ml-2 px-3 py-1 bg-yellow-600 text-white text-xs rounded hover:bg-yellow-700\",\n                  children: \"Check Again\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-600 mb-2\",\n                  children: \"Account Selection Mode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex space-x-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      name: \"accountMode\",\n                      value: \"rotation\",\n                      checked: formData.accountSelectionMode === 'rotation',\n                      onChange: e => setFormData(prev => ({\n                        ...prev,\n                        accountSelectionMode: e.target.value\n                      })),\n                      className: \"mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 592,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-sm text-gray-700\",\n                      children: \"Auto Rotation\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 603,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 591,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      name: \"accountMode\",\n                      value: \"specific\",\n                      checked: formData.accountSelectionMode === 'specific',\n                      onChange: e => setFormData(prev => ({\n                        ...prev,\n                        accountSelectionMode: e.target.value\n                      })),\n                      className: \"mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 606,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-sm text-gray-700\",\n                      children: \"Specific Account\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 617,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      name: \"accountMode\",\n                      value: \"multiple\",\n                      checked: formData.accountSelectionMode === 'multiple',\n                      onChange: e => setFormData(prev => ({\n                        ...prev,\n                        accountSelectionMode: e.target.value\n                      })),\n                      className: \"mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 620,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-sm text-gray-700\",\n                      children: \"Multiple Accounts\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 631,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 619,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 21\n              }, this), formData.accountSelectionMode === 'specific' && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-600 mb-2\",\n                  children: \"Select LinkedIn Account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: formData.selectedAccountIds[0] || '',\n                  onChange: e => setFormData(prev => ({\n                    ...prev,\n                    selectedAccountIds: e.target.value ? [e.target.value] : []\n                  })),\n                  className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Choose an account...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 27\n                  }, this), availableAccounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: account.id,\n                    children: [account.account_name, \" (\", account.validation_status, \")\"]\n                  }, account.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 652,\n                    columnNumber: 29\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-4 bg-green-50 border border-green-200 rounded-md\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-green-800 text-sm font-medium\",\n                    children: [\"\\u2705 \", availableAccounts.length, \" active LinkedIn account(s) available\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 663,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: fetchAvailableAccounts,\n                    className: \"text-blue-600 hover:text-blue-800 text-sm underline\",\n                    children: \"Refresh\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 666,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-3 space-y-2\",\n                  children: availableAccounts.map((account, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center justify-between bg-white p-2 rounded border\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center space-x-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-sm font-medium text-gray-700\",\n                        children: account.account_name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 680,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `px-2 py-1 text-xs rounded-full ${account.validation_status === 'ACTIVE' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}`,\n                        children: account.validation_status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 683,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 679,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs text-gray-500\",\n                      children: account.last_validated_at ? `Last validated: ${new Date(account.last_validated_at).toLocaleDateString()}` : 'Never validated'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 691,\n                      columnNumber: 29\n                    }, this)]\n                  }, account.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 678,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 676,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-3 p-2 bg-blue-50 rounded\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-blue-800 text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Selection Mode:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 704,\n                      columnNumber: 27\n                    }, this), \" \", formData.accountSelectionMode === 'rotation' ? 'Auto Rotation (all accounts will be used)' : `Specific Account (${formData.selectedAccountIds[0] ? ((_availableAccounts$fi = availableAccounts.find(acc => acc.id === formData.selectedAccountIds[0])) === null || _availableAccounts$fi === void 0 ? void 0 : _availableAccounts$fi.account_name) || 'None selected' : 'None selected'})`]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 703,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 702,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 19\n            }, this), errors.accounts && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-sm mt-1\",\n              children: errors.accounts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between pt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setStep(1),\n              className: \"px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\",\n              children: \"\\u2190 Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleClose,\n                className: \"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 726,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                disabled: availableAccounts.length === 0,\n                className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\",\n                children: \"Create Job\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 733,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 5\n  }, this);\n};\n_s(NewJobModal, \"txUGk6vPfx7oz8PONlLPR4NVcKk=\");\n_c = NewJobModal;\nexport default NewJobModal;\nvar _c;\n$RefreshReg$(_c, \"NewJobModal\");","map":{"version":3,"names":["React","useState","useEffect","XMarkIcon","DocumentArrowUpIcon","MagnifyingGlassIcon","BuildingOfficeIcon","UserIcon","api","jsxDEV","_jsxDEV","NewJobModal","isOpen","onClose","onSubmit","_s","_availableAccounts$fi","step","setStep","jobType","setJobType","formData","setFormData","urls","searchQuery","maxPages","jobName","accountSelectionMode","selectedAccountIds","file","urlsText","setUrlsText","inputMethod","setInputMethod","availableAccounts","setAvailableAccounts","errors","setErrors","dragActive","setDragActive","jobTypes","id","name","description","icon","color","inputType","placeholder","fetchAvailableAccounts","interval","setInterval","clearInterval","handleAccountUpdate","window","addEventListener","removeEventListener","console","log","response","get","result","data","success","Array","isArray","accounts","warn","filteredAccounts","filter","account","validation_status","length","prev","undefined","error","_error$response","message","resetForm","handleClose","handleJobTypeSelect","type","handleUrlsChange","e","text","target","value","split","url","trim","handleFileUpload","allowedTypes","fileExtension","toLowerCase","substring","lastIndexOf","includes","handleDrag","preventDefault","stopPropagation","handleDrop","dataTransfer","files","validateForm","dataToValidate","newErrors","invalidUrls","Object","keys","downloadTemplate","responseType","URL","createObjectURL","Blob","link","document","createElement","href","filenames","setAttribute","body","appendChild","click","remove","revokeObjectURL","handleSubmit","updatedFormData","isValid","submitData","map","acc","selectedJobType","find","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","IconComponent","onChange","min","max","parseInt","checked","rows","onDragEnter","onDragLeave","onDragOver","onDrop","accept","htmlFor","account_name","index","last_validated_at","Date","toLocaleDateString","disabled","_c","$RefreshReg$"],"sources":["C:/Users/krush/OneDrive/Desktop/Final/linkedin-automation-saas/frontend/src/components/Jobs/NewJobModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { XMarkIcon, DocumentArrowUpIcon, MagnifyingGlassIcon, BuildingOfficeIcon, UserIcon } from '@heroicons/react/24/outline';\r\nimport api from '../../services/api';\r\n\r\nconst NewJobModal = ({ isOpen, onClose, onSubmit }) => {\r\n  const [step, setStep] = useState(1);\r\n  const [jobType, setJobType] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    jobType: '',\r\n    urls: [],\r\n    searchQuery: '',\r\n    maxPages: 5,\r\n    jobName: '',\r\n    accountSelectionMode: 'rotation',\r\n    selectedAccountIds: [],\r\n    file: null\r\n  });\r\n  const [urlsText, setUrlsText] = useState('');\r\n  const [inputMethod, setInputMethod] = useState('urls'); // 'urls' or 'file'\r\n  const [availableAccounts, setAvailableAccounts] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [dragActive, setDragActive] = useState(false);\r\n\r\n  const jobTypes = [\r\n    {\r\n      id: 'profiles',\r\n      name: 'Scrape LinkedIn Profiles',\r\n      description: 'Extract profile data from LinkedIn profile URLs',\r\n      icon: UserIcon,\r\n      color: 'bg-blue-500',\r\n      inputType: 'urls',\r\n      placeholder: 'Enter LinkedIn profile URLs (one per line)'\r\n    },\r\n    {\r\n      id: 'companies',\r\n      name: 'Scrape Company Profiles',\r\n      description: 'Extract company data from LinkedIn company URLs',\r\n      icon: BuildingOfficeIcon,\r\n      color: 'bg-green-500',\r\n      inputType: 'urls',\r\n      placeholder: 'Enter LinkedIn company URLs (one per line)'\r\n    },\r\n    {\r\n      id: 'sales_navigator',\r\n      name: 'Sales Navigator Search',\r\n      description: 'Scrape Sales Navigator search results with pagination',\r\n      icon: MagnifyingGlassIcon,\r\n      color: 'bg-purple-500',\r\n      inputType: 'search',\r\n      placeholder: 'Enter search query or Sales Navigator URL'\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      fetchAvailableAccounts();\r\n      \r\n      // Set up interval to refresh accounts every 30 seconds when modal is open\r\n      const interval = setInterval(() => {\r\n        fetchAvailableAccounts();\r\n      }, 30000);\r\n      \r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [isOpen]);\r\n  \r\n  // Listen for account updates from other parts of the app\r\n  useEffect(() => {\r\n    const handleAccountUpdate = () => {\r\n      if (isOpen) {\r\n        fetchAvailableAccounts();\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('linkedin-accounts-updated', handleAccountUpdate);\r\n    return () => window.removeEventListener('linkedin-accounts-updated', handleAccountUpdate);\r\n  }, [isOpen]);\r\n\r\n  const fetchAvailableAccounts = async () => {\r\n    try {\r\n      console.log('🔍 Fetching available accounts...');\r\n      \r\n      // Use the configured API service instead of direct fetch\r\n      const response = await api.get('/api/linkedin-accounts/available');\r\n      \r\n      console.log('📋 Raw accounts response:', response);\r\n      \r\n      // Support both Axios-style (response.data) and raw JSON (response)\r\n      const result = response.data || response;\r\n      \r\n      console.log('📋 Parsed accounts result:', result);\r\n      console.log('📋 Result type:', typeof result);\r\n      console.log('📋 Result.success:', result?.success);\r\n      console.log('📋 Result.data type:', typeof result?.data);\r\n      console.log('📋 Result.data isArray:', Array.isArray(result?.data));\r\n      console.log('📋 Result.data content:', result?.data);\r\n      \r\n      // Handle multiple response formats\r\n      let accounts = [];\r\n      \r\n      if (result && result.success && Array.isArray(result.data)) {\r\n        // Standard API response: {success: true, data: [...]}\r\n        accounts = result.data;\r\n        console.log('✅ Using result.data format');\r\n      } else if (Array.isArray(result)) {\r\n        // Direct array response: [...]\r\n        accounts = result;\r\n        console.log('✅ Using direct array format');\r\n      } else if (result && Array.isArray(result.accounts)) {\r\n        // Object with accounts property: {accounts: [...]}\r\n        accounts = result.accounts;\r\n        console.log('✅ Using result.accounts format');\r\n      } else {\r\n        console.warn('⚠️ Invalid accounts response format:', result);\r\n        setAvailableAccounts([]);\r\n        return;\r\n      }\r\n      \r\n      // Filter for active/pending accounts\r\n      const filteredAccounts = accounts.filter(account => \r\n        account.validation_status === 'ACTIVE' || \r\n        account.validation_status === 'PENDING'\r\n      );\r\n      \r\n      console.log(`📊 Total accounts: ${accounts.length}`);\r\n      console.log(`📊 Filtered accounts: ${filteredAccounts.length}`);\r\n      console.log('📊 Filtered accounts list:', filteredAccounts);\r\n      \r\n      setAvailableAccounts(filteredAccounts);\r\n      \r\n      // Clear any previous error about accounts\r\n      setErrors(prev => ({ ...prev, accounts: undefined }));\r\n    } catch (error) {\r\n      console.error('❌ Failed to fetch available accounts:', error);\r\n      console.error('Error details:', error?.response?.data || error?.message || error);\r\n      setAvailableAccounts([]);\r\n      \r\n      // Show user-friendly error message\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        accounts: 'Failed to load LinkedIn accounts. Please try refreshing the page.'\r\n      }));\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setStep(1);\r\n    setJobType('');\r\n    setFormData({\r\n      jobType: '',\r\n      urls: [],\r\n      searchQuery: '',\r\n      maxPages: 5,\r\n      jobName: '',\r\n      accountSelectionMode: 'rotation',\r\n      selectedAccountIds: [],\r\n      file: null\r\n    });\r\n    setUrlsText('');\r\n    setInputMethod('urls');\r\n    setErrors({});\r\n    setDragActive(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    resetForm();\r\n    onClose();\r\n  };\r\n\r\n  const handleJobTypeSelect = (type) => {\r\n    setJobType(type);\r\n    setFormData(prev => ({ ...prev, jobType: type }));\r\n    setStep(2);\r\n  };\r\n\r\n  const handleUrlsChange = (e) => {\r\n    const text = e.target.value;\r\n    setUrlsText(text);\r\n    const urls = text.split('\\n').filter(url => url.trim().length > 0);\r\n    setFormData(prev => ({ ...prev, urls }));\r\n  };\r\n\r\n  const handleFileUpload = (file) => {\r\n    if (file) {\r\n      const allowedTypes = ['.csv', '.xlsx', '.xls'];\r\n      const fileExtension = file.name.toLowerCase().substring(file.name.lastIndexOf('.'));\r\n      \r\n      if (!allowedTypes.includes(fileExtension)) {\r\n        setErrors(prev => ({ ...prev, file: 'Please upload a CSV or Excel file' }));\r\n        return;\r\n      }\r\n      \r\n      setFormData(prev => ({ ...prev, file }));\r\n      setErrors(prev => ({ ...prev, file: '' }));\r\n    }\r\n  };\r\n\r\n  const handleDrag = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (e.type === 'dragenter' || e.type === 'dragover') {\r\n      setDragActive(true);\r\n    } else if (e.type === 'dragleave') {\r\n      setDragActive(false);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(false);\r\n    \r\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n      handleFileUpload(e.dataTransfer.files[0]);\r\n    }\r\n  };\r\n\r\n  const validateForm = (dataToValidate = formData) => {\r\n    const newErrors = {};\r\n    \r\n    if (!dataToValidate.jobName.trim()) {\r\n      newErrors.jobName = 'Job name is required';\r\n    }\r\n    \r\n    if (jobType === 'sales_navigator') {\r\n      if (!dataToValidate.searchQuery.trim()) {\r\n        newErrors.searchQuery = 'Search query or Sales Navigator URL is required';\r\n      }\r\n    } else {\r\n      if (inputMethod === 'file') {\r\n        if (!dataToValidate.file) {\r\n          newErrors.file = 'Please upload a CSV or Excel file';\r\n        }\r\n      } else {\r\n        // Validate URLs from the data being validated\r\n        if (!dataToValidate.urls || dataToValidate.urls.length === 0) {\r\n          newErrors.urls = 'Please enter at least one LinkedIn URL';\r\n        } else {\r\n          // Validate URL format\r\n          const invalidUrls = dataToValidate.urls.filter(url => !url.includes('linkedin.com'));\r\n          if (invalidUrls.length > 0) {\r\n            newErrors.urls = 'All URLs must be LinkedIn URLs';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Only check for accounts if we've attempted to fetch them\r\n    if (availableAccounts.length === 0) {\r\n      newErrors.accounts = 'No LinkedIn accounts available. Please add accounts first in the LinkedIn Accounts section.';\r\n    } else if (dataToValidate.accountSelectionMode === 'specific' && (!dataToValidate.selectedAccountIds || dataToValidate.selectedAccountIds.length === 0)) {\r\n      newErrors.accounts = 'Please select a specific LinkedIn account to use for scraping.';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const downloadTemplate = async (jobType) => {\r\n    try {\r\n      const response = await api.get(`/api/templates/${jobType}`, {\r\n        responseType: 'blob'\r\n      });\r\n      \r\n      // Create download link\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      \r\n      // Set filename based on job type\r\n      const filenames = {\r\n        'profiles': 'profile-scraping-template.csv',\r\n        'companies': 'company-scraping-template.csv',\r\n        'sales_navigator': 'sales-navigator-template.csv'\r\n      };\r\n      \r\n      link.setAttribute('download', filenames[jobType] || 'template.csv');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n      window.URL.revokeObjectURL(url);\r\n      \r\n    } catch (error) {\r\n      console.error('Error downloading template:', error);\r\n      // You could add a toast notification here\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    console.log('📝 Form submission started');\r\n    console.log('📝 Current formData:', formData);\r\n    console.log('📝 Current jobType:', jobType);\r\n    console.log('📝 Current urlsText:', urlsText);\r\n    console.log('📝 Current inputMethod:', inputMethod);\r\n    console.log('📝 Available accounts:', availableAccounts);\r\n    \r\n    // Update form data with URLs from text input before validation\r\n    const urls = urlsText.split('\\n').filter(url => url.trim().length > 0);\r\n    const updatedFormData = {\r\n      ...formData,\r\n      urls: inputMethod === 'urls' ? urls : formData.urls\r\n    };\r\n    \r\n    console.log('📝 Updated form data:', updatedFormData);\r\n    \r\n    // Update the form data state\r\n    setFormData(updatedFormData);\r\n    \r\n    console.log('📝 Running validation...');\r\n    const isValid = validateForm(updatedFormData);\r\n    console.log('📝 Validation result:', isValid);\r\n    console.log('📝 Current errors:', errors);\r\n    \r\n    if (isValid) {\r\n      // Prepare the form data with proper account selection\r\n      const submitData = {\r\n        ...updatedFormData,\r\n        selectedAccountIds: updatedFormData.accountSelectionMode === 'specific' \r\n          ? updatedFormData.selectedAccountIds\r\n          : availableAccounts.map(acc => acc.id)\r\n      };\r\n      \r\n      console.log('🚀 Submitting job data:', submitData);\r\n      onSubmit(submitData);\r\n      handleClose();\r\n    } else {\r\n      console.log('❌ Validation failed, not submitting');\r\n    }\r\n  };\r\n\r\n  const selectedJobType = jobTypes.find(type => type.id === jobType);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"flex justify-between items-center p-6 border-b\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900\">\r\n            {step === 1 ? 'Create New Job' : `Create ${selectedJobType?.name}`}\r\n          </h2>\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n          >\r\n            <XMarkIcon className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"p-6\">\r\n          {step === 1 ? (\r\n            <div>\r\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n                Select Job Type\r\n              </h3>\r\n              <div className=\"grid grid-cols-1 gap-4\">\r\n                {jobTypes.map((type) => {\r\n                  const IconComponent = type.icon;\r\n                  return (\r\n                    <button\r\n                      key={type.id}\r\n                      type=\"button\"\r\n                      onClick={() => handleJobTypeSelect(type.id)}\r\n                      className=\"p-4 border-2 border-gray-200 rounded-lg hover:border-blue-500 hover:bg-blue-50 transition-all text-left group\"\r\n                    >\r\n                      <div className=\"flex items-start space-x-3\">\r\n                        <div className={`p-2 rounded-lg ${type.color} text-white group-hover:scale-110 transition-transform`}>\r\n                          <IconComponent className=\"h-6 w-6\" />\r\n                        </div>\r\n                        <div className=\"flex-1\">\r\n                          <h4 className=\"font-medium text-gray-900 group-hover:text-blue-600\">\r\n                            {type.name}\r\n                          </h4>\r\n                          <p className=\"text-sm text-gray-600 mt-1\">\r\n                            {type.description}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-6\">\r\n              {/* Job Name */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Job Name *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.jobName}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, jobName: e.target.value }))}\r\n                  className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-900 placeholder-gray-500 ${\r\n                    errors.jobName ? 'border-red-500' : 'border-gray-300'\r\n                  }`}\r\n                  placeholder=\"Enter a descriptive name for this job\"\r\n                />\r\n                {errors.jobName && (\r\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.jobName}</p>\r\n                )}\r\n              </div>\r\n\r\n              {/* URL Input or Search Query */}\r\n              {jobType === 'sales_navigator' ? (\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Search Query or Sales Navigator URL *\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formData.searchQuery}\r\n                      onChange={(e) => setFormData(prev => ({ ...prev, searchQuery: e.target.value }))}\r\n                      className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                        errors.searchQuery ? 'border-red-500' : 'border-gray-300'\r\n                      }`}\r\n                      placeholder=\"e.g., Software Engineer San Francisco OR https://www.linkedin.com/sales/search/...\"\r\n                    />\r\n                    {errors.searchQuery && (\r\n                      <p className=\"text-red-500 text-sm mt-1\">{errors.searchQuery}</p>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Max Pages to Scrape\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      max=\"25\"\r\n                      value={formData.maxPages}\r\n                      onChange={(e) => setFormData(prev => ({ ...prev, maxPages: parseInt(e.target.value) || 5 }))}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                    <p className=\"text-gray-500 text-xs mt-1\">\r\n                      Number of result pages to scrape (1-25)\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    LinkedIn URLs *\r\n                  </label>\r\n                  \r\n                  {/* Input Method Selection */}\r\n                  <div className=\"flex space-x-4 mb-4\">\r\n                    <label className=\"flex items-center cursor-pointer\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"inputMethod\"\r\n                        value=\"urls\"\r\n                        checked={inputMethod === 'urls'}\r\n                        onChange={(e) => setInputMethod(e.target.value)}\r\n                        className=\"mr-2 text-blue-600 focus:ring-blue-500\"\r\n                      />\r\n                      <span className=\"text-sm font-medium text-gray-900\">Paste URLs</span>\r\n                    </label>\r\n                    <label className=\"flex items-center cursor-pointer\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"inputMethod\"\r\n                        value=\"file\"\r\n                        checked={inputMethod === 'file'}\r\n                        onChange={(e) => setInputMethod(e.target.value)}\r\n                        className=\"mr-2 text-blue-600 focus:ring-blue-500\"\r\n                      />\r\n                      <span className=\"text-sm font-medium text-gray-900\">Upload CSV/Excel</span>\r\n                    </label>\r\n                  </div>\r\n                  \r\n                  {inputMethod === 'urls' ? (\r\n                     <div>\r\n                       <div className=\"flex justify-between items-center mb-2\">\r\n                         <span className=\"text-sm text-gray-600\">Enter URLs manually:</span>\r\n                         <button\r\n                           type=\"button\"\r\n                           onClick={() => downloadTemplate(jobType)}\r\n                           className=\"text-blue-500 hover:text-blue-700 text-sm underline\"\r\n                         >\r\n                           📥 Download Sample Template\r\n                         </button>\r\n                       </div>\r\n                       <textarea\r\n                         value={urlsText}\r\n                         onChange={handleUrlsChange}\r\n                         rows={8}\r\n                         className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-900 placeholder-gray-500 ${\r\n                           errors.urls ? 'border-red-500' : 'border-gray-300'\r\n                         }`}\r\n                         placeholder={selectedJobType?.placeholder || 'Enter LinkedIn URLs (one per line)'}\r\n                       />\r\n                       {errors.urls && (\r\n                         <p className=\"text-red-500 text-sm mt-1\">{errors.urls}</p>\r\n                       )}\r\n                       <p className=\"text-gray-500 text-xs mt-2\">\r\n                         Enter one LinkedIn URL per line. {formData.urls.length} URLs entered.\r\n                       </p>\r\n                     </div>\r\n                  ) : (\r\n                    <div>\r\n                      <div\r\n                        className={`border-2 border-dashed rounded-lg p-6 text-center transition-colors ${\r\n                          dragActive ? 'border-blue-500 bg-blue-50' : 'border-gray-300'\r\n                        } ${errors.file ? 'border-red-500' : ''}`}\r\n                        onDragEnter={handleDrag}\r\n                        onDragLeave={handleDrag}\r\n                        onDragOver={handleDrag}\r\n                        onDrop={handleDrop}\r\n                      >\r\n                        <DocumentArrowUpIcon className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                        {formData.file ? (\r\n                          <div>\r\n                            <p className=\"text-green-600 font-medium\">{formData.file.name}</p>\r\n                            <p className=\"text-gray-500 text-sm\">File uploaded successfully</p>\r\n                          </div>\r\n                        ) : (\r\n                          <div>\r\n                            <p className=\"text-gray-600 mb-2\">\r\n                              Drag and drop your CSV/Excel file here, or\r\n                            </p>\r\n                            <input\r\n                              type=\"file\"\r\n                              accept=\".csv,.xlsx,.xls\"\r\n                              onChange={(e) => handleFileUpload(e.target.files[0])}\r\n                              className=\"hidden\"\r\n                              id=\"file-upload\"\r\n                            />\r\n                            <label\r\n                              htmlFor=\"file-upload\"\r\n                              className=\"inline-block bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 cursor-pointer transition-colors\"\r\n                            >\r\n                              Choose File\r\n                            </label>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      {errors.file && (\r\n                        <p className=\"text-red-500 text-sm mt-1\">{errors.file}</p>\r\n                      )}\r\n                      <p className=\"text-gray-500 text-xs mt-2\">\r\n                        Supported formats: CSV, Excel (.xlsx, .xls). First column should contain LinkedIn URLs.\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              {/* Account Selection */}\r\n              <div>\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <label className=\"block text-sm font-medium text-gray-700\">\r\n                    LinkedIn Accounts * ({availableAccounts.length} available)\r\n                  </label>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={fetchAvailableAccounts}\r\n                    className=\"text-blue-600 hover:text-blue-800 text-sm font-medium flex items-center\"\r\n                  >\r\n                    🔄 Refresh\r\n                  </button>\r\n                </div>\r\n                \r\n                {availableAccounts.length === 0 ? (\r\n                  <div className=\"p-4 bg-yellow-50 border border-yellow-200 rounded-md\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <p className=\"text-yellow-800 text-sm\">\r\n                        No LinkedIn accounts available. Please add accounts first in the LinkedIn Accounts section.\r\n                      </p>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={fetchAvailableAccounts}\r\n                        className=\"ml-2 px-3 py-1 bg-yellow-600 text-white text-xs rounded hover:bg-yellow-700\"\r\n                      >\r\n                        Check Again\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"space-y-4\">\r\n                    {/* Account Selection Mode */}\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-600 mb-2\">\r\n                        Account Selection Mode\r\n                      </label>\r\n                      <div className=\"flex space-x-4\">\r\n                        <label className=\"flex items-center\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"accountMode\"\r\n                            value=\"rotation\"\r\n                            checked={formData.accountSelectionMode === 'rotation'}\r\n                            onChange={(e) => setFormData(prev => ({\r\n                              ...prev,\r\n                              accountSelectionMode: e.target.value\r\n                            }))}\r\n                            className=\"mr-2\"\r\n                          />\r\n                          <span className=\"text-sm text-gray-700\">Auto Rotation</span>\r\n                        </label>\r\n                        <label className=\"flex items-center\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"accountMode\"\r\n                            value=\"specific\"\r\n                            checked={formData.accountSelectionMode === 'specific'}\r\n                            onChange={(e) => setFormData(prev => ({\r\n                              ...prev,\r\n                              accountSelectionMode: e.target.value\r\n                            }))}\r\n                            className=\"mr-2\"\r\n                          />\r\n                          <span className=\"text-sm text-gray-700\">Specific Account</span>\r\n                        </label>\r\n                        <label className=\"flex items-center\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"accountMode\"\r\n                            value=\"multiple\"\r\n                            checked={formData.accountSelectionMode === 'multiple'}\r\n                            onChange={(e) => setFormData(prev => ({\r\n                              ...prev,\r\n                              accountSelectionMode: e.target.value\r\n                            }))}\r\n                            className=\"mr-2\"\r\n                          />\r\n                          <span className=\"text-sm text-gray-700\">Multiple Accounts</span>\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Specific Account Selection */}\r\n                    {formData.accountSelectionMode === 'specific' && (\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-600 mb-2\">\r\n                          Select LinkedIn Account\r\n                        </label>\r\n                        <select\r\n                          value={formData.selectedAccountIds[0] || ''}\r\n                          onChange={(e) => setFormData(prev => ({\r\n                            ...prev,\r\n                            selectedAccountIds: e.target.value ? [e.target.value] : []\r\n                          }))}\r\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                        >\r\n                          <option value=\"\">Choose an account...</option>\r\n                          {availableAccounts.map(account => (\r\n                            <option key={account.id} value={account.id}>\r\n                              {account.account_name} ({account.validation_status})\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    )}\r\n\r\n                    {/* Account Status Display */}\r\n                    <div className=\"p-4 bg-green-50 border border-green-200 rounded-md\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <p className=\"text-green-800 text-sm font-medium\">\r\n                          ✅ {availableAccounts.length} active LinkedIn account(s) available\r\n                        </p>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={fetchAvailableAccounts}\r\n                          className=\"text-blue-600 hover:text-blue-800 text-sm underline\"\r\n                        >\r\n                          Refresh\r\n                        </button>\r\n                      </div>\r\n                      \r\n                      {/* Account List */}\r\n                      <div className=\"mt-3 space-y-2\">\r\n                        {availableAccounts.map((account, index) => (\r\n                          <div key={account.id} className=\"flex items-center justify-between bg-white p-2 rounded border\">\r\n                            <div className=\"flex items-center space-x-3\">\r\n                              <span className=\"text-sm font-medium text-gray-700\">\r\n                                {account.account_name}\r\n                              </span>\r\n                              <span className={`px-2 py-1 text-xs rounded-full ${\r\n                                account.validation_status === 'ACTIVE' \r\n                                  ? 'bg-green-100 text-green-800' \r\n                                  : 'bg-yellow-100 text-yellow-800'\r\n                              }`}>\r\n                                {account.validation_status}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"text-xs text-gray-500\">\r\n                              {account.last_validated_at \r\n                                ? `Last validated: ${new Date(account.last_validated_at).toLocaleDateString()}`\r\n                                : 'Never validated'\r\n                              }\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                      \r\n                      {/* Selection Summary */}\r\n                      <div className=\"mt-3 p-2 bg-blue-50 rounded\">\r\n                        <p className=\"text-blue-800 text-sm\">\r\n                          <strong>Selection Mode:</strong> {formData.accountSelectionMode === 'rotation' ? 'Auto Rotation (all accounts will be used)' : `Specific Account (${formData.selectedAccountIds[0] ? availableAccounts.find(acc => acc.id === formData.selectedAccountIds[0])?.account_name || 'None selected' : 'None selected'})`}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                \r\n                {errors.accounts && (\r\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.accounts}</p>\r\n                )}\r\n              </div>\r\n\r\n              {/* Form Actions */}\r\n              <div className=\"flex justify-between pt-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setStep(1)}\r\n                  className=\"px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\"\r\n                >\r\n                  ← Back\r\n                </button>\r\n                <div className=\"flex space-x-3\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={handleClose}\r\n                    className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    disabled={availableAccounts.length === 0}\r\n                    className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n                  >\r\n                    Create Job\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewJobModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}