{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krush\\\\OneDrive\\\\Desktop\\\\Final\\\\linkedin-automation-saas\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\n\n// =============================\n// Initial State\n// =============================\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: null,\n  loading: true,\n  error: null\n};\n\n// =============================\n// Action Types\n// =============================\nconst AUTH_ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGOUT: 'LOGOUT',\n  SET_ERROR: 'SET_ERROR',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  UPDATE_USER: 'UPDATE_USER'\n};\n\n// =============================\n// Reducer\n// =============================\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    default:\n      return state;\n  }\n};\n\n// =============================\n// Context Setup\n// =============================\nconst AuthContext = /*#__PURE__*/createContext();\n\n// =============================\n// Provider Component\n// =============================\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // =============================\n  // Auto-load user + token on app start\n  // =============================\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        const token = localStorage.getItem('authToken') || localStorage.getItem('token');\n        const userStr = localStorage.getItem('user');\n        if (token) {\n          // Ensure axios has token\n          authAPI.setAuthToken(token);\n        }\n        if (token && userStr) {\n          const user = JSON.parse(userStr);\n          dispatch({\n            type: AUTH_ACTIONS.LOGIN_SUCCESS,\n            payload: {\n              user,\n              token\n            }\n          });\n        } else if (token) {\n          // If only token is present, try to fetch user\n          authAPI.setAuthToken(token);\n          authAPI.getProfile().then(profile => {\n            if (profile) {\n              localStorage.setItem('user', JSON.stringify(profile));\n              dispatch({\n                type: AUTH_ACTIONS.LOGIN_SUCCESS,\n                payload: {\n                  user: profile,\n                  token\n                }\n              });\n            } else {\n              dispatch({\n                type: AUTH_ACTIONS.SET_LOADING,\n                payload: false\n              });\n            }\n          }).catch(() => {\n            dispatch({\n              type: AUTH_ACTIONS.SET_LOADING,\n              payload: false\n            });\n          });\n        } else {\n          dispatch({\n            type: AUTH_ACTIONS.SET_LOADING,\n            payload: false\n          });\n        }\n      } catch (error) {\n        console.error('❌ Error loading user:', error);\n        localStorage.clear();\n        authAPI.clearAuthToken();\n        dispatch({\n          type: AUTH_ACTIONS.SET_LOADING,\n          payload: false\n        });\n      }\n    };\n    loadUser();\n  }, []);\n\n  // =============================\n  // Login Function\n  // =============================\n  const login = async (email, password) => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      dispatch({\n        type: AUTH_ACTIONS.CLEAR_ERROR\n      });\n      console.log('🔐 Attempting login for:', email);\n      const result = await authAPI.login(email, password);\n      const data = result || {};\n      if (data.success) {\n        const user = data.user || null;\n        const token = data.authToken || null;\n        const refreshToken = data.refreshToken || null;\n\n        // Store tokens and user info\n        localStorage.setItem('authToken', token);\n        localStorage.setItem('token', token); // for backward compatibility\n        localStorage.setItem('refreshToken', refreshToken || '');\n        localStorage.setItem('user', JSON.stringify(user));\n\n        // Sync token to chrome.storage for extension\n        try {\n          var _window$chrome, _window$chrome$storag;\n          if (typeof window !== 'undefined' && (_window$chrome = window.chrome) !== null && _window$chrome !== void 0 && (_window$chrome$storag = _window$chrome.storage) !== null && _window$chrome$storag !== void 0 && _window$chrome$storag.local) {\n            window.chrome.storage.local.set({\n              toolToken: token,\n              toolUser: user\n            });\n          }\n        } catch (_) {}\n\n        // Apply token globally\n        authAPI.setAuthToken(token);\n\n        // Update state\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: {\n            user,\n            token\n          }\n        });\n        toast.success('Login successful!');\n        console.log('✅ Token saved and applied');\n        return {\n          success: true\n        };\n      } else {\n        const friendly = data.message || 'Login failed';\n        console.error('❌ Login failed:', friendly);\n        dispatch({\n          type: AUTH_ACTIONS.SET_ERROR,\n          payload: friendly\n        });\n        toast.error(friendly);\n        return {\n          success: false,\n          message: friendly\n        };\n      }\n    } catch (error) {\n      var _error$response;\n      const status = (error === null || error === void 0 ? void 0 : error.status) || (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status);\n      let message = (error === null || error === void 0 ? void 0 : error.message) || 'Login failed';\n      if (!status && /Network Error/i.test(message)) {\n        message = 'Backend unreachable. Make sure the server is running.';\n      } else if (status === 401) {\n        message = 'Invalid credentials. Please check your email and password.';\n      } else if (status === 429) {\n        message = 'Too many attempts. Please wait a moment.';\n      } else if (status === 403) {\n        message = 'Access denied. You may not have permission.';\n      } else if (status === 500) {\n        message = 'Server error. Try again later.';\n      }\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: message\n      });\n      toast.error(message);\n      console.error(`❌ Login error: ${message}`);\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    }\n  };\n\n  // =============================\n  // Register Function\n  // =============================\n  const register = async userData => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      dispatch({\n        type: AUTH_ACTIONS.CLEAR_ERROR\n      });\n      const response = await authAPI.register(userData);\n      if (response.success) {\n        const {\n          user,\n          accessToken,\n          refreshToken\n        } = response.data;\n        localStorage.setItem('token', accessToken);\n        localStorage.setItem('refreshToken', refreshToken);\n        localStorage.setItem('user', JSON.stringify(user));\n        authAPI.setAuthToken(accessToken);\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: {\n            user,\n            token: accessToken\n          }\n        });\n        toast.success('Registration successful!');\n        return {\n          success: true\n        };\n      } else {\n        const message = response.message || 'Registration failed';\n        dispatch({\n          type: AUTH_ACTIONS.SET_ERROR,\n          payload: message\n        });\n        toast.error(message);\n        return {\n          success: false,\n          message\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: message\n      });\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    }\n  };\n\n  // =============================\n  // Logout Function\n  // =============================\n  const logout = async () => {\n    try {\n      await authAPI.logout().catch(() => {});\n    } finally {\n      localStorage.clear();\n      // Clear extension token sync\n      try {\n        var _window$chrome2, _window$chrome2$stora;\n        if (typeof window !== 'undefined' && (_window$chrome2 = window.chrome) !== null && _window$chrome2 !== void 0 && (_window$chrome2$stora = _window$chrome2.storage) !== null && _window$chrome2$stora !== void 0 && _window$chrome2$stora.local) {\n          window.chrome.storage.local.remove(['toolToken', 'toolUser']);\n        }\n      } catch (_) {}\n      authAPI.clearAuthToken();\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT\n      });\n      toast.success('Logged out successfully!');\n    }\n  };\n\n  // =============================\n  // Update User Function\n  // =============================\n  const updateUser = userData => {\n    const updatedUser = {\n      ...state.user,\n      ...userData\n    };\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n    dispatch({\n      type: AUTH_ACTIONS.UPDATE_USER,\n      payload: userData\n    });\n  };\n\n  // =============================\n  // Global Value\n  // =============================\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n\n// =============================\n// Hook to Use Context\n// =============================\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// =============================\n// Always Apply Token on Load\n// =============================\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst savedToken = localStorage.getItem('authToken') || localStorage.getItem('token');\nif (savedToken) {\n  authAPI.setAuthToken(savedToken);\n}\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","toast","jsxDEV","_jsxDEV","initialState","user","token","loading","error","AUTH_ACTIONS","SET_LOADING","LOGIN_SUCCESS","LOGOUT","SET_ERROR","CLEAR_ERROR","UPDATE_USER","authReducer","state","action","type","payload","AuthContext","AuthProvider","children","_s","dispatch","loadUser","localStorage","getItem","userStr","setAuthToken","JSON","parse","getProfile","then","profile","setItem","stringify","catch","console","clear","clearAuthToken","login","email","password","log","result","data","success","authToken","refreshToken","_window$chrome","_window$chrome$storag","window","chrome","storage","local","set","toolToken","toolUser","_","friendly","message","_error$response","status","response","test","register","userData","accessToken","_error$response2","_error$response2$data","logout","_window$chrome2","_window$chrome2$stora","remove","updateUser","updatedUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","savedToken","$RefreshReg$"],"sources":["C:/Users/krush/OneDrive/Desktop/Final/linkedin-automation-saas/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\n\n// =============================\n// Initial State\n// =============================\nconst initialState = {\n  user: null,\n  token: null,\n  loading: true,\n  error: null,\n};\n\n// =============================\n// Action Types\n// =============================\nconst AUTH_ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGOUT: 'LOGOUT',\n  SET_ERROR: 'SET_ERROR',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  UPDATE_USER: 'UPDATE_USER',\n};\n\n// =============================\n// Reducer\n// =============================\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.SET_LOADING:\n      return { ...state, loading: action.payload };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return { ...state, user: action.payload.user, token: action.payload.token, loading: false, error: null };\n    case AUTH_ACTIONS.LOGOUT:\n      return { ...state, user: null, token: null, loading: false, error: null };\n    case AUTH_ACTIONS.SET_ERROR:\n      return { ...state, error: action.payload, loading: false };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return { ...state, error: null };\n    case AUTH_ACTIONS.UPDATE_USER:\n      return { ...state, user: { ...state.user, ...action.payload } };\n    default:\n      return state;\n  }\n};\n\n// =============================\n// Context Setup\n// =============================\nconst AuthContext = createContext();\n\n// =============================\n// Provider Component\n// =============================\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // =============================\n  // Auto-load user + token on app start\n  // =============================\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        const token = localStorage.getItem('authToken') || localStorage.getItem('token');\n        const userStr = localStorage.getItem('user');\n\n        if (token) {\n          // Ensure axios has token\n          authAPI.setAuthToken(token);\n        }\n\n        if (token && userStr) {\n          const user = JSON.parse(userStr);\n          dispatch({ type: AUTH_ACTIONS.LOGIN_SUCCESS, payload: { user, token } });\n        } else if (token) {\n          // If only token is present, try to fetch user\n          authAPI.setAuthToken(token);\n          authAPI.getProfile().then(profile => {\n            if (profile) {\n              localStorage.setItem('user', JSON.stringify(profile));\n              dispatch({ type: AUTH_ACTIONS.LOGIN_SUCCESS, payload: { user: profile, token } });\n            } else {\n              dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\n            }\n          }).catch(() => {\n            dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\n          });\n        } else {\n          dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\n        }\n      } catch (error) {\n        console.error('❌ Error loading user:', error);\n        localStorage.clear();\n        authAPI.clearAuthToken();\n        dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\n      }\n    };\n    loadUser();\n  }, []);\n\n  // =============================\n  // Login Function\n  // =============================\n  const login = async (email, password) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\n      dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n\n      console.log('🔐 Attempting login for:', email);\n      const result = await authAPI.login(email, password);\n      const data = result || {};\n\n      if (data.success) {\n        const user = data.user || null;\n        const token = data.authToken || null;\n        const refreshToken = data.refreshToken || null;\n\n        // Store tokens and user info\n        localStorage.setItem('authToken', token);\n        localStorage.setItem('token', token); // for backward compatibility\n        localStorage.setItem('refreshToken', refreshToken || '');\n        localStorage.setItem('user', JSON.stringify(user));\n\n        // Sync token to chrome.storage for extension\n        try {\n          if (typeof window !== 'undefined' && window.chrome?.storage?.local) {\n            window.chrome.storage.local.set({ toolToken: token, toolUser: user });\n          }\n        } catch (_) {}\n\n        // Apply token globally\n        authAPI.setAuthToken(token);\n\n        // Update state\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: { user, token },\n        });\n\n        toast.success('Login successful!');\n        console.log('✅ Token saved and applied');\n        return { success: true };\n      } else {\n        const friendly = data.message || 'Login failed';\n        console.error('❌ Login failed:', friendly);\n        dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: friendly });\n        toast.error(friendly);\n        return { success: false, message: friendly };\n      }\n    } catch (error) {\n      const status = error?.status || error?.response?.status;\n      let message = error?.message || 'Login failed';\n\n      if (!status && /Network Error/i.test(message)) {\n        message = 'Backend unreachable. Make sure the server is running.';\n      } else if (status === 401) {\n        message = 'Invalid credentials. Please check your email and password.';\n      } else if (status === 429) {\n        message = 'Too many attempts. Please wait a moment.';\n      } else if (status === 403) {\n        message = 'Access denied. You may not have permission.';\n      } else if (status === 500) {\n        message = 'Server error. Try again later.';\n      }\n\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: message });\n      toast.error(message);\n      console.error(`❌ Login error: ${message}`);\n      return { success: false, message };\n    } finally {\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\n    }\n  };\n\n  // =============================\n  // Register Function\n  // =============================\n  const register = async (userData) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\n      dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n\n      const response = await authAPI.register(userData);\n\n      if (response.success) {\n        const { user, accessToken, refreshToken } = response.data;\n\n        localStorage.setItem('token', accessToken);\n        localStorage.setItem('refreshToken', refreshToken);\n        localStorage.setItem('user', JSON.stringify(user));\n\n        authAPI.setAuthToken(accessToken);\n\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: { user, token: accessToken },\n        });\n\n        toast.success('Registration successful!');\n        return { success: true };\n      } else {\n        const message = response.message || 'Registration failed';\n        dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: message });\n        toast.error(message);\n        return { success: false, message };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Registration failed';\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: message });\n      toast.error(message);\n      return { success: false, message };\n    } finally {\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\n    }\n  };\n\n  // =============================\n  // Logout Function\n  // =============================\n  const logout = async () => {\n    try {\n      await authAPI.logout().catch(() => {});\n    } finally {\n      localStorage.clear();\n      // Clear extension token sync\n      try {\n        if (typeof window !== 'undefined' && window.chrome?.storage?.local) {\n          window.chrome.storage.local.remove(['toolToken', 'toolUser']);\n        }\n      } catch (_) {}\n      authAPI.clearAuthToken();\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\n      toast.success('Logged out successfully!');\n    }\n  };\n\n  // =============================\n  // Update User Function\n  // =============================\n  const updateUser = (userData) => {\n    const updatedUser = { ...state.user, ...userData };\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n    dispatch({ type: AUTH_ACTIONS.UPDATE_USER, payload: userData });\n  };\n\n  // =============================\n  // Global Value\n  // =============================\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// =============================\n// Hook to Use Context\n// =============================\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// =============================\n// Always Apply Token on Load\n// =============================\nconst savedToken = localStorage.getItem('authToken') || localStorage.getItem('token');\nif (savedToken) {\n  authAPI.setAuthToken(savedToken);\n}\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}