{"ast":null,"code":"import _objectSpread from\"C:/Users/krush/OneDrive/Desktop/Final/linkedin-automation-saas/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{XMarkIcon,DocumentArrowUpIcon,MagnifyingGlassIcon,BuildingOfficeIcon,UserIcon,UsersIcon}from'@heroicons/react/24/outline';import api from'../../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NewJobModal=_ref=>{let{isOpen,onClose,onSubmit}=_ref;const[step,setStep]=useState(1);const[jobType,setJobType]=useState('');const[formData,setFormData]=useState({jobType:'',file:null,searchQuery:'',proxyUrl:'',linkedinCookie:'',jobName:'',accountSelectionMode:'manual',selectedAccountIds:[],autoRotateAccounts:false,maxAccountsPerJob:1});const[availableAccounts,setAvailableAccounts]=useState([]);const[errors,setErrors]=useState({});const[dragActive,setDragActive]=useState(false);const jobTypes=[{id:'profile',name:'Scrape LinkedIn Profiles',description:'Extract profile data from LinkedIn profile URLs',icon:UserIcon,color:'bg-blue-500',inputType:'file',fileTypes:'CSV/Excel with LinkedIn profile URLs'},{id:'company',name:'Scrape Company Profiles',description:'Extract company data from LinkedIn company URLs',icon:BuildingOfficeIcon,color:'bg-green-500',inputType:'file',fileTypes:'CSV/Excel with LinkedIn company URLs'},{id:'search',name:'Scrape Search Results',description:'Search LinkedIn and collect profile URLs from results',icon:MagnifyingGlassIcon,color:'bg-purple-500',inputType:'query',fileTypes:'Search keyword or query'}];useEffect(()=>{if(isOpen){fetchAvailableAccounts();}},[isOpen]);const fetchAvailableAccounts=async()=>{try{const response=await api.get('/linkedin-accounts/available');if(response.data.success){setAvailableAccounts(response.data.data||[]);}}catch(error){console.error('Failed to fetch available accounts:',error);setAvailableAccounts([]);}};const resetForm=()=>{setStep(1);setJobType('');setFormData({jobType:'',file:null,searchQuery:'',proxyUrl:'',linkedinCookie:'',jobName:'',accountSelectionMode:'manual',selectedAccountIds:[],autoRotateAccounts:false,maxAccountsPerJob:1});setErrors({});setDragActive(false);};const handleClose=()=>{resetForm();onClose();};const handleJobTypeSelect=type=>{setJobType(type);setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{jobType:type}));setStep(2);};const handleFileUpload=file=>{if(file){const allowedTypes=['.csv','.xlsx','.xls'];const fileExtension=file.name.toLowerCase().substring(file.name.lastIndexOf('.'));if(!allowedTypes.includes(fileExtension)){setErrors(prev=>_objectSpread(_objectSpread({},prev),{},{file:'Please upload a CSV or Excel file'}));return;}setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{file}));setErrors(prev=>_objectSpread(_objectSpread({},prev),{},{file:''}));}};const handleDrag=e=>{e.preventDefault();e.stopPropagation();if(e.type==='dragenter'||e.type==='dragover'){setDragActive(true);}else if(e.type==='dragleave'){setDragActive(false);}};const handleDrop=e=>{e.preventDefault();e.stopPropagation();setDragActive(false);if(e.dataTransfer.files&&e.dataTransfer.files[0]){handleFileUpload(e.dataTransfer.files[0]);}};const validateForm=()=>{const newErrors={};if(!formData.jobName.trim()){newErrors.jobName='Job name is required';}if(jobType==='search'){if(!formData.searchQuery.trim()){newErrors.searchQuery='Search query is required';}}else{if(!formData.file){newErrors.file='File upload is required';}}if(!formData.proxyUrl.trim()){newErrors.proxyUrl='Proxy URL is required';}else{const proxyRegex=/^(https?|socks5):\\/\\/.+/;if(!proxyRegex.test(formData.proxyUrl)){newErrors.proxyUrl='Please enter a valid proxy URL (http, https, or socks5)';}}// Account selection validation\nif(formData.accountSelectionMode==='manual'&&formData.selectedAccountIds.length===0){newErrors.accounts='Please select at least one LinkedIn account';}if(availableAccounts.length===0){newErrors.accounts='No LinkedIn accounts available. Please add accounts first.';}setErrors(newErrors);return Object.keys(newErrors).length===0;};const handleSubmit=e=>{e.preventDefault();if(validateForm()){onSubmit(formData);handleClose();}};const selectedJobType=jobTypes.find(type=>type.id===jobType);if(!isOpen)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-6 border-b\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold text-gray-900\",children:step===1?'Create New Job':\"Configure \".concat(selectedJobType===null||selectedJobType===void 0?void 0:selectedJobType.name)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClose,className:\"text-gray-400 hover:text-gray-600 transition-colors\",children:/*#__PURE__*/_jsx(XMarkIcon,{className:\"h-6 w-6\"})})]}),step===1&&/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-6\",children:\"Choose the type of LinkedIn scraping job you want to create:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:jobTypes.map(type=>{const Icon=type.icon;return/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleJobTypeSelect(type.id),className:\"w-full p-4 border-2 border-gray-200 rounded-lg hover:border-blue-500 hover:bg-blue-50 transition-all duration-200 text-left group\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start space-x-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(type.color,\" p-3 rounded-lg text-white group-hover:scale-110 transition-transform\"),children:/*#__PURE__*/_jsx(Icon,{className:\"h-6 w-6\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-gray-900 group-hover:text-blue-600\",children:type.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 text-sm mt-1\",children:type.description}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-blue-600 text-xs mt-2 font-medium\",children:[\"Input: \",type.fileTypes]})]})]})},type.id);})})]}),step===2&&/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Job Name *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.jobName,onChange:e=>setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{jobName:e.target.value})),className:\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 \".concat(errors.jobName?'border-red-500':'border-gray-300'),placeholder:\"Enter a name for this job\"}),errors.jobName&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-sm mt-1\",children:errors.jobName})]}),jobType==='search'?/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Search Query *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.searchQuery,onChange:e=>setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{searchQuery:e.target.value})),className:\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 \".concat(errors.searchQuery?'border-red-500':'border-gray-300'),placeholder:\"Enter LinkedIn search keywords (e.g., 'Software Engineer San Francisco')\"}),errors.searchQuery&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-sm mt-1\",children:errors.searchQuery})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Upload File *\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-2 border-dashed rounded-lg p-6 text-center transition-colors \".concat(dragActive?'border-blue-500 bg-blue-50':'border-gray-300',\" \").concat(errors.file?'border-red-500':''),onDragEnter:handleDrag,onDragLeave:handleDrag,onDragOver:handleDrag,onDrop:handleDrop,children:[/*#__PURE__*/_jsx(DocumentArrowUpIcon,{className:\"h-12 w-12 text-gray-400 mx-auto mb-4\"}),formData.file?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-green-600 font-medium\",children:formData.file.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 text-sm\",children:\"File uploaded successfully\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-2\",children:\"Drag and drop your CSV/Excel file here, or\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".csv,.xlsx,.xls\",onChange:e=>handleFileUpload(e.target.files[0]),className:\"hidden\",id:\"file-upload\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"file-upload\",className:\"inline-block bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 cursor-pointer transition-colors\",children:\"Choose File\"})]})]}),errors.file&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-sm mt-1\",children:errors.file}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 text-xs mt-2\",children:\"Supported formats: CSV, Excel (.xlsx, .xls)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"LinkedIn Accounts *\"}),availableAccounts.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"p-4 bg-yellow-50 border border-yellow-200 rounded-md\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-yellow-800 text-sm\",children:\"No LinkedIn accounts available. Please add accounts first in the LinkedIn Accounts section.\"})}):/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-4\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"accountMode\",value:\"manual\",checked:formData.accountSelectionMode==='manual',onChange:e=>setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{accountSelectionMode:e.target.value})),className:\"mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\"Manual Selection\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"accountMode\",value:\"auto_rotate\",checked:formData.accountSelectionMode==='auto_rotate',onChange:e=>setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{accountSelectionMode:e.target.value})),className:\"mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\"Auto-Rotate All\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"accountMode\",value:\"load_balance\",checked:formData.accountSelectionMode==='load_balance',onChange:e=>setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{accountSelectionMode:e.target.value})),className:\"mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\"Load Balance\"})]})]}),formData.accountSelectionMode==='manual'&&/*#__PURE__*/_jsx(\"div\",{className:\"max-h-40 overflow-y-auto border border-gray-300 rounded-md p-3\",children:availableAccounts.map(account=>/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center mb-2 last:mb-0\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:formData.selectedAccountIds.includes(account.id),onChange:e=>{if(e.target.checked){setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{selectedAccountIds:[...prev.selectedAccountIds,account.id]}));}else{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{selectedAccountIds:prev.selectedAccountIds.filter(id=>id!==account.id)}));}},className:\"mr-3\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-gray-900\",children:account.account_name}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500\",children:[account.email,\" \\u2022 \",account.requests_today||0,\"/\",account.daily_request_limit,\" requests today\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs\",children:/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 rounded-full \".concat(account.validation_status==='valid'?'bg-green-100 text-green-800':account.validation_status==='invalid'?'bg-red-100 text-red-800':'bg-gray-100 text-gray-800'),children:account.validation_status||'Unknown'})})]},account.id))}),formData.accountSelectionMode==='auto_rotate'&&/*#__PURE__*/_jsx(\"div\",{className:\"p-3 bg-blue-50 border border-blue-200 rounded-md\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-blue-800 text-sm\",children:[/*#__PURE__*/_jsx(UsersIcon,{className:\"h-4 w-4 inline mr-1\"}),\"Job will automatically rotate across all \",availableAccounts.length,\" available accounts\"]})}),formData.accountSelectionMode==='load_balance'&&/*#__PURE__*/_jsx(\"div\",{className:\"p-3 bg-purple-50 border border-purple-200 rounded-md\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-purple-800 text-sm\",children:[/*#__PURE__*/_jsx(UsersIcon,{className:\"h-4 w-4 inline mr-1\"}),\"Job will intelligently distribute workload across all \",availableAccounts.length,\" accounts based on usage and cooldowns\"]})})]}),errors.accounts&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-sm mt-1\",children:errors.accounts})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between pt-4 border-t\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setStep(1),className:\"px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\",children:\"\\u2190 Back\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-x-3\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleClose,className:\"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"px-6 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors\",children:\"Create Job\"})]})]})]})]})});};export default NewJobModal;","map":{"version":3,"names":["React","useState","useEffect","XMarkIcon","DocumentArrowUpIcon","MagnifyingGlassIcon","BuildingOfficeIcon","UserIcon","UsersIcon","api","jsx","_jsx","jsxs","_jsxs","NewJobModal","_ref","isOpen","onClose","onSubmit","step","setStep","jobType","setJobType","formData","setFormData","file","searchQuery","proxyUrl","linkedinCookie","jobName","accountSelectionMode","selectedAccountIds","autoRotateAccounts","maxAccountsPerJob","availableAccounts","setAvailableAccounts","errors","setErrors","dragActive","setDragActive","jobTypes","id","name","description","icon","color","inputType","fileTypes","fetchAvailableAccounts","response","get","data","success","error","console","resetForm","handleClose","handleJobTypeSelect","type","prev","_objectSpread","handleFileUpload","allowedTypes","fileExtension","toLowerCase","substring","lastIndexOf","includes","handleDrag","e","preventDefault","stopPropagation","handleDrop","dataTransfer","files","validateForm","newErrors","trim","proxyRegex","test","length","accounts","Object","keys","handleSubmit","selectedJobType","find","className","children","concat","onClick","map","Icon","value","onChange","target","placeholder","onDragEnter","onDragLeave","onDragOver","onDrop","accept","htmlFor","checked","account","filter","account_name","email","requests_today","daily_request_limit","validation_status"],"sources":["C:/Users/krush/OneDrive/Desktop/Final/linkedin-automation-saas/frontend/src/components/Jobs/NewJobModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { XMarkIcon, DocumentArrowUpIcon, MagnifyingGlassIcon, BuildingOfficeIcon, UserIcon, UsersIcon } from '@heroicons/react/24/outline';\nimport api from '../../services/api';\n\nconst NewJobModal = ({ isOpen, onClose, onSubmit }) => {\n  const [step, setStep] = useState(1);\n  const [jobType, setJobType] = useState('');\n  const [formData, setFormData] = useState({\n    jobType: '',\n    file: null,\n    searchQuery: '',\n    proxyUrl: '',\n    linkedinCookie: '',\n    jobName: '',\n    accountSelectionMode: 'manual',\n    selectedAccountIds: [],\n    autoRotateAccounts: false,\n    maxAccountsPerJob: 1\n  });\n  const [availableAccounts, setAvailableAccounts] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [dragActive, setDragActive] = useState(false);\n\n  const jobTypes = [\n    {\n      id: 'profile',\n      name: 'Scrape LinkedIn Profiles',\n      description: 'Extract profile data from LinkedIn profile URLs',\n      icon: UserIcon,\n      color: 'bg-blue-500',\n      inputType: 'file',\n      fileTypes: 'CSV/Excel with LinkedIn profile URLs'\n    },\n    {\n      id: 'company',\n      name: 'Scrape Company Profiles',\n      description: 'Extract company data from LinkedIn company URLs',\n      icon: BuildingOfficeIcon,\n      color: 'bg-green-500',\n      inputType: 'file',\n      fileTypes: 'CSV/Excel with LinkedIn company URLs'\n    },\n    {\n      id: 'search',\n      name: 'Scrape Search Results',\n      description: 'Search LinkedIn and collect profile URLs from results',\n      icon: MagnifyingGlassIcon,\n      color: 'bg-purple-500',\n      inputType: 'query',\n      fileTypes: 'Search keyword or query'\n    }\n  ];\n\n  useEffect(() => {\n    if (isOpen) {\n      fetchAvailableAccounts();\n    }\n  }, [isOpen]);\n\n  const fetchAvailableAccounts = async () => {\n    try {\n      const response = await api.get('/linkedin-accounts/available');\n      if (response.data.success) {\n        setAvailableAccounts(response.data.data || []);\n      }\n    } catch (error) {\n      console.error('Failed to fetch available accounts:', error);\n      setAvailableAccounts([]);\n    }\n  };\n\n  const resetForm = () => {\n    setStep(1);\n    setJobType('');\n    setFormData({\n      jobType: '',\n      file: null,\n      searchQuery: '',\n      proxyUrl: '',\n      linkedinCookie: '',\n      jobName: '',\n      accountSelectionMode: 'manual',\n      selectedAccountIds: [],\n      autoRotateAccounts: false,\n      maxAccountsPerJob: 1\n    });\n    setErrors({});\n    setDragActive(false);\n  };\n\n  const handleClose = () => {\n    resetForm();\n    onClose();\n  };\n\n  const handleJobTypeSelect = (type) => {\n    setJobType(type);\n    setFormData(prev => ({ ...prev, jobType: type }));\n    setStep(2);\n  };\n\n  const handleFileUpload = (file) => {\n    if (file) {\n      const allowedTypes = ['.csv', '.xlsx', '.xls'];\n      const fileExtension = file.name.toLowerCase().substring(file.name.lastIndexOf('.'));\n      \n      if (!allowedTypes.includes(fileExtension)) {\n        setErrors(prev => ({ ...prev, file: 'Please upload a CSV or Excel file' }));\n        return;\n      }\n      \n      setFormData(prev => ({ ...prev, file }));\n      setErrors(prev => ({ ...prev, file: '' }));\n    }\n  };\n\n  const handleDrag = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === 'dragenter' || e.type === 'dragover') {\n      setDragActive(true);\n    } else if (e.type === 'dragleave') {\n      setDragActive(false);\n    }\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    \n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      handleFileUpload(e.dataTransfer.files[0]);\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.jobName.trim()) {\n      newErrors.jobName = 'Job name is required';\n    }\n    \n    if (jobType === 'search') {\n      if (!formData.searchQuery.trim()) {\n        newErrors.searchQuery = 'Search query is required';\n      }\n    } else {\n      if (!formData.file) {\n        newErrors.file = 'File upload is required';\n      }\n    }\n    \n    if (!formData.proxyUrl.trim()) {\n      newErrors.proxyUrl = 'Proxy URL is required';\n    } else {\n      const proxyRegex = /^(https?|socks5):\\/\\/.+/;\n      if (!proxyRegex.test(formData.proxyUrl)) {\n        newErrors.proxyUrl = 'Please enter a valid proxy URL (http, https, or socks5)';\n      }\n    }\n    \n    // Account selection validation\n    if (formData.accountSelectionMode === 'manual' && formData.selectedAccountIds.length === 0) {\n      newErrors.accounts = 'Please select at least one LinkedIn account';\n    }\n    \n    if (availableAccounts.length === 0) {\n      newErrors.accounts = 'No LinkedIn accounts available. Please add accounts first.';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (validateForm()) {\n      onSubmit(formData);\n      handleClose();\n    }\n  };\n\n  const selectedJobType = jobTypes.find(type => type.id === jobType);\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">\n            {step === 1 ? 'Create New Job' : `Configure ${selectedJobType?.name}`}\n          </h2>\n          <button\n            onClick={handleClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            <XMarkIcon className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        {/* Step 1: Job Type Selection */}\n        {step === 1 && (\n          <div className=\"p-6\">\n            <p className=\"text-gray-600 mb-6\">\n              Choose the type of LinkedIn scraping job you want to create:\n            </p>\n            \n            <div className=\"space-y-4\">\n              {jobTypes.map((type) => {\n                const Icon = type.icon;\n                return (\n                  <button\n                    key={type.id}\n                    onClick={() => handleJobTypeSelect(type.id)}\n                    className=\"w-full p-4 border-2 border-gray-200 rounded-lg hover:border-blue-500 hover:bg-blue-50 transition-all duration-200 text-left group\"\n                  >\n                    <div className=\"flex items-start space-x-4\">\n                      <div className={`${type.color} p-3 rounded-lg text-white group-hover:scale-110 transition-transform`}>\n                        <Icon className=\"h-6 w-6\" />\n                      </div>\n                      <div className=\"flex-1\">\n                        <h3 className=\"font-semibold text-gray-900 group-hover:text-blue-600\">\n                          {type.name}\n                        </h3>\n                        <p className=\"text-gray-600 text-sm mt-1\">\n                          {type.description}\n                        </p>\n                        <p className=\"text-blue-600 text-xs mt-2 font-medium\">\n                          Input: {type.fileTypes}\n                        </p>\n                      </div>\n                    </div>\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n        )}\n\n        {/* Step 2: Job Configuration */}\n        {step === 2 && (\n          <form onSubmit={handleSubmit} className=\"p-6\">\n            {/* Job Name */}\n            <div className=\"mb-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Job Name *\n              </label>\n              <input\n                type=\"text\"\n                value={formData.jobName}\n                onChange={(e) => setFormData(prev => ({ ...prev, jobName: e.target.value }))}\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n                  errors.jobName ? 'border-red-500' : 'border-gray-300'\n                }`}\n                placeholder=\"Enter a name for this job\"\n              />\n              {errors.jobName && (\n                <p className=\"text-red-500 text-sm mt-1\">{errors.jobName}</p>\n              )}\n            </div>\n\n            {/* File Upload or Search Query */}\n            {jobType === 'search' ? (\n              <div className=\"mb-6\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Search Query *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.searchQuery}\n                  onChange={(e) => setFormData(prev => ({ ...prev, searchQuery: e.target.value }))}\n                  className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n                    errors.searchQuery ? 'border-red-500' : 'border-gray-300'\n                  }`}\n                  placeholder=\"Enter LinkedIn search keywords (e.g., 'Software Engineer San Francisco')\"\n                />\n                {errors.searchQuery && (\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.searchQuery}</p>\n                )}\n              </div>\n            ) : (\n              <div className=\"mb-6\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Upload File *\n                </label>\n                <div\n                  className={`border-2 border-dashed rounded-lg p-6 text-center transition-colors ${\n                    dragActive ? 'border-blue-500 bg-blue-50' : 'border-gray-300'\n                  } ${errors.file ? 'border-red-500' : ''}`}\n                  onDragEnter={handleDrag}\n                  onDragLeave={handleDrag}\n                  onDragOver={handleDrag}\n                  onDrop={handleDrop}\n                >\n                  <DocumentArrowUpIcon className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                  {formData.file ? (\n                    <div>\n                      <p className=\"text-green-600 font-medium\">{formData.file.name}</p>\n                      <p className=\"text-gray-500 text-sm\">File uploaded successfully</p>\n                    </div>\n                  ) : (\n                    <div>\n                      <p className=\"text-gray-600 mb-2\">\n                        Drag and drop your CSV/Excel file here, or\n                      </p>\n                      <input\n                        type=\"file\"\n                        accept=\".csv,.xlsx,.xls\"\n                        onChange={(e) => handleFileUpload(e.target.files[0])}\n                        className=\"hidden\"\n                        id=\"file-upload\"\n                      />\n                      <label\n                        htmlFor=\"file-upload\"\n                        className=\"inline-block bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 cursor-pointer transition-colors\"\n                      >\n                        Choose File\n                      </label>\n                    </div>\n                  )}\n                </div>\n                {errors.file && (\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.file}</p>\n                )}\n                <p className=\"text-gray-500 text-xs mt-2\">\n                  Supported formats: CSV, Excel (.xlsx, .xls)\n                </p>\n              </div>\n            )}\n\n            {/* Account Selection */}\n            <div className=\"mb-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                LinkedIn Accounts *\n              </label>\n              \n              {availableAccounts.length === 0 ? (\n                <div className=\"p-4 bg-yellow-50 border border-yellow-200 rounded-md\">\n                  <p className=\"text-yellow-800 text-sm\">\n                    No LinkedIn accounts available. Please add accounts first in the LinkedIn Accounts section.\n                  </p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {/* Account Selection Mode */}\n                  <div className=\"flex space-x-4\">\n                    <label className=\"flex items-center\">\n                      <input\n                        type=\"radio\"\n                        name=\"accountMode\"\n                        value=\"manual\"\n                        checked={formData.accountSelectionMode === 'manual'}\n                        onChange={(e) => setFormData(prev => ({ ...prev, accountSelectionMode: e.target.value }))}\n                        className=\"mr-2\"\n                      />\n                      <span className=\"text-sm\">Manual Selection</span>\n                    </label>\n                    <label className=\"flex items-center\">\n                      <input\n                        type=\"radio\"\n                        name=\"accountMode\"\n                        value=\"auto_rotate\"\n                        checked={formData.accountSelectionMode === 'auto_rotate'}\n                        onChange={(e) => setFormData(prev => ({ ...prev, accountSelectionMode: e.target.value }))}\n                        className=\"mr-2\"\n                      />\n                      <span className=\"text-sm\">Auto-Rotate All</span>\n                    </label>\n                    <label className=\"flex items-center\">\n                      <input\n                        type=\"radio\"\n                        name=\"accountMode\"\n                        value=\"load_balance\"\n                        checked={formData.accountSelectionMode === 'load_balance'}\n                        onChange={(e) => setFormData(prev => ({ ...prev, accountSelectionMode: e.target.value }))}\n                        className=\"mr-2\"\n                      />\n                      <span className=\"text-sm\">Load Balance</span>\n                    </label>\n                  </div>\n                  \n                  {/* Manual Account Selection */}\n                  {formData.accountSelectionMode === 'manual' && (\n                    <div className=\"max-h-40 overflow-y-auto border border-gray-300 rounded-md p-3\">\n                      {availableAccounts.map((account) => (\n                        <label key={account.id} className=\"flex items-center mb-2 last:mb-0\">\n                          <input\n                            type=\"checkbox\"\n                            checked={formData.selectedAccountIds.includes(account.id)}\n                            onChange={(e) => {\n                              if (e.target.checked) {\n                                setFormData(prev => ({\n                                  ...prev,\n                                  selectedAccountIds: [...prev.selectedAccountIds, account.id]\n                                }));\n                              } else {\n                                setFormData(prev => ({\n                                  ...prev,\n                                  selectedAccountIds: prev.selectedAccountIds.filter(id => id !== account.id)\n                                }));\n                              }\n                            }}\n                            className=\"mr-3\"\n                          />\n                          <div className=\"flex-1\">\n                            <div className=\"text-sm font-medium text-gray-900\">\n                              {account.account_name}\n                            </div>\n                            <div className=\"text-xs text-gray-500\">\n                              {account.email} • {account.requests_today || 0}/{account.daily_request_limit} requests today\n                            </div>\n                          </div>\n                          <div className=\"text-xs\">\n                            <span className={`px-2 py-1 rounded-full ${\n                              account.validation_status === 'valid' ? 'bg-green-100 text-green-800' :\n                              account.validation_status === 'invalid' ? 'bg-red-100 text-red-800' :\n                              'bg-gray-100 text-gray-800'\n                            }`}>\n                              {account.validation_status || 'Unknown'}\n                            </span>\n                          </div>\n                        </label>\n                      ))}\n                    </div>\n                  )}\n                  \n                  {/* Auto-rotate and Load Balance Info */}\n                  {formData.accountSelectionMode === 'auto_rotate' && (\n                    <div className=\"p-3 bg-blue-50 border border-blue-200 rounded-md\">\n                      <p className=\"text-blue-800 text-sm\">\n                        <UsersIcon className=\"h-4 w-4 inline mr-1\" />\n                        Job will automatically rotate across all {availableAccounts.length} available accounts\n                      </p>\n                    </div>\n                  )}\n                  \n                  {formData.accountSelectionMode === 'load_balance' && (\n                    <div className=\"p-3 bg-purple-50 border border-purple-200 rounded-md\">\n                      <p className=\"text-purple-800 text-sm\">\n                        <UsersIcon className=\"h-4 w-4 inline mr-1\" />\n                        Job will intelligently distribute workload across all {availableAccounts.length} accounts based on usage and cooldowns\n                      </p>\n                    </div>\n                  )}\n                </div>\n              )}\n              \n              {errors.accounts && (\n                <p className=\"text-red-500 text-sm mt-1\">{errors.accounts}</p>\n              )}\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-between pt-4 border-t\">\n              <button\n                type=\"button\"\n                onClick={() => setStep(1)}\n                className=\"px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\"\n              >\n                ← Back\n              </button>\n              <div className=\"space-x-3\">\n                <button\n                  type=\"button\"\n                  onClick={handleClose}\n                  className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-6 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors\"\n                >\n                  Create Job\n                </button>\n              </div>\n            </div>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NewJobModal;"],"mappings":"4JAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,CAAEC,mBAAmB,CAAEC,mBAAmB,CAAEC,kBAAkB,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,6BAA6B,CAC1I,MAAO,CAAAC,GAAG,KAAM,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErC,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAmC,IAAlC,CAAEC,MAAM,CAAEC,OAAO,CAAEC,QAAS,CAAC,CAAAH,IAAA,CAChD,KAAM,CAACI,IAAI,CAAEC,OAAO,CAAC,CAAGnB,QAAQ,CAAC,CAAC,CAAC,CACnC,KAAM,CAACoB,OAAO,CAAEC,UAAU,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACsB,QAAQ,CAAEC,WAAW,CAAC,CAAGvB,QAAQ,CAAC,CACvCoB,OAAO,CAAE,EAAE,CACXI,IAAI,CAAE,IAAI,CACVC,WAAW,CAAE,EAAE,CACfC,QAAQ,CAAE,EAAE,CACZC,cAAc,CAAE,EAAE,CAClBC,OAAO,CAAE,EAAE,CACXC,oBAAoB,CAAE,QAAQ,CAC9BC,kBAAkB,CAAE,EAAE,CACtBC,kBAAkB,CAAE,KAAK,CACzBC,iBAAiB,CAAE,CACrB,CAAC,CAAC,CACF,KAAM,CAACC,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGlC,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAACmC,MAAM,CAAEC,SAAS,CAAC,CAAGpC,QAAQ,CAAC,CAAC,CAAC,CAAC,CACxC,KAAM,CAACqC,UAAU,CAAEC,aAAa,CAAC,CAAGtC,QAAQ,CAAC,KAAK,CAAC,CAEnD,KAAM,CAAAuC,QAAQ,CAAG,CACf,CACEC,EAAE,CAAE,SAAS,CACbC,IAAI,CAAE,0BAA0B,CAChCC,WAAW,CAAE,iDAAiD,CAC9DC,IAAI,CAAErC,QAAQ,CACdsC,KAAK,CAAE,aAAa,CACpBC,SAAS,CAAE,MAAM,CACjBC,SAAS,CAAE,sCACb,CAAC,CACD,CACEN,EAAE,CAAE,SAAS,CACbC,IAAI,CAAE,yBAAyB,CAC/BC,WAAW,CAAE,iDAAiD,CAC9DC,IAAI,CAAEtC,kBAAkB,CACxBuC,KAAK,CAAE,cAAc,CACrBC,SAAS,CAAE,MAAM,CACjBC,SAAS,CAAE,sCACb,CAAC,CACD,CACEN,EAAE,CAAE,QAAQ,CACZC,IAAI,CAAE,uBAAuB,CAC7BC,WAAW,CAAE,uDAAuD,CACpEC,IAAI,CAAEvC,mBAAmB,CACzBwC,KAAK,CAAE,eAAe,CACtBC,SAAS,CAAE,OAAO,CAClBC,SAAS,CAAE,yBACb,CAAC,CACF,CAED7C,SAAS,CAAC,IAAM,CACd,GAAIc,MAAM,CAAE,CACVgC,sBAAsB,CAAC,CAAC,CAC1B,CACF,CAAC,CAAE,CAAChC,MAAM,CAAC,CAAC,CAEZ,KAAM,CAAAgC,sBAAsB,CAAG,KAAAA,CAAA,GAAY,CACzC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAxC,GAAG,CAACyC,GAAG,CAAC,8BAA8B,CAAC,CAC9D,GAAID,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAE,CACzBjB,oBAAoB,CAACc,QAAQ,CAACE,IAAI,CAACA,IAAI,EAAI,EAAE,CAAC,CAChD,CACF,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,CAAEA,KAAK,CAAC,CAC3DlB,oBAAoB,CAAC,EAAE,CAAC,CAC1B,CACF,CAAC,CAED,KAAM,CAAAoB,SAAS,CAAGA,CAAA,GAAM,CACtBnC,OAAO,CAAC,CAAC,CAAC,CACVE,UAAU,CAAC,EAAE,CAAC,CACdE,WAAW,CAAC,CACVH,OAAO,CAAE,EAAE,CACXI,IAAI,CAAE,IAAI,CACVC,WAAW,CAAE,EAAE,CACfC,QAAQ,CAAE,EAAE,CACZC,cAAc,CAAE,EAAE,CAClBC,OAAO,CAAE,EAAE,CACXC,oBAAoB,CAAE,QAAQ,CAC9BC,kBAAkB,CAAE,EAAE,CACtBC,kBAAkB,CAAE,KAAK,CACzBC,iBAAiB,CAAE,CACrB,CAAC,CAAC,CACFI,SAAS,CAAC,CAAC,CAAC,CAAC,CACbE,aAAa,CAAC,KAAK,CAAC,CACtB,CAAC,CAED,KAAM,CAAAiB,WAAW,CAAGA,CAAA,GAAM,CACxBD,SAAS,CAAC,CAAC,CACXtC,OAAO,CAAC,CAAC,CACX,CAAC,CAED,KAAM,CAAAwC,mBAAmB,CAAIC,IAAI,EAAK,CACpCpC,UAAU,CAACoC,IAAI,CAAC,CAChBlC,WAAW,CAACmC,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAEtC,OAAO,CAAEqC,IAAI,EAAG,CAAC,CACjDtC,OAAO,CAAC,CAAC,CAAC,CACZ,CAAC,CAED,KAAM,CAAAyC,gBAAgB,CAAIpC,IAAI,EAAK,CACjC,GAAIA,IAAI,CAAE,CACR,KAAM,CAAAqC,YAAY,CAAG,CAAC,MAAM,CAAE,OAAO,CAAE,MAAM,CAAC,CAC9C,KAAM,CAAAC,aAAa,CAAGtC,IAAI,CAACiB,IAAI,CAACsB,WAAW,CAAC,CAAC,CAACC,SAAS,CAACxC,IAAI,CAACiB,IAAI,CAACwB,WAAW,CAAC,GAAG,CAAC,CAAC,CAEnF,GAAI,CAACJ,YAAY,CAACK,QAAQ,CAACJ,aAAa,CAAC,CAAE,CACzC1B,SAAS,CAACsB,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAElC,IAAI,CAAE,mCAAmC,EAAG,CAAC,CAC3E,OACF,CAEAD,WAAW,CAACmC,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAElC,IAAI,EAAG,CAAC,CACxCY,SAAS,CAACsB,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAElC,IAAI,CAAE,EAAE,EAAG,CAAC,CAC5C,CACF,CAAC,CAED,KAAM,CAAA2C,UAAU,CAAIC,CAAC,EAAK,CACxBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBD,CAAC,CAACE,eAAe,CAAC,CAAC,CACnB,GAAIF,CAAC,CAACX,IAAI,GAAK,WAAW,EAAIW,CAAC,CAACX,IAAI,GAAK,UAAU,CAAE,CACnDnB,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,IAAM,IAAI8B,CAAC,CAACX,IAAI,GAAK,WAAW,CAAE,CACjCnB,aAAa,CAAC,KAAK,CAAC,CACtB,CACF,CAAC,CAED,KAAM,CAAAiC,UAAU,CAAIH,CAAC,EAAK,CACxBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBD,CAAC,CAACE,eAAe,CAAC,CAAC,CACnBhC,aAAa,CAAC,KAAK,CAAC,CAEpB,GAAI8B,CAAC,CAACI,YAAY,CAACC,KAAK,EAAIL,CAAC,CAACI,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE,CACnDb,gBAAgB,CAACQ,CAAC,CAACI,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAC3C,CACF,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,SAAS,CAAG,CAAC,CAAC,CAEpB,GAAI,CAACrD,QAAQ,CAACM,OAAO,CAACgD,IAAI,CAAC,CAAC,CAAE,CAC5BD,SAAS,CAAC/C,OAAO,CAAG,sBAAsB,CAC5C,CAEA,GAAIR,OAAO,GAAK,QAAQ,CAAE,CACxB,GAAI,CAACE,QAAQ,CAACG,WAAW,CAACmD,IAAI,CAAC,CAAC,CAAE,CAChCD,SAAS,CAAClD,WAAW,CAAG,0BAA0B,CACpD,CACF,CAAC,IAAM,CACL,GAAI,CAACH,QAAQ,CAACE,IAAI,CAAE,CAClBmD,SAAS,CAACnD,IAAI,CAAG,yBAAyB,CAC5C,CACF,CAEA,GAAI,CAACF,QAAQ,CAACI,QAAQ,CAACkD,IAAI,CAAC,CAAC,CAAE,CAC7BD,SAAS,CAACjD,QAAQ,CAAG,uBAAuB,CAC9C,CAAC,IAAM,CACL,KAAM,CAAAmD,UAAU,CAAG,yBAAyB,CAC5C,GAAI,CAACA,UAAU,CAACC,IAAI,CAACxD,QAAQ,CAACI,QAAQ,CAAC,CAAE,CACvCiD,SAAS,CAACjD,QAAQ,CAAG,yDAAyD,CAChF,CACF,CAEA;AACA,GAAIJ,QAAQ,CAACO,oBAAoB,GAAK,QAAQ,EAAIP,QAAQ,CAACQ,kBAAkB,CAACiD,MAAM,GAAK,CAAC,CAAE,CAC1FJ,SAAS,CAACK,QAAQ,CAAG,6CAA6C,CACpE,CAEA,GAAI/C,iBAAiB,CAAC8C,MAAM,GAAK,CAAC,CAAE,CAClCJ,SAAS,CAACK,QAAQ,CAAG,4DAA4D,CACnF,CAEA5C,SAAS,CAACuC,SAAS,CAAC,CACpB,MAAO,CAAAM,MAAM,CAACC,IAAI,CAACP,SAAS,CAAC,CAACI,MAAM,GAAK,CAAC,CAC5C,CAAC,CAED,KAAM,CAAAI,YAAY,CAAIf,CAAC,EAAK,CAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB,GAAIK,YAAY,CAAC,CAAC,CAAE,CAClBzD,QAAQ,CAACK,QAAQ,CAAC,CAClBiC,WAAW,CAAC,CAAC,CACf,CACF,CAAC,CAED,KAAM,CAAA6B,eAAe,CAAG7C,QAAQ,CAAC8C,IAAI,CAAC5B,IAAI,EAAIA,IAAI,CAACjB,EAAE,GAAKpB,OAAO,CAAC,CAElE,GAAI,CAACL,MAAM,CAAE,MAAO,KAAI,CAExB,mBACEL,IAAA,QAAK4E,SAAS,CAAC,4EAA4E,CAAAC,QAAA,cACzF3E,KAAA,QAAK0E,SAAS,CAAC,kFAAkF,CAAAC,QAAA,eAE/F3E,KAAA,QAAK0E,SAAS,CAAC,gDAAgD,CAAAC,QAAA,eAC7D7E,IAAA,OAAI4E,SAAS,CAAC,qCAAqC,CAAAC,QAAA,CAChDrE,IAAI,GAAK,CAAC,CAAG,gBAAgB,cAAAsE,MAAA,CAAgBJ,eAAe,SAAfA,eAAe,iBAAfA,eAAe,CAAE3C,IAAI,CAAE,CACnE,CAAC,cACL/B,IAAA,WACE+E,OAAO,CAAElC,WAAY,CACrB+B,SAAS,CAAC,qDAAqD,CAAAC,QAAA,cAE/D7E,IAAA,CAACR,SAAS,EAACoF,SAAS,CAAC,SAAS,CAAE,CAAC,CAC3B,CAAC,EACN,CAAC,CAGLpE,IAAI,GAAK,CAAC,eACTN,KAAA,QAAK0E,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB7E,IAAA,MAAG4E,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAC,8DAElC,CAAG,CAAC,cAEJ7E,IAAA,QAAK4E,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBhD,QAAQ,CAACmD,GAAG,CAAEjC,IAAI,EAAK,CACtB,KAAM,CAAAkC,IAAI,CAAGlC,IAAI,CAACd,IAAI,CACtB,mBACEjC,IAAA,WAEE+E,OAAO,CAAEA,CAAA,GAAMjC,mBAAmB,CAACC,IAAI,CAACjB,EAAE,CAAE,CAC5C8C,SAAS,CAAC,mIAAmI,CAAAC,QAAA,cAE7I3E,KAAA,QAAK0E,SAAS,CAAC,4BAA4B,CAAAC,QAAA,eACzC7E,IAAA,QAAK4E,SAAS,IAAAE,MAAA,CAAK/B,IAAI,CAACb,KAAK,yEAAwE,CAAA2C,QAAA,cACnG7E,IAAA,CAACiF,IAAI,EAACL,SAAS,CAAC,SAAS,CAAE,CAAC,CACzB,CAAC,cACN1E,KAAA,QAAK0E,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACrB7E,IAAA,OAAI4E,SAAS,CAAC,uDAAuD,CAAAC,QAAA,CAClE9B,IAAI,CAAChB,IAAI,CACR,CAAC,cACL/B,IAAA,MAAG4E,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CACtC9B,IAAI,CAACf,WAAW,CAChB,CAAC,cACJ9B,KAAA,MAAG0E,SAAS,CAAC,wCAAwC,CAAAC,QAAA,EAAC,SAC7C,CAAC9B,IAAI,CAACX,SAAS,EACrB,CAAC,EACD,CAAC,EACH,CAAC,EAnBDW,IAAI,CAACjB,EAoBJ,CAAC,CAEb,CAAC,CAAC,CACC,CAAC,EACH,CACN,CAGAtB,IAAI,GAAK,CAAC,eACTN,KAAA,SAAMK,QAAQ,CAAEkE,YAAa,CAACG,SAAS,CAAC,KAAK,CAAAC,QAAA,eAE3C3E,KAAA,QAAK0E,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnB7E,IAAA,UAAO4E,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,YAEhE,CAAO,CAAC,cACR7E,IAAA,UACE+C,IAAI,CAAC,MAAM,CACXmC,KAAK,CAAEtE,QAAQ,CAACM,OAAQ,CACxBiE,QAAQ,CAAGzB,CAAC,EAAK7C,WAAW,CAACmC,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAE9B,OAAO,CAAEwC,CAAC,CAAC0B,MAAM,CAACF,KAAK,EAAG,CAAE,CAC7EN,SAAS,2FAAAE,MAAA,CACPrD,MAAM,CAACP,OAAO,CAAG,gBAAgB,CAAG,iBAAiB,CACpD,CACHmE,WAAW,CAAC,2BAA2B,CACxC,CAAC,CACD5D,MAAM,CAACP,OAAO,eACblB,IAAA,MAAG4E,SAAS,CAAC,2BAA2B,CAAAC,QAAA,CAAEpD,MAAM,CAACP,OAAO,CAAI,CAC7D,EACE,CAAC,CAGLR,OAAO,GAAK,QAAQ,cACnBR,KAAA,QAAK0E,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnB7E,IAAA,UAAO4E,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,gBAEhE,CAAO,CAAC,cACR7E,IAAA,UACE+C,IAAI,CAAC,MAAM,CACXmC,KAAK,CAAEtE,QAAQ,CAACG,WAAY,CAC5BoE,QAAQ,CAAGzB,CAAC,EAAK7C,WAAW,CAACmC,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAEjC,WAAW,CAAE2C,CAAC,CAAC0B,MAAM,CAACF,KAAK,EAAG,CAAE,CACjFN,SAAS,2FAAAE,MAAA,CACPrD,MAAM,CAACV,WAAW,CAAG,gBAAgB,CAAG,iBAAiB,CACxD,CACHsE,WAAW,CAAC,0EAA0E,CACvF,CAAC,CACD5D,MAAM,CAACV,WAAW,eACjBf,IAAA,MAAG4E,SAAS,CAAC,2BAA2B,CAAAC,QAAA,CAAEpD,MAAM,CAACV,WAAW,CAAI,CACjE,EACE,CAAC,cAENb,KAAA,QAAK0E,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnB7E,IAAA,UAAO4E,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,eAEhE,CAAO,CAAC,cACR3E,KAAA,QACE0E,SAAS,wEAAAE,MAAA,CACPnD,UAAU,CAAG,4BAA4B,CAAG,iBAAiB,MAAAmD,MAAA,CAC3DrD,MAAM,CAACX,IAAI,CAAG,gBAAgB,CAAG,EAAE,CAAG,CAC1CwE,WAAW,CAAE7B,UAAW,CACxB8B,WAAW,CAAE9B,UAAW,CACxB+B,UAAU,CAAE/B,UAAW,CACvBgC,MAAM,CAAE5B,UAAW,CAAAgB,QAAA,eAEnB7E,IAAA,CAACP,mBAAmB,EAACmF,SAAS,CAAC,sCAAsC,CAAE,CAAC,CACvEhE,QAAQ,CAACE,IAAI,cACZZ,KAAA,QAAA2E,QAAA,eACE7E,IAAA,MAAG4E,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAEjE,QAAQ,CAACE,IAAI,CAACiB,IAAI,CAAI,CAAC,cAClE/B,IAAA,MAAG4E,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,4BAA0B,CAAG,CAAC,EAChE,CAAC,cAEN3E,KAAA,QAAA2E,QAAA,eACE7E,IAAA,MAAG4E,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAC,4CAElC,CAAG,CAAC,cACJ7E,IAAA,UACE+C,IAAI,CAAC,MAAM,CACX2C,MAAM,CAAC,iBAAiB,CACxBP,QAAQ,CAAGzB,CAAC,EAAKR,gBAAgB,CAACQ,CAAC,CAAC0B,MAAM,CAACrB,KAAK,CAAC,CAAC,CAAC,CAAE,CACrDa,SAAS,CAAC,QAAQ,CAClB9C,EAAE,CAAC,aAAa,CACjB,CAAC,cACF9B,IAAA,UACE2F,OAAO,CAAC,aAAa,CACrBf,SAAS,CAAC,6GAA6G,CAAAC,QAAA,CACxH,aAED,CAAO,CAAC,EACL,CACN,EACE,CAAC,CACLpD,MAAM,CAACX,IAAI,eACVd,IAAA,MAAG4E,SAAS,CAAC,2BAA2B,CAAAC,QAAA,CAAEpD,MAAM,CAACX,IAAI,CAAI,CAC1D,cACDd,IAAA,MAAG4E,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAC,6CAE1C,CAAG,CAAC,EACD,CACN,cAGD3E,KAAA,QAAK0E,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnB7E,IAAA,UAAO4E,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,qBAEhE,CAAO,CAAC,CAEPtD,iBAAiB,CAAC8C,MAAM,GAAK,CAAC,cAC7BrE,IAAA,QAAK4E,SAAS,CAAC,sDAAsD,CAAAC,QAAA,cACnE7E,IAAA,MAAG4E,SAAS,CAAC,yBAAyB,CAAAC,QAAA,CAAC,6FAEvC,CAAG,CAAC,CACD,CAAC,cAEN3E,KAAA,QAAK0E,SAAS,CAAC,WAAW,CAAAC,QAAA,eAExB3E,KAAA,QAAK0E,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B3E,KAAA,UAAO0E,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAClC7E,IAAA,UACE+C,IAAI,CAAC,OAAO,CACZhB,IAAI,CAAC,aAAa,CAClBmD,KAAK,CAAC,QAAQ,CACdU,OAAO,CAAEhF,QAAQ,CAACO,oBAAoB,GAAK,QAAS,CACpDgE,QAAQ,CAAGzB,CAAC,EAAK7C,WAAW,CAACmC,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAE7B,oBAAoB,CAAEuC,CAAC,CAAC0B,MAAM,CAACF,KAAK,EAAG,CAAE,CAC1FN,SAAS,CAAC,MAAM,CACjB,CAAC,cACF5E,IAAA,SAAM4E,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,kBAAgB,CAAM,CAAC,EAC5C,CAAC,cACR3E,KAAA,UAAO0E,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAClC7E,IAAA,UACE+C,IAAI,CAAC,OAAO,CACZhB,IAAI,CAAC,aAAa,CAClBmD,KAAK,CAAC,aAAa,CACnBU,OAAO,CAAEhF,QAAQ,CAACO,oBAAoB,GAAK,aAAc,CACzDgE,QAAQ,CAAGzB,CAAC,EAAK7C,WAAW,CAACmC,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAE7B,oBAAoB,CAAEuC,CAAC,CAAC0B,MAAM,CAACF,KAAK,EAAG,CAAE,CAC1FN,SAAS,CAAC,MAAM,CACjB,CAAC,cACF5E,IAAA,SAAM4E,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,iBAAe,CAAM,CAAC,EAC3C,CAAC,cACR3E,KAAA,UAAO0E,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAClC7E,IAAA,UACE+C,IAAI,CAAC,OAAO,CACZhB,IAAI,CAAC,aAAa,CAClBmD,KAAK,CAAC,cAAc,CACpBU,OAAO,CAAEhF,QAAQ,CAACO,oBAAoB,GAAK,cAAe,CAC1DgE,QAAQ,CAAGzB,CAAC,EAAK7C,WAAW,CAACmC,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAE7B,oBAAoB,CAAEuC,CAAC,CAAC0B,MAAM,CAACF,KAAK,EAAG,CAAE,CAC1FN,SAAS,CAAC,MAAM,CACjB,CAAC,cACF5E,IAAA,SAAM4E,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,cAAY,CAAM,CAAC,EACxC,CAAC,EACL,CAAC,CAGLjE,QAAQ,CAACO,oBAAoB,GAAK,QAAQ,eACzCnB,IAAA,QAAK4E,SAAS,CAAC,gEAAgE,CAAAC,QAAA,CAC5EtD,iBAAiB,CAACyD,GAAG,CAAEa,OAAO,eAC7B3F,KAAA,UAAwB0E,SAAS,CAAC,kCAAkC,CAAAC,QAAA,eAClE7E,IAAA,UACE+C,IAAI,CAAC,UAAU,CACf6C,OAAO,CAAEhF,QAAQ,CAACQ,kBAAkB,CAACoC,QAAQ,CAACqC,OAAO,CAAC/D,EAAE,CAAE,CAC1DqD,QAAQ,CAAGzB,CAAC,EAAK,CACf,GAAIA,CAAC,CAAC0B,MAAM,CAACQ,OAAO,CAAE,CACpB/E,WAAW,CAACmC,IAAI,EAAAC,aAAA,CAAAA,aAAA,IACXD,IAAI,MACP5B,kBAAkB,CAAE,CAAC,GAAG4B,IAAI,CAAC5B,kBAAkB,CAAEyE,OAAO,CAAC/D,EAAE,CAAC,EAC5D,CAAC,CACL,CAAC,IAAM,CACLjB,WAAW,CAACmC,IAAI,EAAAC,aAAA,CAAAA,aAAA,IACXD,IAAI,MACP5B,kBAAkB,CAAE4B,IAAI,CAAC5B,kBAAkB,CAAC0E,MAAM,CAAChE,EAAE,EAAIA,EAAE,GAAK+D,OAAO,CAAC/D,EAAE,CAAC,EAC3E,CAAC,CACL,CACF,CAAE,CACF8C,SAAS,CAAC,MAAM,CACjB,CAAC,cACF1E,KAAA,QAAK0E,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACrB7E,IAAA,QAAK4E,SAAS,CAAC,mCAAmC,CAAAC,QAAA,CAC/CgB,OAAO,CAACE,YAAY,CAClB,CAAC,cACN7F,KAAA,QAAK0E,SAAS,CAAC,uBAAuB,CAAAC,QAAA,EACnCgB,OAAO,CAACG,KAAK,CAAC,UAAG,CAACH,OAAO,CAACI,cAAc,EAAI,CAAC,CAAC,GAAC,CAACJ,OAAO,CAACK,mBAAmB,CAAC,iBAC/E,EAAK,CAAC,EACH,CAAC,cACNlG,IAAA,QAAK4E,SAAS,CAAC,SAAS,CAAAC,QAAA,cACtB7E,IAAA,SAAM4E,SAAS,2BAAAE,MAAA,CACbe,OAAO,CAACM,iBAAiB,GAAK,OAAO,CAAG,6BAA6B,CACrEN,OAAO,CAACM,iBAAiB,GAAK,SAAS,CAAG,yBAAyB,CACnE,2BAA2B,CAC1B,CAAAtB,QAAA,CACAgB,OAAO,CAACM,iBAAiB,EAAI,SAAS,CACnC,CAAC,CACJ,CAAC,GAnCIN,OAAO,CAAC/D,EAoCb,CACR,CAAC,CACC,CACN,CAGAlB,QAAQ,CAACO,oBAAoB,GAAK,aAAa,eAC9CnB,IAAA,QAAK4E,SAAS,CAAC,kDAAkD,CAAAC,QAAA,cAC/D3E,KAAA,MAAG0E,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eAClC7E,IAAA,CAACH,SAAS,EAAC+E,SAAS,CAAC,qBAAqB,CAAE,CAAC,4CACJ,CAACrD,iBAAiB,CAAC8C,MAAM,CAAC,qBACrE,EAAG,CAAC,CACD,CACN,CAEAzD,QAAQ,CAACO,oBAAoB,GAAK,cAAc,eAC/CnB,IAAA,QAAK4E,SAAS,CAAC,sDAAsD,CAAAC,QAAA,cACnE3E,KAAA,MAAG0E,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eACpC7E,IAAA,CAACH,SAAS,EAAC+E,SAAS,CAAC,qBAAqB,CAAE,CAAC,yDACS,CAACrD,iBAAiB,CAAC8C,MAAM,CAAC,wCAClF,EAAG,CAAC,CACD,CACN,EACE,CACN,CAEA5C,MAAM,CAAC6C,QAAQ,eACdtE,IAAA,MAAG4E,SAAS,CAAC,2BAA2B,CAAAC,QAAA,CAAEpD,MAAM,CAAC6C,QAAQ,CAAI,CAC9D,EACE,CAAC,cAGNpE,KAAA,QAAK0E,SAAS,CAAC,oCAAoC,CAAAC,QAAA,eACjD7E,IAAA,WACE+C,IAAI,CAAC,QAAQ,CACbgC,OAAO,CAAEA,CAAA,GAAMtE,OAAO,CAAC,CAAC,CAAE,CAC1BmE,SAAS,CAAC,+DAA+D,CAAAC,QAAA,CAC1E,aAED,CAAQ,CAAC,cACT3E,KAAA,QAAK0E,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB7E,IAAA,WACE+C,IAAI,CAAC,QAAQ,CACbgC,OAAO,CAAElC,WAAY,CACrB+B,SAAS,CAAC,8FAA8F,CAAAC,QAAA,CACzG,QAED,CAAQ,CAAC,cACT7E,IAAA,WACE+C,IAAI,CAAC,QAAQ,CACb6B,SAAS,CAAC,iFAAiF,CAAAC,QAAA,CAC5F,YAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,EACF,CACP,EACE,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA1E,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}