{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krush\\\\OneDrive\\\\Desktop\\\\Final\\\\linkedin-automation-saas\\\\frontend\\\\src\\\\pages\\\\Jobs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PlusIcon, EyeIcon, ArrowDownTrayIcon, FunnelIcon, DocumentArrowUpIcon } from '@heroicons/react/24/outline';\nimport NewJobModal from '../components/Jobs/NewJobModal';\nimport BulkSearchUpload from '../components/ExcelUpload/BulkSearchUpload';\nimport BulkCompanyUpload from '../components/ExcelUpload/BulkCompanyUpload';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Jobs = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [showBulkSearchModal, setShowBulkSearchModal] = useState(false);\n  const [showBulkCompanyModal, setShowBulkCompanyModal] = useState(false);\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all');\n  const [notification, setNotification] = useState(null);\n  const {\n    user\n  } = useAuth();\n  const jobTypeColors = {\n    profile: 'bg-blue-100 text-blue-800',\n    company: 'bg-green-100 text-green-800',\n    search: 'bg-purple-100 text-purple-800',\n    profile_scraping: 'bg-blue-100 text-blue-800',\n    company_scraping: 'bg-green-100 text-green-800',\n    search_result_scraping: 'bg-purple-100 text-purple-800',\n    sales_navigator: 'bg-indigo-100 text-indigo-800',\n    unknown: 'bg-gray-100 text-gray-800'\n  };\n  const statusColors = {\n    queued: 'bg-yellow-100 text-yellow-800',\n    running: 'bg-blue-100 text-blue-800',\n    completed: 'bg-green-100 text-green-800',\n    failed: 'bg-red-100 text-red-800',\n    cancelled: 'bg-gray-100 text-gray-800'\n  };\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n\n  // Auto-dismiss notification after 5 seconds\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n  const fetchJobs = async () => {\n    try {\n      setLoading(true);\n      const response = await api.get('/jobs');\n      console.log('📦 Raw jobs response:', response);\n\n      // Support both Axios-style (response.data) and raw JSON (response)\n      const result = response.data || response;\n      console.log('📦 Parsed jobs result:', result);\n      if (result && result.success) {\n        setJobs(result.jobs || []);\n        console.log('✅ Jobs loaded:', result.jobs);\n      } else {\n        console.error('❌ Unexpected jobs response format:', result);\n        setJobs([]);\n      }\n    } catch (error) {\n      console.error('❌ Error fetching jobs:', error);\n      setJobs([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleExportJob = async (jobId, jobName, format = 'csv') => {\n    try {\n      const response = await api.get(`/jobs/${jobId}/download/${format}`, {\n        responseType: 'blob'\n      });\n\n      // Create download link\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `${jobName}_results.${format}`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      window.URL.revokeObjectURL(url);\n      setNotification({\n        type: 'success',\n        message: `Job results downloaded successfully as ${format.toUpperCase()}`\n      });\n    } catch (error) {\n      console.error('Failed to export job:', error);\n      setNotification({\n        type: 'error',\n        message: 'Failed to download job results. Please try again.'\n      });\n    }\n  };\n  const handleCancelJob = async jobId => {\n    try {\n      await api.post(`/jobs/${jobId}/cancel`);\n      fetchJobs(); // Refresh the job list\n\n      // Dispatch event for real-time updates\n      window.dispatchEvent(new CustomEvent('job-updated', {\n        detail: {\n          timestamp: Date.now(),\n          action: 'job-cancelled',\n          jobId\n        }\n      }));\n    } catch (error) {\n      console.error('Failed to cancel job:', error);\n      alert('Failed to cancel job');\n    }\n  };\n  const handlePauseJob = async jobId => {\n    try {\n      await api.post(`/jobs/${jobId}/pause`);\n      fetchJobs(); // Refresh the job list\n\n      // Dispatch event for real-time updates\n      window.dispatchEvent(new CustomEvent('job-updated', {\n        detail: {\n          timestamp: Date.now(),\n          action: 'job-paused',\n          jobId\n        }\n      }));\n    } catch (error) {\n      console.error('Failed to pause job:', error);\n      alert('Failed to pause job');\n    }\n  };\n  const handleResumeJob = async jobId => {\n    try {\n      await api.post(`/jobs/${jobId}/resume`);\n      fetchJobs(); // Refresh the job list\n\n      // Dispatch event for real-time updates\n      window.dispatchEvent(new CustomEvent('job-updated', {\n        detail: {\n          timestamp: Date.now(),\n          action: 'job-resumed',\n          jobId\n        }\n      }));\n    } catch (error) {\n      console.error('Failed to resume job:', error);\n      alert('Failed to resume job');\n    }\n  };\n  const getStatusBadge = status => {\n    const colorClass = statusColors[status] || 'bg-gray-100 text-gray-800';\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${colorClass}`,\n      children: status.charAt(0).toUpperCase() + status.slice(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  };\n\n  /**\r\n   * Safely renders a job type badge with proper null checks\r\n   * Handles cases where jobType is undefined, null, or empty string\r\n   * @param {string|undefined|null} jobType - The job type to display\r\n   * @returns {JSX.Element} A styled badge component\r\n   */\n  const getJobTypeBadge = jobType => {\n    // Safely handle undefined, null, or empty jobType\n    const safeJobType = jobType && typeof jobType === 'string' ? jobType.trim() : '';\n\n    // Use fallback if jobType is invalid\n    const normalizedType = safeJobType || 'unknown';\n\n    // Get color class with fallback\n    const colorClass = jobTypeColors[normalizedType] || 'bg-gray-100 text-gray-800';\n\n    // Safely create display name with proper checks\n    let displayName;\n    if (normalizedType === 'sales_navigator') {\n      displayName = 'Sales Navigator';\n    } else if (normalizedType === 'unknown') {\n      displayName = 'Unknown';\n    } else {\n      // Safe string manipulation with charAt check\n      displayName = normalizedType.length > 0 ? normalizedType.charAt(0).toUpperCase() + normalizedType.slice(1) : 'N/A';\n    }\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${colorClass}`,\n      children: displayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  };\n  const filteredJobs = jobs.filter(job => {\n    if (filter === 'all') return true;\n    return job.status === filter;\n  });\n  const handleCreateJob = async jobData => {\n    try {\n      var _response, _response2, _response3, _response4;\n      let response;\n\n      // Check if file upload is being used\n      if (jobData.file) {\n        var _jobData$urls;\n        // Use FormData for file uploads\n        const formData = new FormData();\n        formData.append('file', jobData.file);\n        // Map to backend expected field names\n        formData.append('type', jobData.jobType); // Backend expects 'type'\n        formData.append('query', jobData.jobName || jobData.searchQuery); // Backend expects 'query'\n        formData.append('maxResults', jobData.maxPages || 100);\n        formData.append('accountSelectionMode', jobData.accountSelectionMode || 'rotation');\n\n        // Add URLs if provided (for mixed input)\n        if (jobData.urls && jobData.urls.length > 0) {\n          formData.append('urls', jobData.urls.join('\\n'));\n        }\n        console.log('🚀 FormData details:');\n        console.log('  - type:', jobData.jobType);\n        console.log('  - query:', jobData.jobName || jobData.searchQuery);\n        console.log('  - file:', jobData.file.name);\n        console.log('  - urls count:', ((_jobData$urls = jobData.urls) === null || _jobData$urls === void 0 ? void 0 : _jobData$urls.length) || 0);\n\n        // Add selected account IDs\n        if (jobData.selectedAccountIds && jobData.selectedAccountIds.length > 0) {\n          jobData.selectedAccountIds.forEach((accountId, index) => {\n            formData.append(`selectedAccountIds[${index}]`, accountId);\n          });\n          console.log('  - selectedAccountIds:', jobData.selectedAccountIds);\n        }\n\n        // Send FormData with proper headers\n        response = await api.post('/api/jobs', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } else {\n        // Use JSON for manual URL input (no file)\n        // Map frontend fields to backend expected fields\n        const payload = {\n          type: jobData.jobType,\n          // Backend expects 'type'\n          query: jobData.jobName || jobData.searchQuery,\n          // Backend expects 'query'\n          maxResults: jobData.maxPages || 100,\n          // Backend expects 'maxResults'\n          urls: jobData.urls || [],\n          // Backend expects 'urls' as direct field\n          accountSelectionMode: jobData.accountSelectionMode || 'rotation',\n          selectedAccountIds: jobData.selectedAccountIds || [],\n          configuration: {\n            jobType: jobData.jobType,\n            // Keep original for reference\n            jobName: jobData.jobName,\n            // Keep original for reference\n            searchQuery: jobData.searchQuery // Keep search query for reference\n          }\n        };\n        console.log('🚀 Payload details:');\n        console.log('  - type:', payload.type);\n        console.log('  - query:', payload.query);\n        console.log('  - maxResults:', payload.maxResults);\n        console.log('  - urls count:', payload.urls.length);\n        console.log('  - urls sample:', payload.urls.slice(0, 3));\n        console.log('  - accountSelectionMode:', payload.accountSelectionMode);\n        console.log('  - selectedAccountIds:', payload.selectedAccountIds);\n        console.log('🚀 Sending payload to backend:', payload);\n        response = await api.post('/api/jobs', payload);\n      }\n\n      // Enhanced debugging for response structure\n      console.log('🔍 Full response object:', response);\n      console.log('🔍 Response status:', (_response = response) === null || _response === void 0 ? void 0 : _response.status);\n      console.log('🔍 Response headers:', (_response2 = response) === null || _response2 === void 0 ? void 0 : _response2.headers);\n      console.log('🔍 Response data:', (_response3 = response) === null || _response3 === void 0 ? void 0 : _response3.data);\n      console.log('🔍 Response data type:', typeof ((_response4 = response) === null || _response4 === void 0 ? void 0 : _response4.data));\n\n      // Check if response exists\n      if (!response) {\n        console.error('❌ No response received from server');\n        alert('Failed to create job: No response from server');\n        return;\n      }\n\n      // Handle both Axios-style (response.data) and raw JSON responses\n      // Some libraries put payload inside response.data, others send raw JSON\n      const result = response.data || response;\n      console.log('🔍 Parsed result:', result);\n      console.log('🔍 Result success:', result.success);\n      console.log('🔍 Result job:', result.job);\n      if (result && result.success === true) {\n        if (result.job) {\n          console.log('✅ Job created successfully:', result.job);\n          await fetchJobs(); // Refresh jobs list\n          setIsModalOpen(false);\n\n          // Check if immediate scraping was requested\n          if (jobData.startImmediately) {\n            try {\n              console.log('🚀 Starting job immediately:', result.job.id);\n              const startResponse = await api.post(`/api/jobs/${result.job.id}/start`);\n              if (startResponse.data && startResponse.data.success) {\n                setNotification({\n                  type: 'success',\n                  message: `Job \"${result.job.query || result.job.name}\" created and started successfully! Scraping is now in progress.`\n                });\n              } else {\n                setNotification({\n                  type: 'warning',\n                  message: `Job \"${result.job.query || result.job.name}\" created successfully, but failed to start automatically. You can start it manually from the jobs list.`\n                });\n              }\n            } catch (startError) {\n              console.error('❌ Failed to start job immediately:', startError);\n              setNotification({\n                type: 'warning',\n                message: `Job \"${result.job.query || result.job.name}\" created successfully, but failed to start automatically. You can start it manually from the jobs list.`\n              });\n            }\n          } else {\n            setNotification({\n              type: 'success',\n              message: `Job \"${result.job.query || result.job.name}\" created successfully!`\n            });\n          }\n\n          // Dispatch event for real-time updates\n          window.dispatchEvent(new CustomEvent('job-updated', {\n            detail: {\n              timestamp: new Date(),\n              action: 'created',\n              jobId: result.job.id\n            }\n          }));\n\n          // Show success notification (you can replace this with a toast notification)\n          setNotification({\n            type: 'success',\n            message: `Job \"${result.job.job_name}\" created successfully! Processing will begin shortly.`,\n            details: `Job ID: ${result.job.id} | Type: ${result.job.job_type} | URLs: ${result.job.total_urls || 'N/A'}`\n          });\n        } else {\n          console.warn('⚠️ Success but no job object:', result);\n          setNotification({\n            type: 'warning',\n            message: 'Job created but response format is unexpected',\n            details: 'The job may have been created successfully, but we received an unexpected response format.'\n          });\n        }\n      } else {\n        console.error('❌ Job creation failed:', result);\n        const errorMsg = (result === null || result === void 0 ? void 0 : result.error) || (result === null || result === void 0 ? void 0 : result.message) || 'Unknown error';\n        const errorCode = (result === null || result === void 0 ? void 0 : result.code) || 'UNKNOWN_ERROR';\n        const errorDetails = (result === null || result === void 0 ? void 0 : result.received) || (result === null || result === void 0 ? void 0 : result.validTypes) || (result === null || result === void 0 ? void 0 : result.invalidUrls) || null;\n        setNotification({\n          type: 'error',\n          message: `Failed to create job: ${errorMsg}`,\n          details: errorCode === 'MISSING_FIELDS' ? 'Please ensure all required fields are filled out.' : errorCode === 'INVALID_JOB_TYPE' ? `Valid job types: ${errorDetails === null || errorDetails === void 0 ? void 0 : errorDetails.join(', ')}` : errorCode === 'NO_VALID_URLS' ? 'Please provide valid LinkedIn URLs.' : errorCode === 'NO_VALID_ACCOUNTS' ? 'Please select valid LinkedIn accounts.' : `Error code: ${errorCode}`\n        });\n      }\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('Failed to create job:', error);\n      console.error('Error response:', error.response);\n      const errorData = (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data;\n      const errorMessage = (errorData === null || errorData === void 0 ? void 0 : errorData.error) || error.message || 'Unknown error';\n      const errorCode = (errorData === null || errorData === void 0 ? void 0 : errorData.code) || 'NETWORK_ERROR';\n      const statusCode = (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status;\n      setNotification({\n        type: 'error',\n        message: `Failed to create job: ${errorMessage}`,\n        details: statusCode === 403 ? 'You do not have permission to create jobs. Please check your authentication.' : statusCode === 401 ? 'Your session has expired. Please log in again.' : statusCode === 400 ? 'Invalid request data. Please check your input and try again.' : statusCode === 500 ? 'Server error. Please try again later.' : `HTTP ${statusCode} - ${errorCode}`\n      });\n    }\n  };\n\n  // Remove duplicate - already defined above\n\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const getQueryDisplay = job => {\n    if (job.type === 'search') {\n      return job.query || job.searchQuery || 'Search query';\n    }\n    return job.fileName || 'Uploaded file';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-900\",\n          children: \"Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-1\",\n          children: \"Manage your scraping jobs and bulk operations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsModalOpen(true),\n          className: \"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlusIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"New Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowBulkSearchModal(true),\n          className: \"bg-purple-500 text-white px-4 py-2 rounded-lg hover:bg-purple-600 transition-colors flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(DocumentArrowUpIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Bulk Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowBulkCompanyModal(true),\n          className: \"bg-orange-500 text-white px-4 py-2 rounded-lg hover:bg-orange-600 transition-colors flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(DocumentArrowUpIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Bulk Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-1 bg-gray-100 p-1 rounded-lg w-fit\",\n        children: [{\n          key: 'all',\n          label: 'All Jobs'\n        }, {\n          key: 'profile',\n          label: 'Profile'\n        }, {\n          key: 'company',\n          label: 'Company'\n        }, {\n          key: 'search',\n          label: 'Search'\n        }].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFilter(tab.key),\n          className: `px-4 py-2 rounded-md text-sm font-medium transition-colors ${filter === tab.key ? 'bg-white text-blue-600 shadow-sm' : 'text-gray-600 hover:text-gray-900'}`,\n          children: tab.label\n        }, tab.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow overflow-hidden\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-2\",\n          children: \"Loading jobs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 11\n      }, this) : filteredJobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-4\",\n          children: filter === 'all' ? 'No jobs created yet.' : `No ${filter} jobs found.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsModalOpen(true),\n          className: \"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors\",\n          children: \"Create Your First Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full divide-y divide-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Job Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Query/File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Created\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-white divide-y divide-gray-200\",\n            children: Array.isArray(filteredJobs) && filteredJobs.length > 0 ? filteredJobs.map(job => {\n              var _job$configuration, _job$configuration2, _job$progress, _job$progress2;\n              // Safe job object validation\n              if (!job || typeof job !== 'object') {\n                console.warn('Invalid job object:', job);\n                return null;\n              }\n              const jobId = job.id || `unknown-${Math.random().toString(36).substr(2, 9)}`;\n              const jobQuery = job.query || job.job_name || `Job ${jobId.toString().slice(0, 8)}`;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"hover:bg-gray-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm font-medium text-gray-900\",\n                    children: jobQuery\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 531,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: getJobTypeBadge(job.type || job.job_type)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-900 max-w-xs truncate\",\n                    children: job.type === 'sales_navigator' ? ((_job$configuration = job.configuration) === null || _job$configuration === void 0 ? void 0 : _job$configuration.searchQuery) || job.query || 'Search query' : `${(((_job$configuration2 = job.configuration) === null || _job$configuration2 === void 0 ? void 0 : _job$configuration2.urls) || []).length} URLs`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: getStatusBadge(job.status)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-16 bg-gray-200 rounded-full h-2 mr-2\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"bg-sky-500 h-2 rounded-full transition-all duration-300\",\n                        style: {\n                          width: `${((_job$progress = job.progress) === null || _job$progress === void 0 ? void 0 : _job$progress.percentage) || 0}%`\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 552,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 551,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-sm text-gray-600\",\n                      children: [((_job$progress2 = job.progress) === null || _job$progress2 === void 0 ? void 0 : _job$progress2.percentage) || 0, \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 557,\n                      columnNumber: 25\n                    }, this), job.progress && job.progress.totalUrls > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ml-2 text-xs text-gray-500\",\n                      children: [\"(\", job.progress.successful || 0, \"/\", job.progress.totalUrls || 0, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 559,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 550,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-600\",\n                  children: formatDate(job.created_at)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap text-sm font-medium\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex space-x-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => window.open(`/jobs/${job.id}`, '_blank'),\n                      className: \"text-sky-600 hover:text-sky-900 transition-colors\",\n                      title: \"View Details\",\n                      children: /*#__PURE__*/_jsxDEV(EyeIcon, {\n                        className: \"h-4 w-4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 575,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 570,\n                      columnNumber: 25\n                    }, this), job.status === 'completed' && (job.totalResults > 0 || job.result_count > 0) && /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleExportJob(job.id, job.query || job.job_name),\n                      className: \"text-green-600 hover:text-green-900 transition-colors\",\n                      title: \"Download Results\",\n                      children: /*#__PURE__*/_jsxDEV(ArrowDownTrayIcon, {\n                        className: \"h-4 w-4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 583,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 578,\n                      columnNumber: 27\n                    }, this), job.status === 'running' && /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handlePauseJob(job.id),\n                      className: \"text-yellow-600 hover:text-yellow-900 transition-colors\",\n                      title: \"Pause Job\",\n                      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                        className: \"h-4 w-4\",\n                        fill: \"none\",\n                        viewBox: \"0 0 24 24\",\n                        stroke: \"currentColor\",\n                        children: /*#__PURE__*/_jsxDEV(\"path\", {\n                          strokeLinecap: \"round\",\n                          strokeLinejoin: \"round\",\n                          strokeWidth: 2,\n                          d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 593,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 592,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 587,\n                      columnNumber: 27\n                    }, this), job.status === 'paused' && /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleResumeJob(job.id),\n                      className: \"text-blue-600 hover:text-blue-900 transition-colors\",\n                      title: \"Resume Job\",\n                      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                        className: \"h-4 w-4\",\n                        fill: \"none\",\n                        viewBox: \"0 0 24 24\",\n                        stroke: \"currentColor\",\n                        children: /*#__PURE__*/_jsxDEV(\"path\", {\n                          strokeLinecap: \"round\",\n                          strokeLinejoin: \"round\",\n                          strokeWidth: 2,\n                          d: \"M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1m-6 4h1m4 0h1m6-10V7a3 3 0 00-3-3H6a3 3 0 00-3 3v1M2 17h20v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2z\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 604,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 603,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 598,\n                      columnNumber: 27\n                    }, this), (job.status === 'pending' || job.status === 'running') && /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleCancelJob(job.id),\n                      className: \"text-rose-600 hover:text-rose-900 transition-colors\",\n                      title: \"Cancel Job\",\n                      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                        className: \"h-4 w-4\",\n                        fill: \"none\",\n                        viewBox: \"0 0 24 24\",\n                        stroke: \"currentColor\",\n                        children: /*#__PURE__*/_jsxDEV(\"path\", {\n                          strokeLinecap: \"round\",\n                          strokeLinejoin: \"round\",\n                          strokeWidth: 2,\n                          d: \"M6 18L18 6M6 6l12 12\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 615,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 614,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 609,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 569,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 21\n                }, this)]\n              }, jobId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 23\n              }, this);\n            }).filter(Boolean) // Remove null entries from invalid jobs\n            : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"6\",\n                className: \"px-6 py-4 text-center text-sm text-gray-500\",\n                children: loading ? 'Loading jobs...' : 'No jobs found. Create your first job to get started!'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed top-4 right-4 max-w-md p-4 rounded-lg shadow-lg z-50 ${notification.type === 'success' ? 'bg-green-100 border border-green-400 text-green-700' : notification.type === 'warning' ? 'bg-yellow-100 border border-yellow-400 text-yellow-700' : 'bg-red-100 border border-red-400 text-red-700'}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium\",\n            children: notification.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 15\n          }, this), notification.details && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm mt-1 opacity-90\",\n            children: notification.details\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setNotification(null),\n          className: \"ml-4 text-gray-400 hover:text-gray-600\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewJobModal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      onSubmit: handleCreateJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 7\n    }, this), showBulkSearchModal && /*#__PURE__*/_jsxDEV(BulkSearchUpload, {\n      onUploadComplete: result => {\n        console.log(`Bulk search job created: ${result.jobId}`);\n        fetchJobs(); // Refresh the jobs list\n        setShowBulkSearchModal(false);\n      },\n      onClose: () => setShowBulkSearchModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 9\n    }, this), showBulkCompanyModal && /*#__PURE__*/_jsxDEV(BulkCompanyUpload, {\n      onUploadComplete: result => {\n        console.log(`Bulk company job created: ${result.jobId}`);\n        fetchJobs(); // Refresh the jobs list\n        setShowBulkCompanyModal(false);\n      },\n      onClose: () => setShowBulkCompanyModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 412,\n    columnNumber: 5\n  }, this);\n};\n_s(Jobs, \"EUzJjlBTtOoB14HR0sG/xdPNZGc=\", false, function () {\n  return [useAuth];\n});\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useState","useEffect","PlusIcon","EyeIcon","ArrowDownTrayIcon","FunnelIcon","DocumentArrowUpIcon","NewJobModal","BulkSearchUpload","BulkCompanyUpload","useAuth","api","jsxDEV","_jsxDEV","Jobs","_s","isModalOpen","setIsModalOpen","showBulkSearchModal","setShowBulkSearchModal","showBulkCompanyModal","setShowBulkCompanyModal","jobs","setJobs","loading","setLoading","filter","setFilter","notification","setNotification","user","jobTypeColors","profile","company","search","profile_scraping","company_scraping","search_result_scraping","sales_navigator","unknown","statusColors","queued","running","completed","failed","cancelled","fetchJobs","timer","setTimeout","clearTimeout","response","get","console","log","result","data","success","error","handleExportJob","jobId","jobName","format","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","revokeObjectURL","type","message","toUpperCase","handleCancelJob","post","dispatchEvent","CustomEvent","detail","timestamp","Date","now","action","alert","handlePauseJob","handleResumeJob","getStatusBadge","status","colorClass","className","children","charAt","slice","fileName","_jsxFileName","lineNumber","columnNumber","getJobTypeBadge","jobType","safeJobType","trim","normalizedType","displayName","length","filteredJobs","job","handleCreateJob","jobData","_response","_response2","_response3","_response4","file","_jobData$urls","formData","FormData","append","searchQuery","maxPages","accountSelectionMode","urls","join","name","selectedAccountIds","forEach","accountId","index","headers","payload","query","maxResults","configuration","startImmediately","id","startResponse","startError","job_name","details","job_type","total_urls","warn","errorMsg","errorCode","code","errorDetails","received","validTypes","invalidUrls","_error$response","_error$response2","errorData","errorMessage","statusCode","formatDate","dateString","toLocaleDateString","year","month","day","hour","minute","getQueryDisplay","onClick","key","label","map","tab","Array","isArray","_job$configuration","_job$configuration2","_job$progress","_job$progress2","Math","random","toString","substr","jobQuery","style","width","progress","percentage","totalUrls","successful","created_at","open","title","totalResults","result_count","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Boolean","colSpan","isOpen","onClose","onSubmit","onUploadComplete","_c","$RefreshReg$"],"sources":["C:/Users/krush/OneDrive/Desktop/Final/linkedin-automation-saas/frontend/src/pages/Jobs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { PlusIcon, EyeIcon, ArrowDownTrayIcon, FunnelIcon, DocumentArrowUpIcon } from '@heroicons/react/24/outline';\r\nimport NewJobModal from '../components/Jobs/NewJobModal';\r\nimport BulkSearchUpload from '../components/ExcelUpload/BulkSearchUpload';\r\nimport BulkCompanyUpload from '../components/ExcelUpload/BulkCompanyUpload';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport api from '../services/api';\r\n\r\nconst Jobs = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [showBulkSearchModal, setShowBulkSearchModal] = useState(false);\r\n  const [showBulkCompanyModal, setShowBulkCompanyModal] = useState(false);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filter, setFilter] = useState('all');\r\n  const [notification, setNotification] = useState(null);\r\n  const { user } = useAuth();\r\n\r\n  const jobTypeColors = {\r\n    profile: 'bg-blue-100 text-blue-800',\r\n    company: 'bg-green-100 text-green-800',\r\n    search: 'bg-purple-100 text-purple-800',\r\n    profile_scraping: 'bg-blue-100 text-blue-800',\r\n    company_scraping: 'bg-green-100 text-green-800',\r\n    search_result_scraping: 'bg-purple-100 text-purple-800',\r\n    sales_navigator: 'bg-indigo-100 text-indigo-800',\r\n    unknown: 'bg-gray-100 text-gray-800'\r\n  };\r\n\r\n  const statusColors = {\r\n    queued: 'bg-yellow-100 text-yellow-800',\r\n    running: 'bg-blue-100 text-blue-800',\r\n    completed: 'bg-green-100 text-green-800',\r\n    failed: 'bg-red-100 text-red-800',\r\n    cancelled: 'bg-gray-100 text-gray-800'\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  // Auto-dismiss notification after 5 seconds\r\n  useEffect(() => {\r\n    if (notification) {\r\n      const timer = setTimeout(() => {\r\n        setNotification(null);\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification]);\r\n\r\n  const fetchJobs = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.get('/jobs');\r\n      \r\n      console.log('📦 Raw jobs response:', response);\r\n      \r\n      // Support both Axios-style (response.data) and raw JSON (response)\r\n      const result = response.data || response;\r\n      \r\n      console.log('📦 Parsed jobs result:', result);\r\n      \r\n      if (result && result.success) {\r\n        setJobs(result.jobs || []);\r\n        console.log('✅ Jobs loaded:', result.jobs);\r\n      } else {\r\n        console.error('❌ Unexpected jobs response format:', result);\r\n        setJobs([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error fetching jobs:', error);\r\n      setJobs([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleExportJob = async (jobId, jobName, format = 'csv') => {\r\n    try {\r\n      const response = await api.get(`/jobs/${jobId}/download/${format}`, {\r\n        responseType: 'blob'\r\n      });\r\n      \r\n      // Create download link\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', `${jobName}_results.${format}`);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n      window.URL.revokeObjectURL(url);\r\n      \r\n      setNotification({\r\n        type: 'success',\r\n        message: `Job results downloaded successfully as ${format.toUpperCase()}`\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to export job:', error);\r\n      setNotification({\r\n        type: 'error',\r\n        message: 'Failed to download job results. Please try again.'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCancelJob = async (jobId) => {\r\n    try {\r\n      await api.post(`/jobs/${jobId}/cancel`);\r\n      fetchJobs(); // Refresh the job list\r\n      \r\n      // Dispatch event for real-time updates\r\n      window.dispatchEvent(new CustomEvent('job-updated', {\r\n        detail: { timestamp: Date.now(), action: 'job-cancelled', jobId }\r\n      }));\r\n    } catch (error) {\r\n      console.error('Failed to cancel job:', error);\r\n      alert('Failed to cancel job');\r\n    }\r\n  };\r\n\r\n  const handlePauseJob = async (jobId) => {\r\n    try {\r\n      await api.post(`/jobs/${jobId}/pause`);\r\n      fetchJobs(); // Refresh the job list\r\n      \r\n      // Dispatch event for real-time updates\r\n      window.dispatchEvent(new CustomEvent('job-updated', {\r\n        detail: { timestamp: Date.now(), action: 'job-paused', jobId }\r\n      }));\r\n    } catch (error) {\r\n      console.error('Failed to pause job:', error);\r\n      alert('Failed to pause job');\r\n    }\r\n  };\r\n\r\n  const handleResumeJob = async (jobId) => {\r\n    try {\r\n      await api.post(`/jobs/${jobId}/resume`);\r\n      fetchJobs(); // Refresh the job list\r\n      \r\n      // Dispatch event for real-time updates\r\n      window.dispatchEvent(new CustomEvent('job-updated', {\r\n        detail: { timestamp: Date.now(), action: 'job-resumed', jobId }\r\n      }));\r\n    } catch (error) {\r\n      console.error('Failed to resume job:', error);\r\n      alert('Failed to resume job');\r\n    }\r\n  };\r\n\r\n  const getStatusBadge = (status) => {\r\n    const colorClass = statusColors[status] || 'bg-gray-100 text-gray-800';\r\n    return (\r\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${colorClass}`}>\r\n        {status.charAt(0).toUpperCase() + status.slice(1)}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Safely renders a job type badge with proper null checks\r\n   * Handles cases where jobType is undefined, null, or empty string\r\n   * @param {string|undefined|null} jobType - The job type to display\r\n   * @returns {JSX.Element} A styled badge component\r\n   */\r\n  const getJobTypeBadge = (jobType) => {\r\n    // Safely handle undefined, null, or empty jobType\r\n    const safeJobType = jobType && typeof jobType === 'string' ? jobType.trim() : '';\r\n    \r\n    // Use fallback if jobType is invalid\r\n    const normalizedType = safeJobType || 'unknown';\r\n    \r\n    // Get color class with fallback\r\n    const colorClass = jobTypeColors[normalizedType] || 'bg-gray-100 text-gray-800';\r\n    \r\n    // Safely create display name with proper checks\r\n    let displayName;\r\n    if (normalizedType === 'sales_navigator') {\r\n      displayName = 'Sales Navigator';\r\n    } else if (normalizedType === 'unknown') {\r\n      displayName = 'Unknown';\r\n    } else {\r\n      // Safe string manipulation with charAt check\r\n      displayName = normalizedType.length > 0 \r\n        ? normalizedType.charAt(0).toUpperCase() + normalizedType.slice(1)\r\n        : 'N/A';\r\n    }\r\n    \r\n    return (\r\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${colorClass}`}>\r\n        {displayName}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const filteredJobs = jobs.filter(job => {\r\n    if (filter === 'all') return true;\r\n    return job.status === filter;\r\n  });\r\n\r\n  const handleCreateJob = async (jobData) => {\r\n    try {\r\n      let response;\r\n      \r\n      // Check if file upload is being used\r\n      if (jobData.file) {\r\n        // Use FormData for file uploads\r\n        const formData = new FormData();\r\n        formData.append('file', jobData.file);\r\n        // Map to backend expected field names\r\n        formData.append('type', jobData.jobType);           // Backend expects 'type'\r\n        formData.append('query', jobData.jobName || jobData.searchQuery); // Backend expects 'query'\r\n        formData.append('maxResults', jobData.maxPages || 100);\r\n        formData.append('accountSelectionMode', jobData.accountSelectionMode || 'rotation');\r\n        \r\n        // Add URLs if provided (for mixed input)\r\n        if (jobData.urls && jobData.urls.length > 0) {\r\n          formData.append('urls', jobData.urls.join('\\n'));\r\n        }\r\n        \r\n        console.log('🚀 FormData details:');\r\n        console.log('  - type:', jobData.jobType);\r\n        console.log('  - query:', jobData.jobName || jobData.searchQuery);\r\n        console.log('  - file:', jobData.file.name);\r\n        console.log('  - urls count:', jobData.urls?.length || 0);\r\n        \r\n        // Add selected account IDs\r\n        if (jobData.selectedAccountIds && jobData.selectedAccountIds.length > 0) {\r\n          jobData.selectedAccountIds.forEach((accountId, index) => {\r\n            formData.append(`selectedAccountIds[${index}]`, accountId);\r\n          });\r\n          console.log('  - selectedAccountIds:', jobData.selectedAccountIds);\r\n        }\r\n        \r\n        // Send FormData with proper headers\r\n        response = await api.post('/api/jobs', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        });\r\n      } else {\r\n        // Use JSON for manual URL input (no file)\r\n        // Map frontend fields to backend expected fields\r\n        const payload = {\r\n          type: jobData.jobType,                    // Backend expects 'type'\r\n          query: jobData.jobName || jobData.searchQuery, // Backend expects 'query'\r\n          maxResults: jobData.maxPages || 100,      // Backend expects 'maxResults'\r\n          urls: jobData.urls || [],                 // Backend expects 'urls' as direct field\r\n          accountSelectionMode: jobData.accountSelectionMode || 'rotation',\r\n          selectedAccountIds: jobData.selectedAccountIds || [],\r\n          configuration: {\r\n            jobType: jobData.jobType,               // Keep original for reference\r\n            jobName: jobData.jobName,               // Keep original for reference\r\n            searchQuery: jobData.searchQuery        // Keep search query for reference\r\n          }\r\n        };\r\n        \r\n        console.log('🚀 Payload details:');\r\n        console.log('  - type:', payload.type);\r\n        console.log('  - query:', payload.query);\r\n        console.log('  - maxResults:', payload.maxResults);\r\n        console.log('  - urls count:', payload.urls.length);\r\n        console.log('  - urls sample:', payload.urls.slice(0, 3));\r\n        console.log('  - accountSelectionMode:', payload.accountSelectionMode);\r\n        console.log('  - selectedAccountIds:', payload.selectedAccountIds);\r\n        \r\n        console.log('🚀 Sending payload to backend:', payload);\r\n\r\n        response = await api.post('/api/jobs', payload);\r\n      }\r\n\r\n      // Enhanced debugging for response structure\r\n      console.log('🔍 Full response object:', response);\r\n      console.log('🔍 Response status:', response?.status);\r\n      console.log('🔍 Response headers:', response?.headers);\r\n      console.log('🔍 Response data:', response?.data);\r\n      console.log('🔍 Response data type:', typeof response?.data);\r\n      \r\n      // Check if response exists\r\n      if (!response) {\r\n        console.error('❌ No response received from server');\r\n        alert('Failed to create job: No response from server');\r\n        return;\r\n      }\r\n      \r\n      // Handle both Axios-style (response.data) and raw JSON responses\r\n      // Some libraries put payload inside response.data, others send raw JSON\r\n      const result = response.data || response;\r\n      console.log('🔍 Parsed result:', result);\r\n      console.log('🔍 Result success:', result.success);\r\n      console.log('🔍 Result job:', result.job);\r\n      \r\n      if (result && result.success === true) {\r\n        if (result.job) {\r\n          console.log('✅ Job created successfully:', result.job);\r\n          await fetchJobs(); // Refresh jobs list\r\n          setIsModalOpen(false);\r\n          \r\n          // Check if immediate scraping was requested\r\n          if (jobData.startImmediately) {\r\n            try {\r\n              console.log('🚀 Starting job immediately:', result.job.id);\r\n              const startResponse = await api.post(`/api/jobs/${result.job.id}/start`);\r\n              \r\n              if (startResponse.data && startResponse.data.success) {\r\n                setNotification({\r\n                  type: 'success',\r\n                  message: `Job \"${result.job.query || result.job.name}\" created and started successfully! Scraping is now in progress.`\r\n                });\r\n              } else {\r\n                setNotification({\r\n                  type: 'warning',\r\n                  message: `Job \"${result.job.query || result.job.name}\" created successfully, but failed to start automatically. You can start it manually from the jobs list.`\r\n                });\r\n              }\r\n            } catch (startError) {\r\n              console.error('❌ Failed to start job immediately:', startError);\r\n              setNotification({\r\n                type: 'warning',\r\n                message: `Job \"${result.job.query || result.job.name}\" created successfully, but failed to start automatically. You can start it manually from the jobs list.`\r\n              });\r\n            }\r\n          } else {\r\n            setNotification({\r\n              type: 'success',\r\n              message: `Job \"${result.job.query || result.job.name}\" created successfully!`\r\n            });\r\n          }\r\n          \r\n          // Dispatch event for real-time updates\r\n          window.dispatchEvent(new CustomEvent('job-updated', {\r\n            detail: {\r\n              timestamp: new Date(),\r\n              action: 'created',\r\n              jobId: result.job.id\r\n            }\r\n          }));\r\n          \r\n          // Show success notification (you can replace this with a toast notification)\r\n          setNotification({\r\n            type: 'success',\r\n            message: `Job \"${result.job.job_name}\" created successfully! Processing will begin shortly.`,\r\n            details: `Job ID: ${result.job.id} | Type: ${result.job.job_type} | URLs: ${result.job.total_urls || 'N/A'}`\r\n          });\r\n        } else {\r\n          console.warn('⚠️ Success but no job object:', result);\r\n          setNotification({\r\n            type: 'warning',\r\n            message: 'Job created but response format is unexpected',\r\n            details: 'The job may have been created successfully, but we received an unexpected response format.'\r\n          });\r\n        }\r\n      } else {\r\n        console.error('❌ Job creation failed:', result);\r\n        const errorMsg = result?.error || result?.message || 'Unknown error';\r\n        const errorCode = result?.code || 'UNKNOWN_ERROR';\r\n        const errorDetails = result?.received || result?.validTypes || result?.invalidUrls || null;\r\n        \r\n        setNotification({\r\n          type: 'error',\r\n          message: `Failed to create job: ${errorMsg}`,\r\n          details: errorCode === 'MISSING_FIELDS' ? 'Please ensure all required fields are filled out.' :\r\n                   errorCode === 'INVALID_JOB_TYPE' ? `Valid job types: ${errorDetails?.join(', ')}` :\r\n                   errorCode === 'NO_VALID_URLS' ? 'Please provide valid LinkedIn URLs.' :\r\n                   errorCode === 'NO_VALID_ACCOUNTS' ? 'Please select valid LinkedIn accounts.' :\r\n                   `Error code: ${errorCode}`\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to create job:', error);\r\n      console.error('Error response:', error.response);\r\n      \r\n      const errorData = error.response?.data;\r\n      const errorMessage = errorData?.error || error.message || 'Unknown error';\r\n      const errorCode = errorData?.code || 'NETWORK_ERROR';\r\n      const statusCode = error.response?.status;\r\n      \r\n      setNotification({\r\n        type: 'error',\r\n        message: `Failed to create job: ${errorMessage}`,\r\n        details: statusCode === 403 ? 'You do not have permission to create jobs. Please check your authentication.' :\r\n                 statusCode === 401 ? 'Your session has expired. Please log in again.' :\r\n                 statusCode === 400 ? 'Invalid request data. Please check your input and try again.' :\r\n                 statusCode === 500 ? 'Server error. Please try again later.' :\r\n                 `HTTP ${statusCode} - ${errorCode}`\r\n      });\r\n    }\r\n  };\r\n\r\n  // Remove duplicate - already defined above\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const getQueryDisplay = (job) => {\r\n    if (job.type === 'search') {\r\n      return job.query || job.searchQuery || 'Search query';\r\n    }\r\n    return job.fileName || 'Uploaded file';\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Jobs</h1>\r\n          <p className=\"text-gray-600 mt-1\">\r\n            Manage your scraping jobs and bulk operations\r\n          </p>\r\n        </div>\r\n        <div className=\"flex space-x-3\">\r\n          <button \r\n            onClick={() => setIsModalOpen(true)}\r\n            className=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors flex items-center space-x-2\"\r\n          >\r\n            <PlusIcon className=\"h-5 w-5\" />\r\n            <span>New Job</span>\r\n          </button>\r\n          <button \r\n             onClick={() => setShowBulkSearchModal(true)}\r\n             className=\"bg-purple-500 text-white px-4 py-2 rounded-lg hover:bg-purple-600 transition-colors flex items-center space-x-2\"\r\n           >\r\n             <DocumentArrowUpIcon className=\"h-5 w-5\" />\r\n             <span>Bulk Search</span>\r\n           </button>\r\n           <button \r\n             onClick={() => setShowBulkCompanyModal(true)}\r\n             className=\"bg-orange-500 text-white px-4 py-2 rounded-lg hover:bg-orange-600 transition-colors flex items-center space-x-2\"\r\n           >\r\n             <DocumentArrowUpIcon className=\"h-5 w-5\" />\r\n             <span>Bulk Company</span>\r\n           </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Filter Tabs */}\r\n      <div className=\"mb-6\">\r\n        <div className=\"flex space-x-1 bg-gray-100 p-1 rounded-lg w-fit\">\r\n          {[\r\n            { key: 'all', label: 'All Jobs' },\r\n            { key: 'profile', label: 'Profile' },\r\n            { key: 'company', label: 'Company' },\r\n            { key: 'search', label: 'Search' }\r\n          ].map((tab) => (\r\n            <button\r\n              key={tab.key}\r\n              onClick={() => setFilter(tab.key)}\r\n              className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\r\n                filter === tab.key\r\n                  ? 'bg-white text-blue-600 shadow-sm'\r\n                  : 'text-gray-600 hover:text-gray-900'\r\n              }`}\r\n            >\r\n              {tab.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Jobs Table */}\r\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n        {loading ? (\r\n          <div className=\"p-8 text-center\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto\"></div>\r\n            <p className=\"text-gray-600 mt-2\">Loading jobs...</p>\r\n          </div>\r\n        ) : filteredJobs.length === 0 ? (\r\n          <div className=\"p-8 text-center\">\r\n            <p className=\"text-gray-600 mb-4\">\r\n              {filter === 'all' ? 'No jobs created yet.' : `No ${filter} jobs found.`}\r\n            </p>\r\n            <button \r\n              onClick={() => setIsModalOpen(true)}\r\n              className=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors\"\r\n            >\r\n              Create Your First Job\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Job Name\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Type\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Query/File\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Status\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Progress\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Created\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {Array.isArray(filteredJobs) && filteredJobs.length > 0 ? (\r\n                  filteredJobs.map((job) => {\r\n                    // Safe job object validation\r\n                    if (!job || typeof job !== 'object') {\r\n                      console.warn('Invalid job object:', job);\r\n                      return null;\r\n                    }\r\n                    \r\n                    const jobId = job.id || `unknown-${Math.random().toString(36).substr(2, 9)}`;\r\n                    const jobQuery = job.query || job.job_name || `Job ${jobId.toString().slice(0, 8)}`;\r\n                    \r\n                    return (\r\n                      <tr key={jobId} className=\"hover:bg-gray-50\">\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"text-sm font-medium text-gray-900\">\r\n                            {jobQuery}\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          {getJobTypeBadge(job.type || job.job_type)}\r\n                        </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"text-sm text-gray-900 max-w-xs truncate\">\r\n                        {job.type === 'sales_navigator' ? \r\n                          (job.configuration?.searchQuery || job.query || 'Search query') :\r\n                          `${(job.configuration?.urls || []).length} URLs`\r\n                        }\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {getStatusBadge(job.status)}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"flex items-center\">\r\n                        <div className=\"w-16 bg-gray-200 rounded-full h-2 mr-2\">\r\n                          <div \r\n                            className=\"bg-sky-500 h-2 rounded-full transition-all duration-300\" \r\n                            style={{ width: `${job.progress?.percentage || 0}%` }}\r\n                          ></div>\r\n                        </div>\r\n                        <span className=\"text-sm text-gray-600\">{job.progress?.percentage || 0}%</span>\r\n                        {job.progress && job.progress.totalUrls > 0 && (\r\n                          <span className=\"ml-2 text-xs text-gray-500\">\r\n                            ({job.progress.successful || 0}/{job.progress.totalUrls || 0})\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n                      {formatDate(job.created_at)}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                      <div className=\"flex space-x-2\">\r\n                        <button \r\n                          onClick={() => window.open(`/jobs/${job.id}`, '_blank')}\r\n                          className=\"text-sky-600 hover:text-sky-900 transition-colors\"\r\n                          title=\"View Details\"\r\n                        >\r\n                          <EyeIcon className=\"h-4 w-4\" />\r\n                        </button>\r\n                        {job.status === 'completed' && (job.totalResults > 0 || job.result_count > 0) && (\r\n                          <button \r\n                            onClick={() => handleExportJob(job.id, job.query || job.job_name)}\r\n                            className=\"text-green-600 hover:text-green-900 transition-colors\"\r\n                            title=\"Download Results\"\r\n                          >\r\n                            <ArrowDownTrayIcon className=\"h-4 w-4\" />\r\n                          </button>\r\n                        )}\r\n                        {job.status === 'running' && (\r\n                          <button \r\n                            onClick={() => handlePauseJob(job.id)}\r\n                            className=\"text-yellow-600 hover:text-yellow-900 transition-colors\"\r\n                            title=\"Pause Job\"\r\n                          >\r\n                            <svg className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                            </svg>\r\n                          </button>\r\n                        )}\r\n                        {job.status === 'paused' && (\r\n                          <button \r\n                            onClick={() => handleResumeJob(job.id)}\r\n                            className=\"text-blue-600 hover:text-blue-900 transition-colors\"\r\n                            title=\"Resume Job\"\r\n                          >\r\n                            <svg className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1m-6 4h1m4 0h1m6-10V7a3 3 0 00-3-3H6a3 3 0 00-3 3v1M2 17h20v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2z\" />\r\n                            </svg>\r\n                          </button>\r\n                        )}\r\n                        {(job.status === 'pending' || job.status === 'running') && (\r\n                          <button \r\n                            onClick={() => handleCancelJob(job.id)}\r\n                            className=\"text-rose-600 hover:text-rose-900 transition-colors\"\r\n                            title=\"Cancel Job\"\r\n                          >\r\n                            <svg className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                            </svg>\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                    );\r\n                  }).filter(Boolean) // Remove null entries from invalid jobs\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan=\"6\" className=\"px-6 py-4 text-center text-sm text-gray-500\">\r\n                      {loading ? 'Loading jobs...' : 'No jobs found. Create your first job to get started!'}\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Notification */}\r\n      {notification && (\r\n        <div className={`fixed top-4 right-4 max-w-md p-4 rounded-lg shadow-lg z-50 ${\r\n          notification.type === 'success' ? 'bg-green-100 border border-green-400 text-green-700' :\r\n          notification.type === 'warning' ? 'bg-yellow-100 border border-yellow-400 text-yellow-700' :\r\n          'bg-red-100 border border-red-400 text-red-700'\r\n        }`}>\r\n          <div className=\"flex justify-between items-start\">\r\n            <div className=\"flex-1\">\r\n              <div className=\"font-medium\">{notification.message}</div>\r\n              {notification.details && (\r\n                <div className=\"text-sm mt-1 opacity-90\">{notification.details}</div>\r\n              )}\r\n            </div>\r\n            <button\r\n              onClick={() => setNotification(null)}\r\n              className=\"ml-4 text-gray-400 hover:text-gray-600\"\r\n            >\r\n              ✕\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* New Job Modal */}\r\n      <NewJobModal \r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n        onSubmit={handleCreateJob}\r\n      />\r\n\r\n      {/* Bulk Search Upload Modal */}\r\n      {showBulkSearchModal && (\r\n        <BulkSearchUpload \r\n          onUploadComplete={(result) => {\r\n            console.log(`Bulk search job created: ${result.jobId}`);\r\n            fetchJobs(); // Refresh the jobs list\r\n            setShowBulkSearchModal(false);\r\n          }}\r\n          onClose={() => setShowBulkSearchModal(false)}\r\n        />\r\n      )}\r\n\r\n      {/* Bulk Company Upload Modal */}\r\n      {showBulkCompanyModal && (\r\n        <BulkCompanyUpload \r\n          onUploadComplete={(result) => {\r\n            console.log(`Bulk company job created: ${result.jobId}`);\r\n            fetchJobs(); // Refresh the jobs list\r\n            setShowBulkCompanyModal(false);\r\n          }}\r\n          onClose={() => setShowBulkCompanyModal(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jobs;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,OAAO,EAAEC,iBAAiB,EAAEC,UAAU,EAAEC,mBAAmB,QAAQ,6BAA6B;AACnH,OAAOC,WAAW,MAAM,gCAAgC;AACxD,OAAOC,gBAAgB,MAAM,4CAA4C;AACzE,OAAOC,iBAAiB,MAAM,6CAA6C;AAC3E,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACkB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACoB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACsB,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC0B,MAAM,EAAEC,SAAS,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM;IAAE8B;EAAK,CAAC,GAAGpB,OAAO,CAAC,CAAC;EAE1B,MAAMqB,aAAa,GAAG;IACpBC,OAAO,EAAE,2BAA2B;IACpCC,OAAO,EAAE,6BAA6B;IACtCC,MAAM,EAAE,+BAA+B;IACvCC,gBAAgB,EAAE,2BAA2B;IAC7CC,gBAAgB,EAAE,6BAA6B;IAC/CC,sBAAsB,EAAE,+BAA+B;IACvDC,eAAe,EAAE,+BAA+B;IAChDC,OAAO,EAAE;EACX,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBC,MAAM,EAAE,+BAA+B;IACvCC,OAAO,EAAE,2BAA2B;IACpCC,SAAS,EAAE,6BAA6B;IACxCC,MAAM,EAAE,yBAAyB;IACjCC,SAAS,EAAE;EACb,CAAC;EAED5C,SAAS,CAAC,MAAM;IACd6C,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA7C,SAAS,CAAC,MAAM;IACd,IAAI2B,YAAY,EAAE;MAChB,MAAMmB,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7BnB,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMoB,YAAY,CAACF,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACnB,YAAY,CAAC,CAAC;EAElB,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACFrB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMyB,QAAQ,GAAG,MAAMvC,GAAG,CAACwC,GAAG,CAAC,OAAO,CAAC;MAEvCC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,QAAQ,CAAC;;MAE9C;MACA,MAAMI,MAAM,GAAGJ,QAAQ,CAACK,IAAI,IAAIL,QAAQ;MAExCE,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,MAAM,CAAC;MAE7C,IAAIA,MAAM,IAAIA,MAAM,CAACE,OAAO,EAAE;QAC5BjC,OAAO,CAAC+B,MAAM,CAAChC,IAAI,IAAI,EAAE,CAAC;QAC1B8B,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,MAAM,CAAChC,IAAI,CAAC;MAC5C,CAAC,MAAM;QACL8B,OAAO,CAACK,KAAK,CAAC,oCAAoC,EAAEH,MAAM,CAAC;QAC3D/B,OAAO,CAAC,EAAE,CAAC;MACb;IACF,CAAC,CAAC,OAAOkC,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9ClC,OAAO,CAAC,EAAE,CAAC;IACb,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMiC,eAAe,GAAG,MAAAA,CAAOC,KAAK,EAAEC,OAAO,EAAEC,MAAM,GAAG,KAAK,KAAK;IAChE,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMvC,GAAG,CAACwC,GAAG,CAAC,SAASQ,KAAK,aAAaE,MAAM,EAAE,EAAE;QAClEC,YAAY,EAAE;MAChB,CAAC,CAAC;;MAEF;MACA,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACjB,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;MACjE,MAAMa,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGR,GAAG;MACfK,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,GAAGZ,OAAO,YAAYC,MAAM,EAAE,CAAC;MAC7DQ,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;MAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;MACZP,IAAI,CAACQ,MAAM,CAAC,CAAC;MACbZ,MAAM,CAACC,GAAG,CAACY,eAAe,CAACd,GAAG,CAAC;MAE/BlC,eAAe,CAAC;QACdiD,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,0CAA0ClB,MAAM,CAACmB,WAAW,CAAC,CAAC;MACzE,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOvB,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C5B,eAAe,CAAC;QACdiD,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAME,eAAe,GAAG,MAAOtB,KAAK,IAAK;IACvC,IAAI;MACF,MAAMhD,GAAG,CAACuE,IAAI,CAAC,SAASvB,KAAK,SAAS,CAAC;MACvCb,SAAS,CAAC,CAAC,CAAC,CAAC;;MAEb;MACAkB,MAAM,CAACmB,aAAa,CAAC,IAAIC,WAAW,CAAC,aAAa,EAAE;QAClDC,MAAM,EAAE;UAAEC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;UAAEC,MAAM,EAAE,eAAe;UAAE9B;QAAM;MAClE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CiC,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF,CAAC;EAED,MAAMC,cAAc,GAAG,MAAOhC,KAAK,IAAK;IACtC,IAAI;MACF,MAAMhD,GAAG,CAACuE,IAAI,CAAC,SAASvB,KAAK,QAAQ,CAAC;MACtCb,SAAS,CAAC,CAAC,CAAC,CAAC;;MAEb;MACAkB,MAAM,CAACmB,aAAa,CAAC,IAAIC,WAAW,CAAC,aAAa,EAAE;QAClDC,MAAM,EAAE;UAAEC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;UAAEC,MAAM,EAAE,YAAY;UAAE9B;QAAM;MAC/D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CiC,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,MAAME,eAAe,GAAG,MAAOjC,KAAK,IAAK;IACvC,IAAI;MACF,MAAMhD,GAAG,CAACuE,IAAI,CAAC,SAASvB,KAAK,SAAS,CAAC;MACvCb,SAAS,CAAC,CAAC,CAAC,CAAC;;MAEb;MACAkB,MAAM,CAACmB,aAAa,CAAC,IAAIC,WAAW,CAAC,aAAa,EAAE;QAClDC,MAAM,EAAE;UAAEC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;UAAEC,MAAM,EAAE,aAAa;UAAE9B;QAAM;MAChE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CiC,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF,CAAC;EAED,MAAMG,cAAc,GAAIC,MAAM,IAAK;IACjC,MAAMC,UAAU,GAAGvD,YAAY,CAACsD,MAAM,CAAC,IAAI,2BAA2B;IACtE,oBACEjF,OAAA;MAAMmF,SAAS,EAAE,2EAA2ED,UAAU,EAAG;MAAAE,QAAA,EACtGH,MAAM,CAACI,MAAM,CAAC,CAAC,CAAC,CAAClB,WAAW,CAAC,CAAC,GAAGc,MAAM,CAACK,KAAK,CAAC,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAEX,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;EACE,MAAMC,eAAe,GAAIC,OAAO,IAAK;IACnC;IACA,MAAMC,WAAW,GAAGD,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,GAAGA,OAAO,CAACE,IAAI,CAAC,CAAC,GAAG,EAAE;;IAEhF;IACA,MAAMC,cAAc,GAAGF,WAAW,IAAI,SAAS;;IAE/C;IACA,MAAMX,UAAU,GAAGhE,aAAa,CAAC6E,cAAc,CAAC,IAAI,2BAA2B;;IAE/E;IACA,IAAIC,WAAW;IACf,IAAID,cAAc,KAAK,iBAAiB,EAAE;MACxCC,WAAW,GAAG,iBAAiB;IACjC,CAAC,MAAM,IAAID,cAAc,KAAK,SAAS,EAAE;MACvCC,WAAW,GAAG,SAAS;IACzB,CAAC,MAAM;MACL;MACAA,WAAW,GAAGD,cAAc,CAACE,MAAM,GAAG,CAAC,GACnCF,cAAc,CAACV,MAAM,CAAC,CAAC,CAAC,CAAClB,WAAW,CAAC,CAAC,GAAG4B,cAAc,CAACT,KAAK,CAAC,CAAC,CAAC,GAChE,KAAK;IACX;IAEA,oBACEtF,OAAA;MAAMmF,SAAS,EAAE,2EAA2ED,UAAU,EAAG;MAAAE,QAAA,EACtGY;IAAW;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAEX,CAAC;EAED,MAAMQ,YAAY,GAAGzF,IAAI,CAACI,MAAM,CAACsF,GAAG,IAAI;IACtC,IAAItF,MAAM,KAAK,KAAK,EAAE,OAAO,IAAI;IACjC,OAAOsF,GAAG,CAAClB,MAAM,KAAKpE,MAAM;EAC9B,CAAC,CAAC;EAEF,MAAMuF,eAAe,GAAG,MAAOC,OAAO,IAAK;IACzC,IAAI;MAAA,IAAAC,SAAA,EAAAC,UAAA,EAAAC,UAAA,EAAAC,UAAA;MACF,IAAIpE,QAAQ;;MAEZ;MACA,IAAIgE,OAAO,CAACK,IAAI,EAAE;QAAA,IAAAC,aAAA;QAChB;QACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAET,OAAO,CAACK,IAAI,CAAC;QACrC;QACAE,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAET,OAAO,CAACT,OAAO,CAAC,CAAC,CAAW;QACpDgB,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAET,OAAO,CAACtD,OAAO,IAAIsD,OAAO,CAACU,WAAW,CAAC,CAAC,CAAC;QAClEH,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAET,OAAO,CAACW,QAAQ,IAAI,GAAG,CAAC;QACtDJ,QAAQ,CAACE,MAAM,CAAC,sBAAsB,EAAET,OAAO,CAACY,oBAAoB,IAAI,UAAU,CAAC;;QAEnF;QACA,IAAIZ,OAAO,CAACa,IAAI,IAAIb,OAAO,CAACa,IAAI,CAACjB,MAAM,GAAG,CAAC,EAAE;UAC3CW,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAET,OAAO,CAACa,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClD;QAEA5E,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;QACnCD,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE6D,OAAO,CAACT,OAAO,CAAC;QACzCrD,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE6D,OAAO,CAACtD,OAAO,IAAIsD,OAAO,CAACU,WAAW,CAAC;QACjExE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE6D,OAAO,CAACK,IAAI,CAACU,IAAI,CAAC;QAC3C7E,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,EAAAmE,aAAA,GAAAN,OAAO,CAACa,IAAI,cAAAP,aAAA,uBAAZA,aAAA,CAAcV,MAAM,KAAI,CAAC,CAAC;;QAEzD;QACA,IAAII,OAAO,CAACgB,kBAAkB,IAAIhB,OAAO,CAACgB,kBAAkB,CAACpB,MAAM,GAAG,CAAC,EAAE;UACvEI,OAAO,CAACgB,kBAAkB,CAACC,OAAO,CAAC,CAACC,SAAS,EAAEC,KAAK,KAAK;YACvDZ,QAAQ,CAACE,MAAM,CAAC,sBAAsBU,KAAK,GAAG,EAAED,SAAS,CAAC;UAC5D,CAAC,CAAC;UACFhF,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE6D,OAAO,CAACgB,kBAAkB,CAAC;QACpE;;QAEA;QACAhF,QAAQ,GAAG,MAAMvC,GAAG,CAACuE,IAAI,CAAC,WAAW,EAAEuC,QAAQ,EAAE;UAC/Ca,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACL;QACA;QACA,MAAMC,OAAO,GAAG;UACdzD,IAAI,EAAEoC,OAAO,CAACT,OAAO;UAAqB;UAC1C+B,KAAK,EAAEtB,OAAO,CAACtD,OAAO,IAAIsD,OAAO,CAACU,WAAW;UAAE;UAC/Ca,UAAU,EAAEvB,OAAO,CAACW,QAAQ,IAAI,GAAG;UAAO;UAC1CE,IAAI,EAAEb,OAAO,CAACa,IAAI,IAAI,EAAE;UAAkB;UAC1CD,oBAAoB,EAAEZ,OAAO,CAACY,oBAAoB,IAAI,UAAU;UAChEI,kBAAkB,EAAEhB,OAAO,CAACgB,kBAAkB,IAAI,EAAE;UACpDQ,aAAa,EAAE;YACbjC,OAAO,EAAES,OAAO,CAACT,OAAO;YAAgB;YACxC7C,OAAO,EAAEsD,OAAO,CAACtD,OAAO;YAAgB;YACxCgE,WAAW,EAAEV,OAAO,CAACU,WAAW,CAAQ;UAC1C;QACF,CAAC;QAEDxE,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClCD,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEkF,OAAO,CAACzD,IAAI,CAAC;QACtC1B,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEkF,OAAO,CAACC,KAAK,CAAC;QACxCpF,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEkF,OAAO,CAACE,UAAU,CAAC;QAClDrF,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEkF,OAAO,CAACR,IAAI,CAACjB,MAAM,CAAC;QACnD1D,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEkF,OAAO,CAACR,IAAI,CAAC5B,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACzD/C,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEkF,OAAO,CAACT,oBAAoB,CAAC;QACtE1E,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEkF,OAAO,CAACL,kBAAkB,CAAC;QAElE9E,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEkF,OAAO,CAAC;QAEtDrF,QAAQ,GAAG,MAAMvC,GAAG,CAACuE,IAAI,CAAC,WAAW,EAAEqD,OAAO,CAAC;MACjD;;MAEA;MACAnF,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,QAAQ,CAAC;MACjDE,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAA8D,SAAA,GAAEjE,QAAQ,cAAAiE,SAAA,uBAARA,SAAA,CAAUrB,MAAM,CAAC;MACpD1C,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAA+D,UAAA,GAAElE,QAAQ,cAAAkE,UAAA,uBAARA,UAAA,CAAUkB,OAAO,CAAC;MACtDlF,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAAgE,UAAA,GAAEnE,QAAQ,cAAAmE,UAAA,uBAARA,UAAA,CAAU9D,IAAI,CAAC;MAChDH,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE,SAAAiE,UAAA,GAAOpE,QAAQ,cAAAoE,UAAA,uBAARA,UAAA,CAAU/D,IAAI,EAAC;;MAE5D;MACA,IAAI,CAACL,QAAQ,EAAE;QACbE,OAAO,CAACK,KAAK,CAAC,oCAAoC,CAAC;QACnDiC,KAAK,CAAC,+CAA+C,CAAC;QACtD;MACF;;MAEA;MACA;MACA,MAAMpC,MAAM,GAAGJ,QAAQ,CAACK,IAAI,IAAIL,QAAQ;MACxCE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,MAAM,CAAC;MACxCF,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,MAAM,CAACE,OAAO,CAAC;MACjDJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,MAAM,CAAC0D,GAAG,CAAC;MAEzC,IAAI1D,MAAM,IAAIA,MAAM,CAACE,OAAO,KAAK,IAAI,EAAE;QACrC,IAAIF,MAAM,CAAC0D,GAAG,EAAE;UACd5D,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEC,MAAM,CAAC0D,GAAG,CAAC;UACtD,MAAMlE,SAAS,CAAC,CAAC,CAAC,CAAC;UACnB7B,cAAc,CAAC,KAAK,CAAC;;UAErB;UACA,IAAIiG,OAAO,CAACyB,gBAAgB,EAAE;YAC5B,IAAI;cACFvF,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEC,MAAM,CAAC0D,GAAG,CAAC4B,EAAE,CAAC;cAC1D,MAAMC,aAAa,GAAG,MAAMlI,GAAG,CAACuE,IAAI,CAAC,aAAa5B,MAAM,CAAC0D,GAAG,CAAC4B,EAAE,QAAQ,CAAC;cAExE,IAAIC,aAAa,CAACtF,IAAI,IAAIsF,aAAa,CAACtF,IAAI,CAACC,OAAO,EAAE;gBACpD3B,eAAe,CAAC;kBACdiD,IAAI,EAAE,SAAS;kBACfC,OAAO,EAAE,QAAQzB,MAAM,CAAC0D,GAAG,CAACwB,KAAK,IAAIlF,MAAM,CAAC0D,GAAG,CAACiB,IAAI;gBACtD,CAAC,CAAC;cACJ,CAAC,MAAM;gBACLpG,eAAe,CAAC;kBACdiD,IAAI,EAAE,SAAS;kBACfC,OAAO,EAAE,QAAQzB,MAAM,CAAC0D,GAAG,CAACwB,KAAK,IAAIlF,MAAM,CAAC0D,GAAG,CAACiB,IAAI;gBACtD,CAAC,CAAC;cACJ;YACF,CAAC,CAAC,OAAOa,UAAU,EAAE;cACnB1F,OAAO,CAACK,KAAK,CAAC,oCAAoC,EAAEqF,UAAU,CAAC;cAC/DjH,eAAe,CAAC;gBACdiD,IAAI,EAAE,SAAS;gBACfC,OAAO,EAAE,QAAQzB,MAAM,CAAC0D,GAAG,CAACwB,KAAK,IAAIlF,MAAM,CAAC0D,GAAG,CAACiB,IAAI;cACtD,CAAC,CAAC;YACJ;UACF,CAAC,MAAM;YACLpG,eAAe,CAAC;cACdiD,IAAI,EAAE,SAAS;cACfC,OAAO,EAAE,QAAQzB,MAAM,CAAC0D,GAAG,CAACwB,KAAK,IAAIlF,MAAM,CAAC0D,GAAG,CAACiB,IAAI;YACtD,CAAC,CAAC;UACJ;;UAEA;UACAjE,MAAM,CAACmB,aAAa,CAAC,IAAIC,WAAW,CAAC,aAAa,EAAE;YAClDC,MAAM,EAAE;cACNC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;cACrBE,MAAM,EAAE,SAAS;cACjB9B,KAAK,EAAEL,MAAM,CAAC0D,GAAG,CAAC4B;YACpB;UACF,CAAC,CAAC,CAAC;;UAEH;UACA/G,eAAe,CAAC;YACdiD,IAAI,EAAE,SAAS;YACfC,OAAO,EAAE,QAAQzB,MAAM,CAAC0D,GAAG,CAAC+B,QAAQ,wDAAwD;YAC5FC,OAAO,EAAE,WAAW1F,MAAM,CAAC0D,GAAG,CAAC4B,EAAE,YAAYtF,MAAM,CAAC0D,GAAG,CAACiC,QAAQ,YAAY3F,MAAM,CAAC0D,GAAG,CAACkC,UAAU,IAAI,KAAK;UAC5G,CAAC,CAAC;QACJ,CAAC,MAAM;UACL9F,OAAO,CAAC+F,IAAI,CAAC,+BAA+B,EAAE7F,MAAM,CAAC;UACrDzB,eAAe,CAAC;YACdiD,IAAI,EAAE,SAAS;YACfC,OAAO,EAAE,+CAA+C;YACxDiE,OAAO,EAAE;UACX,CAAC,CAAC;QACJ;MACF,CAAC,MAAM;QACL5F,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEH,MAAM,CAAC;QAC/C,MAAM8F,QAAQ,GAAG,CAAA9F,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEG,KAAK,MAAIH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEyB,OAAO,KAAI,eAAe;QACpE,MAAMsE,SAAS,GAAG,CAAA/F,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEgG,IAAI,KAAI,eAAe;QACjD,MAAMC,YAAY,GAAG,CAAAjG,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEkG,QAAQ,MAAIlG,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEmG,UAAU,MAAInG,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEoG,WAAW,KAAI,IAAI;QAE1F7H,eAAe,CAAC;UACdiD,IAAI,EAAE,OAAO;UACbC,OAAO,EAAE,yBAAyBqE,QAAQ,EAAE;UAC5CJ,OAAO,EAAEK,SAAS,KAAK,gBAAgB,GAAG,mDAAmD,GACpFA,SAAS,KAAK,kBAAkB,GAAG,oBAAoBE,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEvB,IAAI,CAAC,IAAI,CAAC,EAAE,GACjFqB,SAAS,KAAK,eAAe,GAAG,qCAAqC,GACrEA,SAAS,KAAK,mBAAmB,GAAG,wCAAwC,GAC5E,eAAeA,SAAS;QACnC,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAO5F,KAAK,EAAE;MAAA,IAAAkG,eAAA,EAAAC,gBAAA;MACdxG,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CL,OAAO,CAACK,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACP,QAAQ,CAAC;MAEhD,MAAM2G,SAAS,IAAAF,eAAA,GAAGlG,KAAK,CAACP,QAAQ,cAAAyG,eAAA,uBAAdA,eAAA,CAAgBpG,IAAI;MACtC,MAAMuG,YAAY,GAAG,CAAAD,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEpG,KAAK,KAAIA,KAAK,CAACsB,OAAO,IAAI,eAAe;MACzE,MAAMsE,SAAS,GAAG,CAAAQ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEP,IAAI,KAAI,eAAe;MACpD,MAAMS,UAAU,IAAAH,gBAAA,GAAGnG,KAAK,CAACP,QAAQ,cAAA0G,gBAAA,uBAAdA,gBAAA,CAAgB9D,MAAM;MAEzCjE,eAAe,CAAC;QACdiD,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE,yBAAyB+E,YAAY,EAAE;QAChDd,OAAO,EAAEe,UAAU,KAAK,GAAG,GAAG,8EAA8E,GACnGA,UAAU,KAAK,GAAG,GAAG,gDAAgD,GACrEA,UAAU,KAAK,GAAG,GAAG,8DAA8D,GACnFA,UAAU,KAAK,GAAG,GAAG,uCAAuC,GAC5D,QAAQA,UAAU,MAAMV,SAAS;MAC5C,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;;EAEA,MAAMW,UAAU,GAAIC,UAAU,IAAK;IACjC,OAAO,IAAI1E,IAAI,CAAC0E,UAAU,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;MACtDC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,OAAO;MACdC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,eAAe,GAAIxD,GAAG,IAAK;IAC/B,IAAIA,GAAG,CAAClC,IAAI,KAAK,QAAQ,EAAE;MACzB,OAAOkC,GAAG,CAACwB,KAAK,IAAIxB,GAAG,CAACY,WAAW,IAAI,cAAc;IACvD;IACA,OAAOZ,GAAG,CAACZ,QAAQ,IAAI,eAAe;EACxC,CAAC;EAED,oBACEvF,OAAA;IAAKmF,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpF,OAAA;MAAKmF,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBACrDpF,OAAA;QAAAoF,QAAA,gBACEpF,OAAA;UAAImF,SAAS,EAAC,kCAAkC;UAAAC,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1D1F,OAAA;UAAGmF,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAC;QAElC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACN1F,OAAA;QAAKmF,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BpF,OAAA;UACE4J,OAAO,EAAEA,CAAA,KAAMxJ,cAAc,CAAC,IAAI,CAAE;UACpC+E,SAAS,EAAC,6GAA6G;UAAAC,QAAA,gBAEvHpF,OAAA,CAACX,QAAQ;YAAC8F,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAChC1F,OAAA;YAAAoF,QAAA,EAAM;UAAO;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC,eACT1F,OAAA;UACG4J,OAAO,EAAEA,CAAA,KAAMtJ,sBAAsB,CAAC,IAAI,CAAE;UAC5C6E,SAAS,EAAC,iHAAiH;UAAAC,QAAA,gBAE3HpF,OAAA,CAACP,mBAAmB;YAAC0F,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC3C1F,OAAA;YAAAoF,QAAA,EAAM;UAAW;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACT1F,OAAA;UACE4J,OAAO,EAAEA,CAAA,KAAMpJ,uBAAuB,CAAC,IAAI,CAAE;UAC7C2E,SAAS,EAAC,iHAAiH;UAAAC,QAAA,gBAE3HpF,OAAA,CAACP,mBAAmB;YAAC0F,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC3C1F,OAAA;YAAAoF,QAAA,EAAM;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN1F,OAAA;MAAKmF,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnBpF,OAAA;QAAKmF,SAAS,EAAC,iDAAiD;QAAAC,QAAA,EAC7D,CACC;UAAEyE,GAAG,EAAE,KAAK;UAAEC,KAAK,EAAE;QAAW,CAAC,EACjC;UAAED,GAAG,EAAE,SAAS;UAAEC,KAAK,EAAE;QAAU,CAAC,EACpC;UAAED,GAAG,EAAE,SAAS;UAAEC,KAAK,EAAE;QAAU,CAAC,EACpC;UAAED,GAAG,EAAE,QAAQ;UAAEC,KAAK,EAAE;QAAS,CAAC,CACnC,CAACC,GAAG,CAAEC,GAAG,iBACRhK,OAAA;UAEE4J,OAAO,EAAEA,CAAA,KAAM9I,SAAS,CAACkJ,GAAG,CAACH,GAAG,CAAE;UAClC1E,SAAS,EAAE,8DACTtE,MAAM,KAAKmJ,GAAG,CAACH,GAAG,GACd,kCAAkC,GAClC,mCAAmC,EACtC;UAAAzE,QAAA,EAEF4E,GAAG,CAACF;QAAK,GARLE,GAAG,CAACH,GAAG;UAAAtE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASN,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN1F,OAAA;MAAKmF,SAAS,EAAC,4CAA4C;MAAAC,QAAA,EACxDzE,OAAO,gBACNX,OAAA;QAAKmF,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BpF,OAAA;UAAKmF,SAAS,EAAC;QAAsE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC5F1F,OAAA;UAAGmF,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAC;QAAe;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,GACJQ,YAAY,CAACD,MAAM,KAAK,CAAC,gBAC3BjG,OAAA;QAAKmF,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BpF,OAAA;UAAGmF,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAC9BvE,MAAM,KAAK,KAAK,GAAG,sBAAsB,GAAG,MAAMA,MAAM;QAAc;UAAA0E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtE,CAAC,eACJ1F,OAAA;UACE4J,OAAO,EAAEA,CAAA,KAAMxJ,cAAc,CAAC,IAAI,CAAE;UACpC+E,SAAS,EAAC,iFAAiF;UAAAC,QAAA,EAC5F;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,gBAEN1F,OAAA;QAAKmF,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BpF,OAAA;UAAOmF,SAAS,EAAC,qCAAqC;UAAAC,QAAA,gBACpDpF,OAAA;YAAOmF,SAAS,EAAC,YAAY;YAAAC,QAAA,eAC3BpF,OAAA;cAAAoF,QAAA,gBACEpF,OAAA;gBAAImF,SAAS,EAAC,gFAAgF;gBAAAC,QAAA,EAAC;cAE/F;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACL1F,OAAA;gBAAImF,SAAS,EAAC,gFAAgF;gBAAAC,QAAA,EAAC;cAE/F;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACL1F,OAAA;gBAAImF,SAAS,EAAC,gFAAgF;gBAAAC,QAAA,EAAC;cAE/F;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACL1F,OAAA;gBAAImF,SAAS,EAAC,gFAAgF;gBAAAC,QAAA,EAAC;cAE/F;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACL1F,OAAA;gBAAImF,SAAS,EAAC,gFAAgF;gBAAAC,QAAA,EAAC;cAE/F;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACL1F,OAAA;gBAAImF,SAAS,EAAC,gFAAgF;gBAAAC,QAAA,EAAC;cAE/F;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACL1F,OAAA;gBAAImF,SAAS,EAAC,gFAAgF;gBAAAC,QAAA,EAAC;cAE/F;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACR1F,OAAA;YAAOmF,SAAS,EAAC,mCAAmC;YAAAC,QAAA,EACjD6E,KAAK,CAACC,OAAO,CAAChE,YAAY,CAAC,IAAIA,YAAY,CAACD,MAAM,GAAG,CAAC,GACrDC,YAAY,CAAC6D,GAAG,CAAE5D,GAAG,IAAK;cAAA,IAAAgE,kBAAA,EAAAC,mBAAA,EAAAC,aAAA,EAAAC,cAAA;cACxB;cACA,IAAI,CAACnE,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;gBACnC5D,OAAO,CAAC+F,IAAI,CAAC,qBAAqB,EAAEnC,GAAG,CAAC;gBACxC,OAAO,IAAI;cACb;cAEA,MAAMrD,KAAK,GAAGqD,GAAG,CAAC4B,EAAE,IAAI,WAAWwC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;cAC5E,MAAMC,QAAQ,GAAGxE,GAAG,CAACwB,KAAK,IAAIxB,GAAG,CAAC+B,QAAQ,IAAI,OAAOpF,KAAK,CAAC2H,QAAQ,CAAC,CAAC,CAACnF,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;cAEnF,oBACEtF,OAAA;gBAAgBmF,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,gBAC1CpF,OAAA;kBAAImF,SAAS,EAAC,6BAA6B;kBAAAC,QAAA,eACzCpF,OAAA;oBAAKmF,SAAS,EAAC,mCAAmC;oBAAAC,QAAA,EAC/CuF;kBAAQ;oBAAApF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACN;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACL1F,OAAA;kBAAImF,SAAS,EAAC,6BAA6B;kBAAAC,QAAA,EACxCO,eAAe,CAACQ,GAAG,CAAClC,IAAI,IAAIkC,GAAG,CAACiC,QAAQ;gBAAC;kBAAA7C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxC,CAAC,eACT1F,OAAA;kBAAImF,SAAS,EAAC,6BAA6B;kBAAAC,QAAA,eACzCpF,OAAA;oBAAKmF,SAAS,EAAC,yCAAyC;oBAAAC,QAAA,EACrDe,GAAG,CAAClC,IAAI,KAAK,iBAAiB,GAC5B,EAAAkG,kBAAA,GAAAhE,GAAG,CAAC0B,aAAa,cAAAsC,kBAAA,uBAAjBA,kBAAA,CAAmBpD,WAAW,KAAIZ,GAAG,CAACwB,KAAK,IAAI,cAAc,GAC9D,GAAG,CAAC,EAAAyC,mBAAA,GAAAjE,GAAG,CAAC0B,aAAa,cAAAuC,mBAAA,uBAAjBA,mBAAA,CAAmBlD,IAAI,KAAI,EAAE,EAAEjB,MAAM;kBAAO;oBAAAV,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAE/C;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACL1F,OAAA;kBAAImF,SAAS,EAAC,6BAA6B;kBAAAC,QAAA,EACxCJ,cAAc,CAACmB,GAAG,CAAClB,MAAM;gBAAC;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzB,CAAC,eACL1F,OAAA;kBAAImF,SAAS,EAAC,6BAA6B;kBAAAC,QAAA,eACzCpF,OAAA;oBAAKmF,SAAS,EAAC,mBAAmB;oBAAAC,QAAA,gBAChCpF,OAAA;sBAAKmF,SAAS,EAAC,wCAAwC;sBAAAC,QAAA,eACrDpF,OAAA;wBACEmF,SAAS,EAAC,yDAAyD;wBACnEyF,KAAK,EAAE;0BAAEC,KAAK,EAAE,GAAG,EAAAR,aAAA,GAAAlE,GAAG,CAAC2E,QAAQ,cAAAT,aAAA,uBAAZA,aAAA,CAAcU,UAAU,KAAI,CAAC;wBAAI;sBAAE;wBAAAxF,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAClD;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACJ,CAAC,eACN1F,OAAA;sBAAMmF,SAAS,EAAC,uBAAuB;sBAAAC,QAAA,GAAE,EAAAkF,cAAA,GAAAnE,GAAG,CAAC2E,QAAQ,cAAAR,cAAA,uBAAZA,cAAA,CAAcS,UAAU,KAAI,CAAC,EAAC,GAAC;oBAAA;sBAAAxF,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,EAC9ES,GAAG,CAAC2E,QAAQ,IAAI3E,GAAG,CAAC2E,QAAQ,CAACE,SAAS,GAAG,CAAC,iBACzChL,OAAA;sBAAMmF,SAAS,EAAC,4BAA4B;sBAAAC,QAAA,GAAC,GAC1C,EAACe,GAAG,CAAC2E,QAAQ,CAACG,UAAU,IAAI,CAAC,EAAC,GAAC,EAAC9E,GAAG,CAAC2E,QAAQ,CAACE,SAAS,IAAI,CAAC,EAAC,GAC/D;oBAAA;sBAAAzF,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CACP;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACL1F,OAAA;kBAAImF,SAAS,EAAC,mDAAmD;kBAAAC,QAAA,EAC9D+D,UAAU,CAAChD,GAAG,CAAC+E,UAAU;gBAAC;kBAAA3F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzB,CAAC,eACL1F,OAAA;kBAAImF,SAAS,EAAC,iDAAiD;kBAAAC,QAAA,eAC7DpF,OAAA;oBAAKmF,SAAS,EAAC,gBAAgB;oBAAAC,QAAA,gBAC7BpF,OAAA;sBACE4J,OAAO,EAAEA,CAAA,KAAMzG,MAAM,CAACgI,IAAI,CAAC,SAAShF,GAAG,CAAC4B,EAAE,EAAE,EAAE,QAAQ,CAAE;sBACxD5C,SAAS,EAAC,mDAAmD;sBAC7DiG,KAAK,EAAC,cAAc;sBAAAhG,QAAA,eAEpBpF,OAAA,CAACV,OAAO;wBAAC6F,SAAS,EAAC;sBAAS;wBAAAI,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACzB,CAAC,EACRS,GAAG,CAAClB,MAAM,KAAK,WAAW,KAAKkB,GAAG,CAACkF,YAAY,GAAG,CAAC,IAAIlF,GAAG,CAACmF,YAAY,GAAG,CAAC,CAAC,iBAC3EtL,OAAA;sBACE4J,OAAO,EAAEA,CAAA,KAAM/G,eAAe,CAACsD,GAAG,CAAC4B,EAAE,EAAE5B,GAAG,CAACwB,KAAK,IAAIxB,GAAG,CAAC+B,QAAQ,CAAE;sBAClE/C,SAAS,EAAC,uDAAuD;sBACjEiG,KAAK,EAAC,kBAAkB;sBAAAhG,QAAA,eAExBpF,OAAA,CAACT,iBAAiB;wBAAC4F,SAAS,EAAC;sBAAS;wBAAAI,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACnC,CACT,EACAS,GAAG,CAAClB,MAAM,KAAK,SAAS,iBACvBjF,OAAA;sBACE4J,OAAO,EAAEA,CAAA,KAAM9E,cAAc,CAACqB,GAAG,CAAC4B,EAAE,CAAE;sBACtC5C,SAAS,EAAC,yDAAyD;sBACnEiG,KAAK,EAAC,WAAW;sBAAAhG,QAAA,eAEjBpF,OAAA;wBAAKmF,SAAS,EAAC,SAAS;wBAACoG,IAAI,EAAC,MAAM;wBAACC,OAAO,EAAC,WAAW;wBAACC,MAAM,EAAC,cAAc;wBAAArG,QAAA,eAC5EpF,OAAA;0BAAM0L,aAAa,EAAC,OAAO;0BAACC,cAAc,EAAC,OAAO;0BAACC,WAAW,EAAE,CAAE;0BAACC,CAAC,EAAC;wBAA+C;0BAAAtG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAE;sBAAC;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACpH;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACA,CACT,EACAS,GAAG,CAAClB,MAAM,KAAK,QAAQ,iBACtBjF,OAAA;sBACE4J,OAAO,EAAEA,CAAA,KAAM7E,eAAe,CAACoB,GAAG,CAAC4B,EAAE,CAAE;sBACvC5C,SAAS,EAAC,qDAAqD;sBAC/DiG,KAAK,EAAC,YAAY;sBAAAhG,QAAA,eAElBpF,OAAA;wBAAKmF,SAAS,EAAC,SAAS;wBAACoG,IAAI,EAAC,MAAM;wBAACC,OAAO,EAAC,WAAW;wBAACC,MAAM,EAAC,cAAc;wBAAArG,QAAA,eAC5EpF,OAAA;0BAAM0L,aAAa,EAAC,OAAO;0BAACC,cAAc,EAAC,OAAO;0BAACC,WAAW,EAAE,CAAE;0BAACC,CAAC,EAAC;wBAA0I;0BAAAtG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAE;sBAAC;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC/M;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACA,CACT,EACA,CAACS,GAAG,CAAClB,MAAM,KAAK,SAAS,IAAIkB,GAAG,CAAClB,MAAM,KAAK,SAAS,kBACpDjF,OAAA;sBACE4J,OAAO,EAAEA,CAAA,KAAMxF,eAAe,CAAC+B,GAAG,CAAC4B,EAAE,CAAE;sBACvC5C,SAAS,EAAC,qDAAqD;sBAC/DiG,KAAK,EAAC,YAAY;sBAAAhG,QAAA,eAElBpF,OAAA;wBAAKmF,SAAS,EAAC,SAAS;wBAACoG,IAAI,EAAC,MAAM;wBAACC,OAAO,EAAC,WAAW;wBAACC,MAAM,EAAC,cAAc;wBAAArG,QAAA,eAC5EpF,OAAA;0BAAM0L,aAAa,EAAC,OAAO;0BAACC,cAAc,EAAC,OAAO;0BAACC,WAAW,EAAE,CAAE;0BAACC,CAAC,EAAC;wBAAsB;0BAAAtG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAE;sBAAC;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC3F;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACA,CACT;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC;cAAA,GA3FM5C,KAAK;gBAAAyC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OA4Fd,CAAC;YAEL,CAAC,CAAC,CAAC7E,MAAM,CAACiL,OAAO,CAAC,CAAC;YAAA,eAEnB9L,OAAA;cAAAoF,QAAA,eACEpF,OAAA;gBAAI+L,OAAO,EAAC,GAAG;gBAAC5G,SAAS,EAAC,6CAA6C;gBAAAC,QAAA,EACpEzE,OAAO,GAAG,iBAAiB,GAAG;cAAsD;gBAAA4E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UACL;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAGL3E,YAAY,iBACXf,OAAA;MAAKmF,SAAS,EAAE,8DACdpE,YAAY,CAACkD,IAAI,KAAK,SAAS,GAAG,qDAAqD,GACvFlD,YAAY,CAACkD,IAAI,KAAK,SAAS,GAAG,wDAAwD,GAC1F,+CAA+C,EAC9C;MAAAmB,QAAA,eACDpF,OAAA;QAAKmF,SAAS,EAAC,kCAAkC;QAAAC,QAAA,gBAC/CpF,OAAA;UAAKmF,SAAS,EAAC,QAAQ;UAAAC,QAAA,gBACrBpF,OAAA;YAAKmF,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAErE,YAAY,CAACmD;UAAO;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EACxD3E,YAAY,CAACoH,OAAO,iBACnBnI,OAAA;YAAKmF,SAAS,EAAC,yBAAyB;YAAAC,QAAA,EAAErE,YAAY,CAACoH;UAAO;YAAA5C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CACrE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACN1F,OAAA;UACE4J,OAAO,EAAEA,CAAA,KAAM5I,eAAe,CAAC,IAAI,CAAE;UACrCmE,SAAS,EAAC,wCAAwC;UAAAC,QAAA,EACnD;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAGD1F,OAAA,CAACN,WAAW;MACVsM,MAAM,EAAE7L,WAAY;MACpB8L,OAAO,EAAEA,CAAA,KAAM7L,cAAc,CAAC,KAAK,CAAE;MACrC8L,QAAQ,EAAE9F;IAAgB;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,EAGDrF,mBAAmB,iBAClBL,OAAA,CAACL,gBAAgB;MACfwM,gBAAgB,EAAG1J,MAAM,IAAK;QAC5BF,OAAO,CAACC,GAAG,CAAC,4BAA4BC,MAAM,CAACK,KAAK,EAAE,CAAC;QACvDb,SAAS,CAAC,CAAC,CAAC,CAAC;QACb3B,sBAAsB,CAAC,KAAK,CAAC;MAC/B,CAAE;MACF2L,OAAO,EAAEA,CAAA,KAAM3L,sBAAsB,CAAC,KAAK;IAAE;MAAAiF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CACF,EAGAnF,oBAAoB,iBACnBP,OAAA,CAACJ,iBAAiB;MAChBuM,gBAAgB,EAAG1J,MAAM,IAAK;QAC5BF,OAAO,CAACC,GAAG,CAAC,6BAA6BC,MAAM,CAACK,KAAK,EAAE,CAAC;QACxDb,SAAS,CAAC,CAAC,CAAC,CAAC;QACbzB,uBAAuB,CAAC,KAAK,CAAC;MAChC,CAAE;MACFyL,OAAO,EAAEA,CAAA,KAAMzL,uBAAuB,CAAC,KAAK;IAAE;MAAA+E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxF,EAAA,CA5qBID,IAAI;EAAA,QAQSJ,OAAO;AAAA;AAAAuM,EAAA,GARpBnM,IAAI;AA8qBV,eAAeA,IAAI;AAAC,IAAAmM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}