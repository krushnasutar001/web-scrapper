{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krush\\\\OneDrive\\\\Desktop\\\\Final\\\\linkedin-automation-saas\\\\frontend\\\\src\\\\pages\\\\Jobs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PlusIcon, EyeIcon, ArrowDownTrayIcon, FunnelIcon, DocumentArrowUpIcon } from '@heroicons/react/24/outline';\nimport NewJobModal from '../components/Jobs/NewJobModal';\nimport BulkSearchUpload from '../components/ExcelUpload/BulkSearchUpload';\nimport BulkCompanyUpload from '../components/ExcelUpload/BulkCompanyUpload';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Jobs = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [showBulkSearchModal, setShowBulkSearchModal] = useState(false);\n  const [showBulkCompanyModal, setShowBulkCompanyModal] = useState(false);\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all');\n  const [notification, setNotification] = useState(null);\n  const {\n    user\n  } = useAuth();\n  const jobTypeColors = {\n    profile: 'bg-blue-100 text-blue-800',\n    company: 'bg-green-100 text-green-800',\n    search: 'bg-purple-100 text-purple-800',\n    profile_scraping: 'bg-blue-100 text-blue-800',\n    company_scraping: 'bg-green-100 text-green-800',\n    search_result_scraping: 'bg-purple-100 text-purple-800',\n    sales_navigator: 'bg-indigo-100 text-indigo-800',\n    unknown: 'bg-gray-100 text-gray-800'\n  };\n  const statusColors = {\n    queued: 'bg-yellow-100 text-yellow-800',\n    running: 'bg-blue-100 text-blue-800',\n    completed: 'bg-green-100 text-green-800',\n    failed: 'bg-red-100 text-red-800',\n    cancelled: 'bg-gray-100 text-gray-800'\n  };\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n\n  // Auto-dismiss notification after 5 seconds\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n  const fetchJobs = async () => {\n    try {\n      setLoading(true);\n      const response = await api.get('/api/jobs');\n      console.log('📦 Raw jobs response:', response);\n\n      // Support both Axios-style (response.data) and raw JSON (response)\n      const result = response.data || response;\n      console.log('📦 Parsed jobs result:', result);\n      if (result && result.success) {\n        setJobs(result.jobs || []);\n        console.log('✅ Jobs loaded:', result.jobs);\n      } else {\n        console.error('❌ Unexpected jobs response format:', result);\n        setJobs([]);\n      }\n    } catch (error) {\n      console.error('❌ Error fetching jobs:', error);\n      setJobs([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleExportJob = async (jobId, jobName, format = 'csv') => {\n    try {\n      const response = await api.get(`/api/jobs/${jobId}/download/${format}`, {\n        responseType: 'blob'\n      });\n\n      // Create download link\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `${jobName}_results.${format}`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      window.URL.revokeObjectURL(url);\n      setNotification({\n        type: 'success',\n        message: `Job results downloaded successfully as ${format.toUpperCase()}`\n      });\n    } catch (error) {\n      console.error('Failed to export job:', error);\n      setNotification({\n        type: 'error',\n        message: 'Failed to download job results. Please try again.'\n      });\n    }\n  };\n  const handleCancelJob = async jobId => {\n    try {\n      await api.post(`/api/jobs/${jobId}/cancel`);\n      fetchJobs(); // Refresh the job list\n    } catch (error) {\n      console.error('Failed to cancel job:', error);\n      alert('Failed to cancel job');\n    }\n  };\n  const handlePauseJob = async jobId => {\n    try {\n      await api.post(`/api/jobs/${jobId}/pause`);\n      fetchJobs(); // Refresh the job list\n    } catch (error) {\n      console.error('Failed to pause job:', error);\n      alert('Failed to pause job');\n    }\n  };\n  const handleResumeJob = async jobId => {\n    try {\n      await api.post(`/api/jobs/${jobId}/resume`);\n      fetchJobs(); // Refresh the job list\n    } catch (error) {\n      console.error('Failed to resume job:', error);\n      alert('Failed to resume job');\n    }\n  };\n  const getStatusBadge = status => {\n    const colorClass = statusColors[status] || 'bg-gray-100 text-gray-800';\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${colorClass}`,\n      children: status.charAt(0).toUpperCase() + status.slice(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  };\n\n  /**\n   * Safely renders a job type badge with proper null checks\n   * Handles cases where jobType is undefined, null, or empty string\n   * @param {string|undefined|null} jobType - The job type to display\n   * @returns {JSX.Element} A styled badge component\n   */\n  const getJobTypeBadge = jobType => {\n    // Safely handle undefined, null, or empty jobType\n    const safeJobType = jobType && typeof jobType === 'string' ? jobType.trim() : '';\n\n    // Use fallback if jobType is invalid\n    const normalizedType = safeJobType || 'unknown';\n\n    // Get color class with fallback\n    const colorClass = jobTypeColors[normalizedType] || 'bg-gray-100 text-gray-800';\n\n    // Safely create display name with proper checks\n    let displayName;\n    if (normalizedType === 'sales_navigator') {\n      displayName = 'Sales Navigator';\n    } else if (normalizedType === 'unknown') {\n      displayName = 'Unknown';\n    } else {\n      // Safe string manipulation with charAt check\n      displayName = normalizedType.length > 0 ? normalizedType.charAt(0).toUpperCase() + normalizedType.slice(1) : 'N/A';\n    }\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${colorClass}`,\n      children: displayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this);\n  };\n  const filteredJobs = jobs.filter(job => {\n    if (filter === 'all') return true;\n    return job.status === filter;\n  });\n  const handleCreateJob = async jobData => {\n    try {\n      var _response, _response2, _response3, _response4;\n      let response;\n\n      // Check if file upload is being used\n      if (jobData.file) {\n        var _jobData$urls;\n        // Use FormData for file uploads\n        const formData = new FormData();\n        formData.append('file', jobData.file);\n        // Map to backend expected field names\n        formData.append('type', jobData.jobType); // Backend expects 'type'\n        formData.append('query', jobData.jobName || jobData.searchQuery); // Backend expects 'query'\n        formData.append('maxResults', jobData.maxPages || 100);\n        formData.append('accountSelectionMode', jobData.accountSelectionMode || 'rotation');\n\n        // Add URLs if provided (for mixed input)\n        if (jobData.urls && jobData.urls.length > 0) {\n          formData.append('urls', jobData.urls.join('\\n'));\n        }\n        console.log('🚀 FormData details:');\n        console.log('  - type:', jobData.jobType);\n        console.log('  - query:', jobData.jobName || jobData.searchQuery);\n        console.log('  - file:', jobData.file.name);\n        console.log('  - urls count:', ((_jobData$urls = jobData.urls) === null || _jobData$urls === void 0 ? void 0 : _jobData$urls.length) || 0);\n\n        // Add selected account IDs\n        if (jobData.selectedAccountIds && jobData.selectedAccountIds.length > 0) {\n          jobData.selectedAccountIds.forEach((accountId, index) => {\n            formData.append(`selectedAccountIds[${index}]`, accountId);\n          });\n          console.log('  - selectedAccountIds:', jobData.selectedAccountIds);\n        }\n\n        // Send FormData with proper headers\n        response = await api.post('/api/jobs', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } else {\n        // Use JSON for manual URL input (no file)\n        // Map frontend fields to backend expected fields\n        const payload = {\n          type: jobData.jobType,\n          // Backend expects 'type'\n          query: jobData.jobName || jobData.searchQuery,\n          // Backend expects 'query'\n          maxResults: jobData.maxPages || 100,\n          // Backend expects 'maxResults'\n          urls: jobData.urls || [],\n          // Backend expects 'urls' as direct field\n          accountSelectionMode: jobData.accountSelectionMode || 'rotation',\n          selectedAccountIds: jobData.selectedAccountIds || [],\n          configuration: {\n            jobType: jobData.jobType,\n            // Keep original for reference\n            jobName: jobData.jobName,\n            // Keep original for reference\n            searchQuery: jobData.searchQuery // Keep search query for reference\n          }\n        };\n        console.log('🚀 Payload details:');\n        console.log('  - type:', payload.type);\n        console.log('  - query:', payload.query);\n        console.log('  - maxResults:', payload.maxResults);\n        console.log('  - urls count:', payload.urls.length);\n        console.log('  - urls sample:', payload.urls.slice(0, 3));\n        console.log('  - accountSelectionMode:', payload.accountSelectionMode);\n        console.log('  - selectedAccountIds:', payload.selectedAccountIds);\n        console.log('🚀 Sending payload to backend:', payload);\n        response = await api.post('/api/jobs', payload);\n      }\n\n      // Enhanced debugging for response structure\n      console.log('🔍 Full response object:', response);\n      console.log('🔍 Response status:', (_response = response) === null || _response === void 0 ? void 0 : _response.status);\n      console.log('🔍 Response headers:', (_response2 = response) === null || _response2 === void 0 ? void 0 : _response2.headers);\n      console.log('🔍 Response data:', (_response3 = response) === null || _response3 === void 0 ? void 0 : _response3.data);\n      console.log('🔍 Response data type:', typeof ((_response4 = response) === null || _response4 === void 0 ? void 0 : _response4.data));\n\n      // Check if response exists\n      if (!response) {\n        console.error('❌ No response received from server');\n        alert('Failed to create job: No response from server');\n        return;\n      }\n\n      // Handle both Axios-style (response.data) and raw JSON responses\n      // Some libraries put payload inside response.data, others send raw JSON\n      const result = response.data || response;\n      console.log('🔍 Parsed result:', result);\n      console.log('🔍 Result success:', result.success);\n      console.log('🔍 Result job:', result.job);\n      if (result && result.success === true) {\n        if (result.job) {\n          console.log('✅ Job created successfully:', result.job);\n          await fetchJobs(); // Refresh jobs list\n          setIsModalOpen(false);\n          // Show success notification (you can replace this with a toast notification)\n          setNotification({\n            type: 'success',\n            message: `Job \"${result.job.job_name}\" created successfully! Processing will begin shortly.`,\n            details: `Job ID: ${result.job.id} | Type: ${result.job.job_type} | URLs: ${result.job.total_urls || 'N/A'}`\n          });\n        } else {\n          console.warn('⚠️ Success but no job object:', result);\n          setNotification({\n            type: 'warning',\n            message: 'Job created but response format is unexpected',\n            details: 'The job may have been created successfully, but we received an unexpected response format.'\n          });\n        }\n      } else {\n        console.error('❌ Job creation failed:', result);\n        const errorMsg = (result === null || result === void 0 ? void 0 : result.error) || (result === null || result === void 0 ? void 0 : result.message) || 'Unknown error';\n        const errorCode = (result === null || result === void 0 ? void 0 : result.code) || 'UNKNOWN_ERROR';\n        const errorDetails = (result === null || result === void 0 ? void 0 : result.received) || (result === null || result === void 0 ? void 0 : result.validTypes) || (result === null || result === void 0 ? void 0 : result.invalidUrls) || null;\n        setNotification({\n          type: 'error',\n          message: `Failed to create job: ${errorMsg}`,\n          details: errorCode === 'MISSING_FIELDS' ? 'Please ensure all required fields are filled out.' : errorCode === 'INVALID_JOB_TYPE' ? `Valid job types: ${errorDetails === null || errorDetails === void 0 ? void 0 : errorDetails.join(', ')}` : errorCode === 'NO_VALID_URLS' ? 'Please provide valid LinkedIn URLs.' : errorCode === 'NO_VALID_ACCOUNTS' ? 'Please select valid LinkedIn accounts.' : `Error code: ${errorCode}`\n        });\n      }\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('Failed to create job:', error);\n      console.error('Error response:', error.response);\n      const errorData = (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data;\n      const errorMessage = (errorData === null || errorData === void 0 ? void 0 : errorData.error) || error.message || 'Unknown error';\n      const errorCode = (errorData === null || errorData === void 0 ? void 0 : errorData.code) || 'NETWORK_ERROR';\n      const statusCode = (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status;\n      setNotification({\n        type: 'error',\n        message: `Failed to create job: ${errorMessage}`,\n        details: statusCode === 403 ? 'You do not have permission to create jobs. Please check your authentication.' : statusCode === 401 ? 'Your session has expired. Please log in again.' : statusCode === 400 ? 'Invalid request data. Please check your input and try again.' : statusCode === 500 ? 'Server error. Please try again later.' : `HTTP ${statusCode} - ${errorCode}`\n      });\n    }\n  };\n\n  // Remove duplicate - already defined above\n\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const getQueryDisplay = job => {\n    if (job.type === 'search') {\n      return job.query || job.searchQuery || 'Search query';\n    }\n    return job.fileName || 'Uploaded file';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-900\",\n          children: \"Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-1\",\n          children: \"Manage your scraping jobs and bulk operations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsModalOpen(true),\n          className: \"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlusIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"New Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowBulkSearchModal(true),\n          className: \"bg-purple-500 text-white px-4 py-2 rounded-lg hover:bg-purple-600 transition-colors flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(DocumentArrowUpIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Bulk Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowBulkCompanyModal(true),\n          className: \"bg-orange-500 text-white px-4 py-2 rounded-lg hover:bg-orange-600 transition-colors flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(DocumentArrowUpIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Bulk Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-1 bg-gray-100 p-1 rounded-lg w-fit\",\n        children: [{\n          key: 'all',\n          label: 'All Jobs'\n        }, {\n          key: 'profile',\n          label: 'Profile'\n        }, {\n          key: 'company',\n          label: 'Company'\n        }, {\n          key: 'search',\n          label: 'Search'\n        }].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFilter(tab.key),\n          className: `px-4 py-2 rounded-md text-sm font-medium transition-colors ${filter === tab.key ? 'bg-white text-blue-600 shadow-sm' : 'text-gray-600 hover:text-gray-900'}`,\n          children: tab.label\n        }, tab.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow overflow-hidden\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-2\",\n          children: \"Loading jobs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this) : filteredJobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-4\",\n          children: filter === 'all' ? 'No jobs created yet.' : `No ${filter} jobs found.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsModalOpen(true),\n          className: \"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors\",\n          children: \"Create Your First Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full divide-y divide-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Job Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Query/File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Created\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-white divide-y divide-gray-200\",\n            children: Array.isArray(filteredJobs) && filteredJobs.length > 0 ? filteredJobs.map(job => {\n              var _job$configuration, _job$configuration2, _job$progress, _job$progress2;\n              // Safe job object validation\n              if (!job || typeof job !== 'object') {\n                console.warn('Invalid job object:', job);\n                return null;\n              }\n              const jobId = job.id || `unknown-${Math.random().toString(36).substr(2, 9)}`;\n              const jobQuery = job.query || job.job_name || `Job ${jobId.toString().slice(0, 8)}`;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"hover:bg-gray-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm font-medium text-gray-900\",\n                    children: jobQuery\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: getJobTypeBadge(job.type || job.job_type)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-900 max-w-xs truncate\",\n                    children: job.type === 'sales_navigator' ? ((_job$configuration = job.configuration) === null || _job$configuration === void 0 ? void 0 : _job$configuration.searchQuery) || job.query || 'Search query' : `${(((_job$configuration2 = job.configuration) === null || _job$configuration2 === void 0 ? void 0 : _job$configuration2.urls) || []).length} URLs`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: getStatusBadge(job.status)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-16 bg-gray-200 rounded-full h-2 mr-2\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"bg-sky-500 h-2 rounded-full transition-all duration-300\",\n                        style: {\n                          width: `${((_job$progress = job.progress) === null || _job$progress === void 0 ? void 0 : _job$progress.percentage) || 0}%`\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 496,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 495,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-sm text-gray-600\",\n                      children: [((_job$progress2 = job.progress) === null || _job$progress2 === void 0 ? void 0 : _job$progress2.percentage) || 0, \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 501,\n                      columnNumber: 25\n                    }, this), job.progress && job.progress.totalUrls > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ml-2 text-xs text-gray-500\",\n                      children: [\"(\", job.progress.successful || 0, \"/\", job.progress.totalUrls || 0, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 503,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-600\",\n                  children: formatDate(job.created_at)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap text-sm font-medium\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex space-x-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => window.open(`/jobs/${job.id}`, '_blank'),\n                      className: \"text-sky-600 hover:text-sky-900 transition-colors\",\n                      title: \"View Details\",\n                      children: /*#__PURE__*/_jsxDEV(EyeIcon, {\n                        className: \"h-4 w-4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 519,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 514,\n                      columnNumber: 25\n                    }, this), job.status === 'completed' && job.totalResults > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleExportJob(job.id, job.query),\n                      className: \"text-green-600 hover:text-green-900 transition-colors\",\n                      title: \"Export Results\",\n                      children: /*#__PURE__*/_jsxDEV(ArrowDownTrayIcon, {\n                        className: \"h-4 w-4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 527,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 522,\n                      columnNumber: 27\n                    }, this), job.status === 'running' && /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handlePauseJob(job.id),\n                      className: \"text-yellow-600 hover:text-yellow-900 transition-colors\",\n                      title: \"Pause Job\",\n                      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                        className: \"h-4 w-4\",\n                        fill: \"none\",\n                        viewBox: \"0 0 24 24\",\n                        stroke: \"currentColor\",\n                        children: /*#__PURE__*/_jsxDEV(\"path\", {\n                          strokeLinecap: \"round\",\n                          strokeLinejoin: \"round\",\n                          strokeWidth: 2,\n                          d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 537,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 536,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 531,\n                      columnNumber: 27\n                    }, this), job.status === 'paused' && /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleResumeJob(job.id),\n                      className: \"text-blue-600 hover:text-blue-900 transition-colors\",\n                      title: \"Resume Job\",\n                      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                        className: \"h-4 w-4\",\n                        fill: \"none\",\n                        viewBox: \"0 0 24 24\",\n                        stroke: \"currentColor\",\n                        children: /*#__PURE__*/_jsxDEV(\"path\", {\n                          strokeLinecap: \"round\",\n                          strokeLinejoin: \"round\",\n                          strokeWidth: 2,\n                          d: \"M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1m-6 4h1m4 0h1m6-10V7a3 3 0 00-3-3H6a3 3 0 00-3 3v1M2 17h20v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2z\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 548,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 547,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 542,\n                      columnNumber: 27\n                    }, this), (job.status === 'pending' || job.status === 'running') && /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleCancelJob(job.id),\n                      className: \"text-rose-600 hover:text-rose-900 transition-colors\",\n                      title: \"Cancel Job\",\n                      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                        className: \"h-4 w-4\",\n                        fill: \"none\",\n                        viewBox: \"0 0 24 24\",\n                        stroke: \"currentColor\",\n                        children: /*#__PURE__*/_jsxDEV(\"path\", {\n                          strokeLinecap: \"round\",\n                          strokeLinejoin: \"round\",\n                          strokeWidth: 2,\n                          d: \"M6 18L18 6M6 6l12 12\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 559,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 558,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 553,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 21\n                }, this)]\n              }, jobId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 23\n              }, this);\n            }).filter(Boolean) // Remove null entries from invalid jobs\n            : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"6\",\n                className: \"px-6 py-4 text-center text-sm text-gray-500\",\n                children: loading ? 'Loading jobs...' : 'No jobs found. Create your first job to get started!'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed top-4 right-4 max-w-md p-4 rounded-lg shadow-lg z-50 ${notification.type === 'success' ? 'bg-green-100 border border-green-400 text-green-700' : notification.type === 'warning' ? 'bg-yellow-100 border border-yellow-400 text-yellow-700' : 'bg-red-100 border border-red-400 text-red-700'}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium\",\n            children: notification.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 15\n          }, this), notification.details && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm mt-1 opacity-90\",\n            children: notification.details\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setNotification(null),\n          className: \"ml-4 text-gray-400 hover:text-gray-600\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewJobModal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      onSubmit: handleCreateJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 7\n    }, this), showBulkSearchModal && /*#__PURE__*/_jsxDEV(BulkSearchUpload, {\n      onUploadComplete: result => {\n        console.log(`Bulk search job created: ${result.jobId}`);\n        fetchJobs(); // Refresh the jobs list\n        setShowBulkSearchModal(false);\n      },\n      onClose: () => setShowBulkSearchModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 9\n    }, this), showBulkCompanyModal && /*#__PURE__*/_jsxDEV(BulkCompanyUpload, {\n      onUploadComplete: result => {\n        console.log(`Bulk company job created: ${result.jobId}`);\n        fetchJobs(); // Refresh the jobs list\n        setShowBulkCompanyModal(false);\n      },\n      onClose: () => setShowBulkCompanyModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 356,\n    columnNumber: 5\n  }, this);\n};\n_s(Jobs, \"EUzJjlBTtOoB14HR0sG/xdPNZGc=\", false, function () {\n  return [useAuth];\n});\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useState","useEffect","PlusIcon","EyeIcon","ArrowDownTrayIcon","FunnelIcon","DocumentArrowUpIcon","NewJobModal","BulkSearchUpload","BulkCompanyUpload","useAuth","api","jsxDEV","_jsxDEV","Jobs","_s","isModalOpen","setIsModalOpen","showBulkSearchModal","setShowBulkSearchModal","showBulkCompanyModal","setShowBulkCompanyModal","jobs","setJobs","loading","setLoading","filter","setFilter","notification","setNotification","user","jobTypeColors","profile","company","search","profile_scraping","company_scraping","search_result_scraping","sales_navigator","unknown","statusColors","queued","running","completed","failed","cancelled","fetchJobs","timer","setTimeout","clearTimeout","response","get","console","log","result","data","success","error","handleExportJob","jobId","jobName","format","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","revokeObjectURL","type","message","toUpperCase","handleCancelJob","post","alert","handlePauseJob","handleResumeJob","getStatusBadge","status","colorClass","className","children","charAt","slice","fileName","_jsxFileName","lineNumber","columnNumber","getJobTypeBadge","jobType","safeJobType","trim","normalizedType","displayName","length","filteredJobs","job","handleCreateJob","jobData","_response","_response2","_response3","_response4","file","_jobData$urls","formData","FormData","append","searchQuery","maxPages","accountSelectionMode","urls","join","name","selectedAccountIds","forEach","accountId","index","headers","payload","query","maxResults","configuration","job_name","details","id","job_type","total_urls","warn","errorMsg","errorCode","code","errorDetails","received","validTypes","invalidUrls","_error$response","_error$response2","errorData","errorMessage","statusCode","formatDate","dateString","Date","toLocaleDateString","year","month","day","hour","minute","getQueryDisplay","onClick","key","label","map","tab","Array","isArray","_job$configuration","_job$configuration2","_job$progress","_job$progress2","Math","random","toString","substr","jobQuery","style","width","progress","percentage","totalUrls","successful","created_at","open","title","totalResults","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Boolean","colSpan","isOpen","onClose","onSubmit","onUploadComplete","_c","$RefreshReg$"],"sources":["C:/Users/krush/OneDrive/Desktop/Final/linkedin-automation-saas/frontend/src/pages/Jobs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PlusIcon, EyeIcon, ArrowDownTrayIcon, FunnelIcon, DocumentArrowUpIcon } from '@heroicons/react/24/outline';\nimport NewJobModal from '../components/Jobs/NewJobModal';\nimport BulkSearchUpload from '../components/ExcelUpload/BulkSearchUpload';\nimport BulkCompanyUpload from '../components/ExcelUpload/BulkCompanyUpload';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\n\nconst Jobs = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [showBulkSearchModal, setShowBulkSearchModal] = useState(false);\n  const [showBulkCompanyModal, setShowBulkCompanyModal] = useState(false);\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all');\n  const [notification, setNotification] = useState(null);\n  const { user } = useAuth();\n\n  const jobTypeColors = {\n    profile: 'bg-blue-100 text-blue-800',\n    company: 'bg-green-100 text-green-800',\n    search: 'bg-purple-100 text-purple-800',\n    profile_scraping: 'bg-blue-100 text-blue-800',\n    company_scraping: 'bg-green-100 text-green-800',\n    search_result_scraping: 'bg-purple-100 text-purple-800',\n    sales_navigator: 'bg-indigo-100 text-indigo-800',\n    unknown: 'bg-gray-100 text-gray-800'\n  };\n\n  const statusColors = {\n    queued: 'bg-yellow-100 text-yellow-800',\n    running: 'bg-blue-100 text-blue-800',\n    completed: 'bg-green-100 text-green-800',\n    failed: 'bg-red-100 text-red-800',\n    cancelled: 'bg-gray-100 text-gray-800'\n  };\n\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n\n  // Auto-dismiss notification after 5 seconds\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n\n  const fetchJobs = async () => {\n    try {\n      setLoading(true);\n      const response = await api.get('/api/jobs');\n      \n      console.log('📦 Raw jobs response:', response);\n      \n      // Support both Axios-style (response.data) and raw JSON (response)\n      const result = response.data || response;\n      \n      console.log('📦 Parsed jobs result:', result);\n      \n      if (result && result.success) {\n        setJobs(result.jobs || []);\n        console.log('✅ Jobs loaded:', result.jobs);\n      } else {\n        console.error('❌ Unexpected jobs response format:', result);\n        setJobs([]);\n      }\n    } catch (error) {\n      console.error('❌ Error fetching jobs:', error);\n      setJobs([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleExportJob = async (jobId, jobName, format = 'csv') => {\n    try {\n      const response = await api.get(`/api/jobs/${jobId}/download/${format}`, {\n        responseType: 'blob'\n      });\n      \n      // Create download link\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `${jobName}_results.${format}`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      window.URL.revokeObjectURL(url);\n      \n      setNotification({\n        type: 'success',\n        message: `Job results downloaded successfully as ${format.toUpperCase()}`\n      });\n    } catch (error) {\n      console.error('Failed to export job:', error);\n      setNotification({\n        type: 'error',\n        message: 'Failed to download job results. Please try again.'\n      });\n    }\n  };\n\n  const handleCancelJob = async (jobId) => {\n    try {\n      await api.post(`/api/jobs/${jobId}/cancel`);\n      fetchJobs(); // Refresh the job list\n    } catch (error) {\n      console.error('Failed to cancel job:', error);\n      alert('Failed to cancel job');\n    }\n  };\n\n  const handlePauseJob = async (jobId) => {\n    try {\n      await api.post(`/api/jobs/${jobId}/pause`);\n      fetchJobs(); // Refresh the job list\n    } catch (error) {\n      console.error('Failed to pause job:', error);\n      alert('Failed to pause job');\n    }\n  };\n\n  const handleResumeJob = async (jobId) => {\n    try {\n      await api.post(`/api/jobs/${jobId}/resume`);\n      fetchJobs(); // Refresh the job list\n    } catch (error) {\n      console.error('Failed to resume job:', error);\n      alert('Failed to resume job');\n    }\n  };\n\n  const getStatusBadge = (status) => {\n    const colorClass = statusColors[status] || 'bg-gray-100 text-gray-800';\n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${colorClass}`}>\n        {status.charAt(0).toUpperCase() + status.slice(1)}\n      </span>\n    );\n  };\n\n  /**\n   * Safely renders a job type badge with proper null checks\n   * Handles cases where jobType is undefined, null, or empty string\n   * @param {string|undefined|null} jobType - The job type to display\n   * @returns {JSX.Element} A styled badge component\n   */\n  const getJobTypeBadge = (jobType) => {\n    // Safely handle undefined, null, or empty jobType\n    const safeJobType = jobType && typeof jobType === 'string' ? jobType.trim() : '';\n    \n    // Use fallback if jobType is invalid\n    const normalizedType = safeJobType || 'unknown';\n    \n    // Get color class with fallback\n    const colorClass = jobTypeColors[normalizedType] || 'bg-gray-100 text-gray-800';\n    \n    // Safely create display name with proper checks\n    let displayName;\n    if (normalizedType === 'sales_navigator') {\n      displayName = 'Sales Navigator';\n    } else if (normalizedType === 'unknown') {\n      displayName = 'Unknown';\n    } else {\n      // Safe string manipulation with charAt check\n      displayName = normalizedType.length > 0 \n        ? normalizedType.charAt(0).toUpperCase() + normalizedType.slice(1)\n        : 'N/A';\n    }\n    \n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${colorClass}`}>\n        {displayName}\n      </span>\n    );\n  };\n\n  const filteredJobs = jobs.filter(job => {\n    if (filter === 'all') return true;\n    return job.status === filter;\n  });\n\n  const handleCreateJob = async (jobData) => {\n    try {\n      let response;\n      \n      // Check if file upload is being used\n      if (jobData.file) {\n        // Use FormData for file uploads\n        const formData = new FormData();\n        formData.append('file', jobData.file);\n        // Map to backend expected field names\n        formData.append('type', jobData.jobType);           // Backend expects 'type'\n        formData.append('query', jobData.jobName || jobData.searchQuery); // Backend expects 'query'\n        formData.append('maxResults', jobData.maxPages || 100);\n        formData.append('accountSelectionMode', jobData.accountSelectionMode || 'rotation');\n        \n        // Add URLs if provided (for mixed input)\n        if (jobData.urls && jobData.urls.length > 0) {\n          formData.append('urls', jobData.urls.join('\\n'));\n        }\n        \n        console.log('🚀 FormData details:');\n        console.log('  - type:', jobData.jobType);\n        console.log('  - query:', jobData.jobName || jobData.searchQuery);\n        console.log('  - file:', jobData.file.name);\n        console.log('  - urls count:', jobData.urls?.length || 0);\n        \n        // Add selected account IDs\n        if (jobData.selectedAccountIds && jobData.selectedAccountIds.length > 0) {\n          jobData.selectedAccountIds.forEach((accountId, index) => {\n            formData.append(`selectedAccountIds[${index}]`, accountId);\n          });\n          console.log('  - selectedAccountIds:', jobData.selectedAccountIds);\n        }\n        \n        // Send FormData with proper headers\n        response = await api.post('/api/jobs', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } else {\n        // Use JSON for manual URL input (no file)\n        // Map frontend fields to backend expected fields\n        const payload = {\n          type: jobData.jobType,                    // Backend expects 'type'\n          query: jobData.jobName || jobData.searchQuery, // Backend expects 'query'\n          maxResults: jobData.maxPages || 100,      // Backend expects 'maxResults'\n          urls: jobData.urls || [],                 // Backend expects 'urls' as direct field\n          accountSelectionMode: jobData.accountSelectionMode || 'rotation',\n          selectedAccountIds: jobData.selectedAccountIds || [],\n          configuration: {\n            jobType: jobData.jobType,               // Keep original for reference\n            jobName: jobData.jobName,               // Keep original for reference\n            searchQuery: jobData.searchQuery        // Keep search query for reference\n          }\n        };\n        \n        console.log('🚀 Payload details:');\n        console.log('  - type:', payload.type);\n        console.log('  - query:', payload.query);\n        console.log('  - maxResults:', payload.maxResults);\n        console.log('  - urls count:', payload.urls.length);\n        console.log('  - urls sample:', payload.urls.slice(0, 3));\n        console.log('  - accountSelectionMode:', payload.accountSelectionMode);\n        console.log('  - selectedAccountIds:', payload.selectedAccountIds);\n        \n        console.log('🚀 Sending payload to backend:', payload);\n\n        response = await api.post('/api/jobs', payload);\n      }\n\n      // Enhanced debugging for response structure\n      console.log('🔍 Full response object:', response);\n      console.log('🔍 Response status:', response?.status);\n      console.log('🔍 Response headers:', response?.headers);\n      console.log('🔍 Response data:', response?.data);\n      console.log('🔍 Response data type:', typeof response?.data);\n      \n      // Check if response exists\n      if (!response) {\n        console.error('❌ No response received from server');\n        alert('Failed to create job: No response from server');\n        return;\n      }\n      \n      // Handle both Axios-style (response.data) and raw JSON responses\n      // Some libraries put payload inside response.data, others send raw JSON\n      const result = response.data || response;\n      console.log('🔍 Parsed result:', result);\n      console.log('🔍 Result success:', result.success);\n      console.log('🔍 Result job:', result.job);\n      \n      if (result && result.success === true) {\n        if (result.job) {\n          console.log('✅ Job created successfully:', result.job);\n          await fetchJobs(); // Refresh jobs list\n          setIsModalOpen(false);\n          // Show success notification (you can replace this with a toast notification)\n          setNotification({\n            type: 'success',\n            message: `Job \"${result.job.job_name}\" created successfully! Processing will begin shortly.`,\n            details: `Job ID: ${result.job.id} | Type: ${result.job.job_type} | URLs: ${result.job.total_urls || 'N/A'}`\n          });\n        } else {\n          console.warn('⚠️ Success but no job object:', result);\n          setNotification({\n            type: 'warning',\n            message: 'Job created but response format is unexpected',\n            details: 'The job may have been created successfully, but we received an unexpected response format.'\n          });\n        }\n      } else {\n        console.error('❌ Job creation failed:', result);\n        const errorMsg = result?.error || result?.message || 'Unknown error';\n        const errorCode = result?.code || 'UNKNOWN_ERROR';\n        const errorDetails = result?.received || result?.validTypes || result?.invalidUrls || null;\n        \n        setNotification({\n          type: 'error',\n          message: `Failed to create job: ${errorMsg}`,\n          details: errorCode === 'MISSING_FIELDS' ? 'Please ensure all required fields are filled out.' :\n                   errorCode === 'INVALID_JOB_TYPE' ? `Valid job types: ${errorDetails?.join(', ')}` :\n                   errorCode === 'NO_VALID_URLS' ? 'Please provide valid LinkedIn URLs.' :\n                   errorCode === 'NO_VALID_ACCOUNTS' ? 'Please select valid LinkedIn accounts.' :\n                   `Error code: ${errorCode}`\n        });\n      }\n    } catch (error) {\n      console.error('Failed to create job:', error);\n      console.error('Error response:', error.response);\n      \n      const errorData = error.response?.data;\n      const errorMessage = errorData?.error || error.message || 'Unknown error';\n      const errorCode = errorData?.code || 'NETWORK_ERROR';\n      const statusCode = error.response?.status;\n      \n      setNotification({\n        type: 'error',\n        message: `Failed to create job: ${errorMessage}`,\n        details: statusCode === 403 ? 'You do not have permission to create jobs. Please check your authentication.' :\n                 statusCode === 401 ? 'Your session has expired. Please log in again.' :\n                 statusCode === 400 ? 'Invalid request data. Please check your input and try again.' :\n                 statusCode === 500 ? 'Server error. Please try again later.' :\n                 `HTTP ${statusCode} - ${errorCode}`\n      });\n    }\n  };\n\n  // Remove duplicate - already defined above\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const getQueryDisplay = (job) => {\n    if (job.type === 'search') {\n      return job.query || job.searchQuery || 'Search query';\n    }\n    return job.fileName || 'Uploaded file';\n  };\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Jobs</h1>\n          <p className=\"text-gray-600 mt-1\">\n            Manage your scraping jobs and bulk operations\n          </p>\n        </div>\n        <div className=\"flex space-x-3\">\n          <button \n            onClick={() => setIsModalOpen(true)}\n            className=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors flex items-center space-x-2\"\n          >\n            <PlusIcon className=\"h-5 w-5\" />\n            <span>New Job</span>\n          </button>\n          <button \n             onClick={() => setShowBulkSearchModal(true)}\n             className=\"bg-purple-500 text-white px-4 py-2 rounded-lg hover:bg-purple-600 transition-colors flex items-center space-x-2\"\n           >\n             <DocumentArrowUpIcon className=\"h-5 w-5\" />\n             <span>Bulk Search</span>\n           </button>\n           <button \n             onClick={() => setShowBulkCompanyModal(true)}\n             className=\"bg-orange-500 text-white px-4 py-2 rounded-lg hover:bg-orange-600 transition-colors flex items-center space-x-2\"\n           >\n             <DocumentArrowUpIcon className=\"h-5 w-5\" />\n             <span>Bulk Company</span>\n           </button>\n        </div>\n      </div>\n\n      {/* Filter Tabs */}\n      <div className=\"mb-6\">\n        <div className=\"flex space-x-1 bg-gray-100 p-1 rounded-lg w-fit\">\n          {[\n            { key: 'all', label: 'All Jobs' },\n            { key: 'profile', label: 'Profile' },\n            { key: 'company', label: 'Company' },\n            { key: 'search', label: 'Search' }\n          ].map((tab) => (\n            <button\n              key={tab.key}\n              onClick={() => setFilter(tab.key)}\n              className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                filter === tab.key\n                  ? 'bg-white text-blue-600 shadow-sm'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              {tab.label}\n            </button>\n          ))}\n        </div>\n      </div>\n      \n      {/* Jobs Table */}\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n        {loading ? (\n          <div className=\"p-8 text-center\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto\"></div>\n            <p className=\"text-gray-600 mt-2\">Loading jobs...</p>\n          </div>\n        ) : filteredJobs.length === 0 ? (\n          <div className=\"p-8 text-center\">\n            <p className=\"text-gray-600 mb-4\">\n              {filter === 'all' ? 'No jobs created yet.' : `No ${filter} jobs found.`}\n            </p>\n            <button \n              onClick={() => setIsModalOpen(true)}\n              className=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors\"\n            >\n              Create Your First Job\n            </button>\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Job Name\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Type\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Query/File\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Progress\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Created\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {Array.isArray(filteredJobs) && filteredJobs.length > 0 ? (\n                  filteredJobs.map((job) => {\n                    // Safe job object validation\n                    if (!job || typeof job !== 'object') {\n                      console.warn('Invalid job object:', job);\n                      return null;\n                    }\n                    \n                    const jobId = job.id || `unknown-${Math.random().toString(36).substr(2, 9)}`;\n                    const jobQuery = job.query || job.job_name || `Job ${jobId.toString().slice(0, 8)}`;\n                    \n                    return (\n                      <tr key={jobId} className=\"hover:bg-gray-50\">\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm font-medium text-gray-900\">\n                            {jobQuery}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          {getJobTypeBadge(job.type || job.job_type)}\n                        </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900 max-w-xs truncate\">\n                        {job.type === 'sales_navigator' ? \n                          (job.configuration?.searchQuery || job.query || 'Search query') :\n                          `${(job.configuration?.urls || []).length} URLs`\n                        }\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {getStatusBadge(job.status)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <div className=\"w-16 bg-gray-200 rounded-full h-2 mr-2\">\n                          <div \n                            className=\"bg-sky-500 h-2 rounded-full transition-all duration-300\" \n                            style={{ width: `${job.progress?.percentage || 0}%` }}\n                          ></div>\n                        </div>\n                        <span className=\"text-sm text-gray-600\">{job.progress?.percentage || 0}%</span>\n                        {job.progress && job.progress.totalUrls > 0 && (\n                          <span className=\"ml-2 text-xs text-gray-500\">\n                            ({job.progress.successful || 0}/{job.progress.totalUrls || 0})\n                          </span>\n                        )}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\n                      {formatDate(job.created_at)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                      <div className=\"flex space-x-2\">\n                        <button \n                          onClick={() => window.open(`/jobs/${job.id}`, '_blank')}\n                          className=\"text-sky-600 hover:text-sky-900 transition-colors\"\n                          title=\"View Details\"\n                        >\n                          <EyeIcon className=\"h-4 w-4\" />\n                        </button>\n                        {job.status === 'completed' && job.totalResults > 0 && (\n                          <button \n                            onClick={() => handleExportJob(job.id, job.query)}\n                            className=\"text-green-600 hover:text-green-900 transition-colors\"\n                            title=\"Export Results\"\n                          >\n                            <ArrowDownTrayIcon className=\"h-4 w-4\" />\n                          </button>\n                        )}\n                        {job.status === 'running' && (\n                          <button \n                            onClick={() => handlePauseJob(job.id)}\n                            className=\"text-yellow-600 hover:text-yellow-900 transition-colors\"\n                            title=\"Pause Job\"\n                          >\n                            <svg className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                            </svg>\n                          </button>\n                        )}\n                        {job.status === 'paused' && (\n                          <button \n                            onClick={() => handleResumeJob(job.id)}\n                            className=\"text-blue-600 hover:text-blue-900 transition-colors\"\n                            title=\"Resume Job\"\n                          >\n                            <svg className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1m-6 4h1m4 0h1m6-10V7a3 3 0 00-3-3H6a3 3 0 00-3 3v1M2 17h20v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2z\" />\n                            </svg>\n                          </button>\n                        )}\n                        {(job.status === 'pending' || job.status === 'running') && (\n                          <button \n                            onClick={() => handleCancelJob(job.id)}\n                            className=\"text-rose-600 hover:text-rose-900 transition-colors\"\n                            title=\"Cancel Job\"\n                          >\n                            <svg className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                            </svg>\n                          </button>\n                        )}\n                      </div>\n                    </td>\n                  </tr>\n                    );\n                  }).filter(Boolean) // Remove null entries from invalid jobs\n                ) : (\n                  <tr>\n                    <td colSpan=\"6\" className=\"px-6 py-4 text-center text-sm text-gray-500\">\n                      {loading ? 'Loading jobs...' : 'No jobs found. Create your first job to get started!'}\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n\n      {/* Notification */}\n      {notification && (\n        <div className={`fixed top-4 right-4 max-w-md p-4 rounded-lg shadow-lg z-50 ${\n          notification.type === 'success' ? 'bg-green-100 border border-green-400 text-green-700' :\n          notification.type === 'warning' ? 'bg-yellow-100 border border-yellow-400 text-yellow-700' :\n          'bg-red-100 border border-red-400 text-red-700'\n        }`}>\n          <div className=\"flex justify-between items-start\">\n            <div className=\"flex-1\">\n              <div className=\"font-medium\">{notification.message}</div>\n              {notification.details && (\n                <div className=\"text-sm mt-1 opacity-90\">{notification.details}</div>\n              )}\n            </div>\n            <button\n              onClick={() => setNotification(null)}\n              className=\"ml-4 text-gray-400 hover:text-gray-600\"\n            >\n              ✕\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* New Job Modal */}\n      <NewJobModal \n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        onSubmit={handleCreateJob}\n      />\n\n      {/* Bulk Search Upload Modal */}\n      {showBulkSearchModal && (\n        <BulkSearchUpload \n          onUploadComplete={(result) => {\n            console.log(`Bulk search job created: ${result.jobId}`);\n            fetchJobs(); // Refresh the jobs list\n            setShowBulkSearchModal(false);\n          }}\n          onClose={() => setShowBulkSearchModal(false)}\n        />\n      )}\n\n      {/* Bulk Company Upload Modal */}\n      {showBulkCompanyModal && (\n        <BulkCompanyUpload \n          onUploadComplete={(result) => {\n            console.log(`Bulk company job created: ${result.jobId}`);\n            fetchJobs(); // Refresh the jobs list\n            setShowBulkCompanyModal(false);\n          }}\n          onClose={() => setShowBulkCompanyModal(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Jobs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}