{"ast":null,"code":"import _objectSpread from\"C:/Users/krush/OneDrive/Desktop/Final/linkedin-automation-saas/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer,useEffect}from'react';import{authAPI}from'../services/api';import toast from'react-hot-toast';// Initial state\nimport{jsx as _jsx}from\"react/jsx-runtime\";const initialState={user:null,token:null,loading:true,error:null};// Action types\nconst AUTH_ACTIONS={SET_LOADING:'SET_LOADING',LOGIN_SUCCESS:'LOGIN_SUCCESS',LOGOUT:'LOGOUT',SET_ERROR:'SET_ERROR',CLEAR_ERROR:'CLEAR_ERROR',UPDATE_USER:'UPDATE_USER'};// Reducer\nconst authReducer=(state,action)=>{switch(action.type){case AUTH_ACTIONS.SET_LOADING:return _objectSpread(_objectSpread({},state),{},{loading:action.payload});case AUTH_ACTIONS.LOGIN_SUCCESS:return _objectSpread(_objectSpread({},state),{},{user:action.payload.user,token:action.payload.token,loading:false,error:null});case AUTH_ACTIONS.LOGOUT:return _objectSpread(_objectSpread({},state),{},{user:null,token:null,loading:false,error:null});case AUTH_ACTIONS.SET_ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload,loading:false});case AUTH_ACTIONS.CLEAR_ERROR:return _objectSpread(_objectSpread({},state),{},{error:null});case AUTH_ACTIONS.UPDATE_USER:return _objectSpread(_objectSpread({},state),{},{user:_objectSpread(_objectSpread({},state.user),action.payload)});default:return state;}};// Create context\nconst AuthContext=/*#__PURE__*/createContext();// Auth provider component\nexport const AuthProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);// Load user from localStorage on app start\nuseEffect(()=>{const loadUser=async()=>{try{const token=localStorage.getItem('token');const user=localStorage.getItem('user');if(token&&user){// Set token in API headers\nauthAPI.setAuthToken(token);// Verify token is still valid\nconst response=await authAPI.getProfile();dispatch({type:AUTH_ACTIONS.LOGIN_SUCCESS,payload:{user:response.data.user,token}});}else{dispatch({type:AUTH_ACTIONS.SET_LOADING,payload:false});}}catch(error){// Token is invalid, clear storage\nlocalStorage.removeItem('token');localStorage.removeItem('user');authAPI.clearAuthToken();dispatch({type:AUTH_ACTIONS.SET_LOADING,payload:false});}};loadUser();},[]);// Login function\nconst login=async(email,password)=>{try{dispatch({type:AUTH_ACTIONS.SET_LOADING,payload:true});dispatch({type:AUTH_ACTIONS.CLEAR_ERROR});const response=await authAPI.login(email,password);if(response.success){const{user,token}=response.data;// Store in localStorage\nlocalStorage.setItem('token',token);localStorage.setItem('user',JSON.stringify(user));// Set token in API headers\nauthAPI.setAuthToken(token);dispatch({type:AUTH_ACTIONS.LOGIN_SUCCESS,payload:{user,token}});toast.success('Login successful!');return{success:true};}else{dispatch({type:AUTH_ACTIONS.SET_ERROR,payload:response.message||'Login failed'});toast.error(response.message||'Login failed');return{success:false,message:response.message};}}catch(error){var _error$response,_error$response$data;const message=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Login failed';dispatch({type:AUTH_ACTIONS.SET_ERROR,payload:message});toast.error(message);return{success:false,message};}};// Register function\nconst register=async userData=>{try{dispatch({type:AUTH_ACTIONS.SET_LOADING,payload:true});dispatch({type:AUTH_ACTIONS.CLEAR_ERROR});const response=await authAPI.register(userData);if(response.success){const{user,token}=response.data;// Store in localStorage\nlocalStorage.setItem('token',token);localStorage.setItem('user',JSON.stringify(user));// Set token in API headers\nauthAPI.setAuthToken(token);dispatch({type:AUTH_ACTIONS.LOGIN_SUCCESS,payload:{user,token}});toast.success('Registration successful!');return{success:true};}else{dispatch({type:AUTH_ACTIONS.SET_ERROR,payload:response.message||'Registration failed'});toast.error(response.message||'Registration failed');return{success:false,message:response.message};}}catch(error){var _error$response2,_error$response2$data;const message=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Registration failed';dispatch({type:AUTH_ACTIONS.SET_ERROR,payload:message});toast.error(message);return{success:false,message};}};// Logout function\nconst logout=async()=>{try{// Call logout API\nawait authAPI.logout();}catch(error){// Continue with logout even if API call fails\nconsole.warn('Logout API call failed:',error);}finally{// Clear localStorage\nlocalStorage.removeItem('token');localStorage.removeItem('user');// Clear API token\nauthAPI.clearAuthToken();// Update state\ndispatch({type:AUTH_ACTIONS.LOGOUT});toast.success('Logged out successfully');}};// Update profile function\nconst updateProfile=async profileData=>{try{const response=await authAPI.updateProfile(profileData);if(response.success){const updatedUser=response.data.user;// Update localStorage\nlocalStorage.setItem('user',JSON.stringify(updatedUser));// Update state\ndispatch({type:AUTH_ACTIONS.UPDATE_USER,payload:updatedUser});toast.success('Profile updated successfully');return{success:true};}else{toast.error(response.message||'Profile update failed');return{success:false,message:response.message};}}catch(error){var _error$response3,_error$response3$data;const message=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Profile update failed';toast.error(message);return{success:false,message};}};// Change password function\nconst changePassword=async(currentPassword,newPassword)=>{try{const response=await authAPI.changePassword(currentPassword,newPassword);if(response.success){toast.success('Password changed successfully');return{success:true};}else{toast.error(response.message||'Password change failed');return{success:false,message:response.message};}}catch(error){var _error$response4,_error$response4$data;const message=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Password change failed';toast.error(message);return{success:false,message};}};// Forgot password function\nconst forgotPassword=async email=>{try{const response=await authAPI.forgotPassword(email);if(response.success){toast.success('Password reset email sent');return{success:true};}else{toast.error(response.message||'Failed to send reset email');return{success:false,message:response.message};}}catch(error){var _error$response5,_error$response5$data;const message=((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Failed to send reset email';toast.error(message);return{success:false,message};}};// Clear error function\nconst clearError=()=>{dispatch({type:AUTH_ACTIONS.CLEAR_ERROR});};// Context value\nconst value={user:state.user,token:state.token,loading:state.loading,error:state.error,login,register,logout,updateProfile,changePassword,forgotPassword,clearError};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};// Custom hook to use auth context\nexport const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export default AuthContext;","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","toast","jsx","_jsx","initialState","user","token","loading","error","AUTH_ACTIONS","SET_LOADING","LOGIN_SUCCESS","LOGOUT","SET_ERROR","CLEAR_ERROR","UPDATE_USER","authReducer","state","action","type","_objectSpread","payload","AuthContext","AuthProvider","_ref","children","dispatch","loadUser","localStorage","getItem","setAuthToken","response","getProfile","data","removeItem","clearAuthToken","login","email","password","success","setItem","JSON","stringify","message","_error$response","_error$response$data","register","userData","_error$response2","_error$response2$data","logout","console","warn","updateProfile","profileData","updatedUser","_error$response3","_error$response3$data","changePassword","currentPassword","newPassword","_error$response4","_error$response4$data","forgotPassword","_error$response5","_error$response5$data","clearError","value","Provider","useAuth","context","Error"],"sources":["C:/Users/krush/OneDrive/Desktop/Final/linkedin-automation-saas/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\n\n// Initial state\nconst initialState = {\n  user: null,\n  token: null,\n  loading: true,\n  error: null,\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGOUT: 'LOGOUT',\n  SET_ERROR: 'SET_ERROR',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  UPDATE_USER: 'UPDATE_USER',\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n        error: null,\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n        error: null,\n      };\n    case AUTH_ACTIONS.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null,\n      };\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload },\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = createContext();\n\n// Auth provider component\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load user from localStorage on app start\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const user = localStorage.getItem('user');\n        \n        if (token && user) {\n          // Set token in API headers\n          authAPI.setAuthToken(token);\n          \n          // Verify token is still valid\n          const response = await authAPI.getProfile();\n          \n          dispatch({\n            type: AUTH_ACTIONS.LOGIN_SUCCESS,\n            payload: {\n              user: response.data.user,\n              token,\n            },\n          });\n        } else {\n          dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\n        }\n      } catch (error) {\n        // Token is invalid, clear storage\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        authAPI.clearAuthToken();\n        dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\n      }\n    };\n\n    loadUser();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\n      dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n      \n      const response = await authAPI.login(email, password);\n      \n      if (response.success) {\n        const { user, token } = response.data;\n        \n        // Store in localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        \n        // Set token in API headers\n        authAPI.setAuthToken(token);\n        \n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: { user, token },\n        });\n        \n        toast.success('Login successful!');\n        return { success: true };\n      } else {\n        dispatch({\n          type: AUTH_ACTIONS.SET_ERROR,\n          payload: response.message || 'Login failed',\n        });\n        toast.error(response.message || 'Login failed');\n        return { success: false, message: response.message };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Login failed';\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: message });\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  // Register function\n  const register = async (userData) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\n      dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n      \n      const response = await authAPI.register(userData);\n      \n      if (response.success) {\n        const { user, token } = response.data;\n        \n        // Store in localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        \n        // Set token in API headers\n        authAPI.setAuthToken(token);\n        \n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: { user, token },\n        });\n        \n        toast.success('Registration successful!');\n        return { success: true };\n      } else {\n        dispatch({\n          type: AUTH_ACTIONS.SET_ERROR,\n          payload: response.message || 'Registration failed',\n        });\n        toast.error(response.message || 'Registration failed');\n        return { success: false, message: response.message };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Registration failed';\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: message });\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      // Call logout API\n      await authAPI.logout();\n    } catch (error) {\n      // Continue with logout even if API call fails\n      console.warn('Logout API call failed:', error);\n    } finally {\n      // Clear localStorage\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      \n      // Clear API token\n      authAPI.clearAuthToken();\n      \n      // Update state\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\n      \n      toast.success('Logged out successfully');\n    }\n  };\n\n  // Update profile function\n  const updateProfile = async (profileData) => {\n    try {\n      const response = await authAPI.updateProfile(profileData);\n      \n      if (response.success) {\n        const updatedUser = response.data.user;\n        \n        // Update localStorage\n        localStorage.setItem('user', JSON.stringify(updatedUser));\n        \n        // Update state\n        dispatch({\n          type: AUTH_ACTIONS.UPDATE_USER,\n          payload: updatedUser,\n        });\n        \n        toast.success('Profile updated successfully');\n        return { success: true };\n      } else {\n        toast.error(response.message || 'Profile update failed');\n        return { success: false, message: response.message };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Profile update failed';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  // Change password function\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      const response = await authAPI.changePassword(currentPassword, newPassword);\n      \n      if (response.success) {\n        toast.success('Password changed successfully');\n        return { success: true };\n      } else {\n        toast.error(response.message || 'Password change failed');\n        return { success: false, message: response.message };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Password change failed';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  // Forgot password function\n  const forgotPassword = async (email) => {\n    try {\n      const response = await authAPI.forgotPassword(email);\n      \n      if (response.success) {\n        toast.success('Password reset email sent');\n        return { success: true };\n      } else {\n        toast.error(response.message || 'Failed to send reset email');\n        return { success: false, message: response.message };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to send reset email';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  // Clear error function\n  const clearError = () => {\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n  };\n\n  // Context value\n  const value = {\n    user: state.user,\n    token: state.token,\n    loading: state.loading,\n    error: state.error,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    forgotPassword,\n    clearError,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  \n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  \n  return context;\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}