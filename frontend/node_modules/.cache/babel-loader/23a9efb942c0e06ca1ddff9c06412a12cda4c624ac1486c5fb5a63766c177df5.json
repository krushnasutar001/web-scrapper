{"ast":null,"code":"import axios from 'axios';\n\n// Normalize login responses from different backend implementations\n// Returns a consistent shape: { success, authToken, user, refreshToken, message }\nfunction normalizeLoginResponse(respData) {\n  try {\n    var _data$data, _data$data2, _data$data3, _data$data4;\n    const data = respData && respData.data ? respData.data : respData;\n    const authToken = (data === null || data === void 0 ? void 0 : data.authToken) || (data === null || data === void 0 ? void 0 : data.token) || (data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.token) || (data === null || data === void 0 ? void 0 : data.accessToken) || (data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.accessToken) || null;\n    const user = (data === null || data === void 0 ? void 0 : data.user) || (data === null || data === void 0 ? void 0 : (_data$data3 = data.data) === null || _data$data3 === void 0 ? void 0 : _data$data3.user) || (data === null || data === void 0 ? void 0 : data.profile) || null;\n    const refreshToken = (data === null || data === void 0 ? void 0 : data.refreshToken) || (data === null || data === void 0 ? void 0 : (_data$data4 = data.data) === null || _data$data4 === void 0 ? void 0 : _data$data4.refreshToken) || null;\n    const success = Boolean((data === null || data === void 0 ? void 0 : data.success) === true || (data === null || data === void 0 ? void 0 : data.ok) === true || authToken);\n    if (!success) {\n      const message = (data === null || data === void 0 ? void 0 : data.message) || (data === null || data === void 0 ? void 0 : data.error) || (typeof data === 'string' ? data : 'Login failed');\n      return {\n        success: false,\n        message\n      };\n    }\n    return {\n      success: true,\n      authToken,\n      user,\n      refreshToken,\n      message: (data === null || data === void 0 ? void 0 : data.message) || 'Login successful'\n    };\n  } catch (err) {\n    return {\n      success: false,\n      message: 'Login response parsing error'\n    };\n  }\n}\n\n// ---- Backend base URL resolution and fallback helpers ----\nfunction deriveCandidateBases() {\n  var _window$location;\n  const envBase = process.env.REACT_APP_API_URL;\n  const storedBase = typeof window !== 'undefined' ? localStorage.getItem('API_BASE_URL') : null;\n  const fromOrigin = typeof window !== 'undefined' && (_window$location = window.location) !== null && _window$location !== void 0 && _window$location.origin ? window.location.origin.includes(':3001') ? window.location.origin.replace(':3001', ':5002') : window.location.origin : null;\n  const candidates = [envBase, storedBase, fromOrigin, 'http://localhost:5002', 'http://localhost:5001', 'https://scralytics.com'];\n  return Array.from(new Set(candidates.filter(Boolean)));\n}\nfunction getInitialBaseURL() {\n  const list = deriveCandidateBases();\n  return list[0] || 'http://localhost:5002';\n}\nfunction persistBaseURL(base) {\n  try {\n    if (typeof window !== 'undefined' && base) {\n      localStorage.setItem('API_BASE_URL', base);\n      window.__API_BASE_URL__ = base;\n    }\n  } catch (_) {}\n}\n\n// Create axios instance with resilient base URL\nconst api = axios.create({\n  baseURL: getInitialBaseURL(),\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  params: {\n    _t: Date.now() // Cache busting parameter\n  }\n});\n\n// Request interceptor with logging and auth\napi.interceptors.request.use(config => {\n  var _config$method, _config$headers$commo;\n  // Add logging for debugging\n  console.log('üåê API Request:', {\n    method: (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(),\n    url: config.url,\n    baseURL: config.baseURL,\n    fullURL: `${config.baseURL}${config.url}`\n  });\n\n  // Token is set via authAPI.setAuthToken() - no need to set here\n  // Debug token presence\n  const token = localStorage.getItem('authToken') || localStorage.getItem('token');\n  const authHeader = config.headers.Authorization || ((_config$headers$commo = config.headers.common) === null || _config$headers$commo === void 0 ? void 0 : _config$headers$commo.Authorization);\n  console.log('üîê Frontend Token Debug:', {\n    tokenInStorage: token ? token.substring(0, 20) + '...' : 'null',\n    authHeaderSet: authHeader ? authHeader.substring(0, 30) + '...' : 'null'\n  });\n  if (!authHeader && token) {\n    console.warn('‚ö†Ô∏è Token exists in storage but not in headers - setting manually');\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('‚ùå Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor with enhanced logging\napi.interceptors.response.use(response => {\n  var _response$config;\n  // Log successful responses\n  console.log('‚úÖ API Response:', {\n    status: response.status,\n    url: (_response$config = response.config) === null || _response$config === void 0 ? void 0 : _response$config.url,\n    data: response.data\n  });\n\n  // Check for new token in response headers\n  const newToken = response.headers['x-new-token'];\n  if (newToken) {\n    localStorage.setItem('token', newToken);\n  }\n  return response.data;\n}, error => {\n  var _error$response, _error$response2, _error$config, _error$response3, _error$response4, _error$response5, _error$response6, _error$response7, _error$response8, _error$response9, _error$response1, _error$response1$data, _error$response10;\n  // Enhanced error logging\n  console.error('‚ùå API Response Error:', {\n    message: error.message,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    statusText: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusText,\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data,\n    headers: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.headers,\n    code: error.code,\n    fullError: error\n  });\n\n  // Add user-friendly error message\n  if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 500) {\n    console.error('üî• Server Error: The server encountered an internal error. Please try again later.');\n  } else if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 404) {\n    console.error('üîç Not Found: The requested resource was not found.');\n  } else if (((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status) === 403) {\n    console.error('üö´ Forbidden: You do not have permission to access this resource.');\n  }\n\n  // Handle 401/403 errors (unauthorized/forbidden)\n  if (((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.status) === 401 || ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.status) === 403) {\n    var _error$response0;\n    console.warn('üîê Authentication failed or unauthorized response detected');\n    console.log('üîê Error details:', (_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data);\n    // Do NOT auto-clear tokens or redirect; let the app handle gracefully\n    // This avoids unexpected logout on background requests or transient errors\n  }\n\n  // Return error in consistent format\n  const errorMessage = ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || error.message || 'An error occurred';\n  return Promise.reject({\n    message: errorMessage,\n    status: (_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.status,\n    response: error.response,\n    originalError: error\n  });\n});\n\n// Rate limiting state\nlet loginInProgress = false;\nlet lastLoginAttempt = 0;\nconst LOGIN_COOLDOWN = 2000; // 2 seconds between login attempts\n\n// Auth API\nexport const authAPI = {\n  // Set auth token\n  setAuthToken: token => {\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete api.defaults.headers.common['Authorization'];\n    }\n  },\n  // Clear auth token\n  clearAuthToken: () => {\n    delete api.defaults.headers.common['Authorization'];\n  },\n  // Login with rate limiting\n  login: async (email, password) => {\n    console.log('üîê Login attempt triggered for:', email);\n\n    // Prevent multiple parallel logins\n    if (loginInProgress) {\n      console.warn('‚ö†Ô∏è Login already in progress, ignoring duplicate request');\n      return Promise.reject({\n        message: 'Login already in progress'\n      });\n    }\n\n    // Check cooldown period\n    const now = Date.now();\n    const timeSinceLastAttempt = now - lastLoginAttempt;\n    if (timeSinceLastAttempt < LOGIN_COOLDOWN) {\n      const remainingCooldown = LOGIN_COOLDOWN - timeSinceLastAttempt;\n      console.warn(`‚è∞ Login cooldown active, wait ${remainingCooldown}ms`);\n      return Promise.reject({\n        message: `Please wait ${Math.ceil(remainingCooldown / 1000)} seconds before trying again`\n      });\n    }\n    loginInProgress = true;\n    lastLoginAttempt = now;\n    try {\n      const respData = await api.post('/api/login', {\n        email,\n        password\n      });\n      console.log('‚úÖ Login successful via /api/login');\n      // Normalize response shape\n      const normalized = normalizeLoginResponse(respData);\n      return normalized;\n    } catch (error) {\n      var _error$response11, _error$response12, _error$response$statu, _error$response13, _error$response14;\n      console.error('‚ùå Login failed:', error.message);\n\n      // Handle specific error cases\n      if (((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.status) === 429) {\n        console.warn('üö´ Too many login attempts detected');\n        const e = new Error('Too many login attempts. Please wait before trying again.');\n        e.status = 429;\n        e.response = error.response;\n        throw e;\n      }\n      if (((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : _error$response12.status) === 431) {\n        console.warn('üì¶ Request headers too large - clearing cookies');\n        // Clear potentially oversized cookies\n        document.cookie.split(\";\").forEach(function (c) {\n          document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\");\n        });\n        const e = new Error('Request headers too large. Cookies cleared, please try again.');\n        e.status = 431;\n        e.response = error.response;\n        throw e;\n      }\n\n      // If we hit a network error (no response), automatically try alternative bases\n      const isNetworkError = !error.response && (/Network Error/i.test(error.message) || error.code === 'ERR_NETWORK');\n      if (isNetworkError) {\n        console.warn('üåê Network error detected. Trying alternative API bases...');\n        const candidates = deriveCandidateBases().filter(b => b && b !== api.defaults.baseURL);\n        for (const base of candidates) {\n          try {\n            console.log('üîÅ Attempting login against base:', base);\n            api.defaults.baseURL = base;\n            const altResp = await api.post('/api/login', {\n              email,\n              password\n            });\n            const normalized = normalizeLoginResponse(altResp);\n            if (normalized.success) {\n              console.log('‚úÖ Login successful after base switch:', base);\n              persistBaseURL(base);\n              return normalized;\n            }\n          } catch (e) {\n            var _e$response, _e$response$data;\n            const msg = (e === null || e === void 0 ? void 0 : e.message) || (e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message) || 'unknown';\n            console.warn('‚ö†Ô∏è Base attempt failed:', base, '-', msg);\n          }\n          // Try legacy path on this base if /api/login not found\n          try {\n            const legacyResp = await api.post('/api/auth/login', {\n              email,\n              password\n            });\n            const normalized = normalizeLoginResponse(legacyResp);\n            if (normalized.success) {\n              console.log('‚úÖ Legacy /api/auth/login successful after base switch:', base);\n              persistBaseURL(base);\n              return normalized;\n            }\n          } catch (_) {}\n        }\n        console.error('‚ùå All alternative bases failed. Returning original error.');\n      }\n\n      // Fallback: if alias not found, try legacy /api/auth/login\n      const status = (_error$response$statu = error === null || error === void 0 ? void 0 : (_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.status) !== null && _error$response$statu !== void 0 ? _error$response$statu : error === null || error === void 0 ? void 0 : error.status;\n      const dataText = typeof (error === null || error === void 0 ? void 0 : (_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : _error$response14.data) === 'string' ? error.response.data : '';\n      const isNotFound = status === 404 || dataText && dataText.includes('Cannot POST /api/login');\n      if (isNotFound) {\n        console.warn('üîÅ /api/login alias not available, falling back to /api/auth/login');\n        const legacyData = await api.post('/api/auth/login', {\n          email,\n          password\n        });\n        console.log('‚úÖ Login successful via /api/auth/login');\n        const normalized = normalizeLoginResponse(legacyData);\n        return normalized;\n      }\n      throw error;\n    } finally {\n      loginInProgress = false;\n    }\n  },\n  // Register\n  register: userData => {\n    return api.post('/api/auth/register', userData);\n  },\n  // Get profile\n  getProfile: () => {\n    return api.get('/api/auth/me');\n  },\n  // Update profile\n  updateProfile: profileData => {\n    return api.put('/api/auth/me', profileData);\n  },\n  // Change password\n  changePassword: (currentPassword, newPassword) => {\n    return api.put('/api/auth/password', {\n      currentPassword,\n      newPassword\n    });\n  },\n  // Forgot password\n  forgotPassword: email => {\n    return api.post('/api/auth/forgot-password', {\n      email\n    });\n  },\n  // Reset password\n  resetPassword: (token, password) => {\n    return api.post('/api/auth/reset-password', {\n      token,\n      password\n    });\n  },\n  // Refresh token\n  refreshToken: refreshToken => {\n    return api.post('/api/auth/refresh', {\n      refreshToken\n    });\n  },\n  // Logout\n  logout: () => {\n    return api.post('/api/auth/logout');\n  }\n};\n\n// Jobs API\nexport const jobsAPI = {\n  // Get all jobs\n  getJobs: (params = {}) => {\n    return api.get('/api/jobs', {\n      params\n    });\n  },\n  // Get job by ID\n  getJob: id => {\n    return api.get(`/api/jobs/${id}`);\n  },\n  // Create job\n  createJob: jobData => {\n    return api.post('/api/jobs', jobData);\n  },\n  // Update job\n  updateJob: (id, jobData) => {\n    return api.put(`/api/jobs/${id}`, jobData);\n  },\n  // Delete job\n  deleteJob: id => {\n    return api.delete(`/api/jobs/${id}`);\n  },\n  // Cancel job\n  cancelJob: id => {\n    return api.post(`/api/jobs/${id}/cancel`);\n  },\n  // Retry job\n  retryJob: id => {\n    return api.post(`/api/jobs/${id}/retry`);\n  },\n  // Get job statistics\n  getJobStats: () => {\n    return api.get('/api/jobs/stats');\n  }\n};\n\n// Results API\nexport const resultsAPI = {\n  // Get results for a job\n  getResults: (jobId, params = {}) => {\n    return api.get(`/api/jobs/${jobId}/results`, {\n      params\n    });\n  },\n  // Download results as CSV\n  downloadResults: jobId => {\n    return api.get(`/api/jobs/${jobId}/result`, {\n      responseType: 'blob'\n    });\n  }\n};\n\n// Dashboard API with 404 fallback and normalization\nexport const dashboardAPI = {\n  // Get dashboard stats with fallbacks\n  getStats: async () => {\n    const getStoredToken = () => localStorage.getItem('authToken') || localStorage.getItem('token') || '';\n    const tryAbsoluteUrl = async url => {\n      const token = getStoredToken();\n      const headers = token ? {\n        Authorization: `Bearer ${token}`\n      } : {};\n      const resp = await axios.get(url, {\n        headers,\n        params: {\n          _t: Date.now()\n        }\n      });\n      return resp.data || resp;\n    };\n\n    // Helper to detect HTML 404 pages like \"Cannot GET /api/dashboard/stats\"\n    const isLikelyHtmlNotFound = data => {\n      if (typeof data === 'string') {\n        const s = data.toLowerCase();\n        return s.includes('<html') && (s.includes('cannot get') || s.includes('cannot post'));\n      }\n      return false;\n    };\n\n    // Normalize various backend response shapes into a single structure\n    const normalizeDashboardResponse = resp => {\n      var _ref, _ref2, _payload$totalJobs, _ref3, _ref4, _payload$activeJobs, _ref5, _ref6, _payload$pendingJobs, _ref7, _ref8, _payload$failedJobs, _ref9, _payload$totalResults, _ref0, _payload$successRate, _ref1, _payload$jobsThisWeek, _ref10, _payload$resultsThisW;\n      const root = resp && resp.data ? resp.data : resp;\n      const payload = (root === null || root === void 0 ? void 0 : root.data) || (root === null || root === void 0 ? void 0 : root.stats) || root;\n      const stats = (payload === null || payload === void 0 ? void 0 : payload.stats) || {};\n      const recentJobs = (payload === null || payload === void 0 ? void 0 : payload.recentJobs) || (root === null || root === void 0 ? void 0 : root.recentJobs) || [];\n      const totalJobs = (_ref = (_ref2 = (_payload$totalJobs = payload === null || payload === void 0 ? void 0 : payload.totalJobs) !== null && _payload$totalJobs !== void 0 ? _payload$totalJobs : payload === null || payload === void 0 ? void 0 : payload.total_jobs) !== null && _ref2 !== void 0 ? _ref2 : stats === null || stats === void 0 ? void 0 : stats.completed) !== null && _ref !== void 0 ? _ref : 0;\n      const activeJobs = (_ref3 = (_ref4 = (_payload$activeJobs = payload === null || payload === void 0 ? void 0 : payload.activeJobs) !== null && _payload$activeJobs !== void 0 ? _payload$activeJobs : payload === null || payload === void 0 ? void 0 : payload.active_jobs) !== null && _ref4 !== void 0 ? _ref4 : stats === null || stats === void 0 ? void 0 : stats.running) !== null && _ref3 !== void 0 ? _ref3 : 0;\n      const pendingJobs = (_ref5 = (_ref6 = (_payload$pendingJobs = payload === null || payload === void 0 ? void 0 : payload.pendingJobs) !== null && _payload$pendingJobs !== void 0 ? _payload$pendingJobs : payload === null || payload === void 0 ? void 0 : payload.pending_jobs) !== null && _ref6 !== void 0 ? _ref6 : stats === null || stats === void 0 ? void 0 : stats.queued) !== null && _ref5 !== void 0 ? _ref5 : 0;\n      const failedJobs = (_ref7 = (_ref8 = (_payload$failedJobs = payload === null || payload === void 0 ? void 0 : payload.failedJobs) !== null && _payload$failedJobs !== void 0 ? _payload$failedJobs : payload === null || payload === void 0 ? void 0 : payload.failed_jobs) !== null && _ref8 !== void 0 ? _ref8 : stats === null || stats === void 0 ? void 0 : stats.failed) !== null && _ref7 !== void 0 ? _ref7 : 0;\n      const totalResults = (_ref9 = (_payload$totalResults = payload === null || payload === void 0 ? void 0 : payload.totalResults) !== null && _payload$totalResults !== void 0 ? _payload$totalResults : payload === null || payload === void 0 ? void 0 : payload.total_results) !== null && _ref9 !== void 0 ? _ref9 : 0;\n      const successRate = (_ref0 = (_payload$successRate = payload === null || payload === void 0 ? void 0 : payload.successRate) !== null && _payload$successRate !== void 0 ? _payload$successRate : payload === null || payload === void 0 ? void 0 : payload.success_rate) !== null && _ref0 !== void 0 ? _ref0 : 0;\n      const jobsThisWeek = (_ref1 = (_payload$jobsThisWeek = payload === null || payload === void 0 ? void 0 : payload.jobsThisWeek) !== null && _payload$jobsThisWeek !== void 0 ? _payload$jobsThisWeek : payload === null || payload === void 0 ? void 0 : payload.jobs_this_week) !== null && _ref1 !== void 0 ? _ref1 : 0;\n      const resultsThisWeek = (_ref10 = (_payload$resultsThisW = payload === null || payload === void 0 ? void 0 : payload.resultsThisWeek) !== null && _payload$resultsThisW !== void 0 ? _payload$resultsThisW : payload === null || payload === void 0 ? void 0 : payload.results_this_week) !== null && _ref10 !== void 0 ? _ref10 : 0;\n      return {\n        success: true,\n        data: {\n          totalJobs,\n          activeJobs,\n          pendingJobs,\n          failedJobs,\n          totalResults,\n          successRate,\n          jobsThisWeek,\n          resultsThisWeek,\n          recentJobs\n        }\n      };\n    };\n    try {\n      // Primary endpoint (current baseURL)\n      const resp = await api.get('/api/dashboard/stats');\n      return normalizeDashboardResponse(resp);\n    } catch (error) {\n      var _error$response15, _error$response16;\n      const status = (error === null || error === void 0 ? void 0 : error.status) || (error === null || error === void 0 ? void 0 : (_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : _error$response15.status);\n      const raw = error === null || error === void 0 ? void 0 : (_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : _error$response16.data;\n      const notFound = status === 404 || isLikelyHtmlNotFound(raw);\n      if (!notFound) {\n        throw error;\n      }\n\n      // Fallback chain (same host)\n      const fallbacks = ['/api/stats', '/api/jobs/stats'];\n      for (const path of fallbacks) {\n        try {\n          const fallbackResp = await api.get(path);\n          return normalizeDashboardResponse(fallbackResp);\n        } catch (fallbackErr) {\n          var _fallbackErr$response, _fallbackErr$response2;\n          const fbStatus = (fallbackErr === null || fallbackErr === void 0 ? void 0 : fallbackErr.status) || (fallbackErr === null || fallbackErr === void 0 ? void 0 : (_fallbackErr$response = fallbackErr.response) === null || _fallbackErr$response === void 0 ? void 0 : _fallbackErr$response.status);\n          const fbRaw = fallbackErr === null || fallbackErr === void 0 ? void 0 : (_fallbackErr$response2 = fallbackErr.response) === null || _fallbackErr$response2 === void 0 ? void 0 : _fallbackErr$response2.data;\n          const fbNotFound = fbStatus === 404 || isLikelyHtmlNotFound(fbRaw);\n          if (!fbNotFound) {\n            // Other error type; stop here\n            throw fallbackErr;\n          }\n          // else continue to next fallback\n        }\n      }\n\n      // Legacy server fallback (port 5002), try dashboard first\n      const legacyBase = 'http://localhost:5002';\n      try {\n        const legacyResp = await tryAbsoluteUrl(`${legacyBase}/api/dashboard/stats`);\n        return normalizeDashboardResponse(legacyResp);\n      } catch (legacyErr) {\n        var _legacyErr$response, _legacyErr$response2;\n        const ls = (legacyErr === null || legacyErr === void 0 ? void 0 : legacyErr.status) || (legacyErr === null || legacyErr === void 0 ? void 0 : (_legacyErr$response = legacyErr.response) === null || _legacyErr$response === void 0 ? void 0 : _legacyErr$response.status);\n        const lr = legacyErr === null || legacyErr === void 0 ? void 0 : (_legacyErr$response2 = legacyErr.response) === null || _legacyErr$response2 === void 0 ? void 0 : _legacyErr$response2.data;\n        const legacyNotFound = ls === 404 || isLikelyHtmlNotFound(lr);\n        if (!legacyNotFound && ls) {\n          throw legacyErr;\n        }\n      }\n\n      // As a last resort, fetch jobs list and compute basic stats\n      try {\n        const jobsResp = await tryAbsoluteUrl(`${legacyBase}/api/jobs`);\n        const jobsPayload = (jobsResp === null || jobsResp === void 0 ? void 0 : jobsResp.data) || (jobsResp === null || jobsResp === void 0 ? void 0 : jobsResp.jobs) || jobsResp || [];\n        const jobs = Array.isArray(jobsPayload) ? jobsPayload : jobsPayload.jobs || [];\n        const totalJobs = jobs.length;\n        const completedJobs = jobs.filter(j => j.status === 'completed').length;\n        const runningJobs = jobs.filter(j => j.status === 'running').length;\n        const pausedJobs = jobs.filter(j => j.status === 'paused').length;\n        const failedJobs = jobs.filter(j => j.status === 'failed').length;\n        const pendingJobs = jobs.filter(j => j.status === 'pending' || j.status === 'queued').length;\n        const activeJobs = runningJobs + pausedJobs;\n        const totalResults = jobs.reduce((sum, j) => sum + (j.resultCount || j.result_count || 0), 0);\n        const successRate = totalJobs > 0 ? Math.round(completedJobs / totalJobs * 100) : 0;\n        const recentJobs = jobs.slice(0, 5);\n        return {\n          success: true,\n          data: {\n            totalJobs: completedJobs,\n            activeJobs,\n            pendingJobs,\n            failedJobs,\n            totalResults,\n            successRate,\n            jobsThisWeek: 0,\n            resultsThisWeek: 0,\n            recentJobs\n          }\n        };\n      } catch (_) {\n        // ignore and fall through to empty structure\n      }\n\n      // If all fallbacks fail with 404, return a safe empty structure\n      return {\n        success: true,\n        data: {\n          totalJobs: 0,\n          activeJobs: 0,\n          pendingJobs: 0,\n          failedJobs: 0,\n          totalResults: 0,\n          successRate: 0,\n          jobsThisWeek: 0,\n          resultsThisWeek: 0,\n          recentJobs: []\n        }\n      };\n    }\n  }\n};\n\n// LinkedIn Accounts API\nexport const linkedinAccountsAPI = {\n  // Get all accounts\n  getAccounts: () => {\n    return api.get('/api/linkedin-accounts');\n  },\n  // Get account statistics\n  getStats: () => {\n    return api.get('/api/linkedin-accounts/stats');\n  },\n  // Add account with cookies\n  addWithCookies: formData => {\n    return api.post('/api/linkedin-accounts/add-with-cookies', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  // Delete account\n  deleteAccount: accountId => {\n    return api.delete(`/api/linkedin-accounts/${accountId}`);\n  },\n  // Bulk upload\n  bulkUpload: formData => {\n    return api.post('/api/linkedin-accounts/bulk', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n};\n\n// Health API for testing connectivity\nexport const healthAPI = {\n  check: () => api.get('/health')\n};\nexport default api;","map":{"version":3,"names":["axios","normalizeLoginResponse","respData","_data$data","_data$data2","_data$data3","_data$data4","data","authToken","token","accessToken","user","profile","refreshToken","success","Boolean","ok","message","error","err","deriveCandidateBases","_window$location","envBase","process","env","REACT_APP_API_URL","storedBase","window","localStorage","getItem","fromOrigin","location","origin","includes","replace","candidates","Array","from","Set","filter","getInitialBaseURL","list","persistBaseURL","base","setItem","__API_BASE_URL__","_","api","create","baseURL","timeout","headers","params","_t","Date","now","interceptors","request","use","config","_config$method","_config$headers$commo","console","log","method","toUpperCase","url","fullURL","authHeader","Authorization","common","tokenInStorage","substring","authHeaderSet","warn","Promise","reject","response","_response$config","status","newToken","_error$response","_error$response2","_error$config","_error$response3","_error$response4","_error$response5","_error$response6","_error$response7","_error$response8","_error$response9","_error$response1","_error$response1$data","_error$response10","statusText","code","fullError","_error$response0","errorMessage","originalError","loginInProgress","lastLoginAttempt","LOGIN_COOLDOWN","authAPI","setAuthToken","defaults","clearAuthToken","login","email","password","timeSinceLastAttempt","remainingCooldown","Math","ceil","post","normalized","_error$response11","_error$response12","_error$response$statu","_error$response13","_error$response14","e","Error","document","cookie","split","forEach","c","toUTCString","isNetworkError","test","b","altResp","_e$response","_e$response$data","msg","legacyResp","dataText","isNotFound","legacyData","register","userData","getProfile","get","updateProfile","profileData","put","changePassword","currentPassword","newPassword","forgotPassword","resetPassword","logout","jobsAPI","getJobs","getJob","id","createJob","jobData","updateJob","deleteJob","delete","cancelJob","retryJob","getJobStats","resultsAPI","getResults","jobId","downloadResults","responseType","dashboardAPI","getStats","getStoredToken","tryAbsoluteUrl","resp","isLikelyHtmlNotFound","s","toLowerCase","normalizeDashboardResponse","_ref","_ref2","_payload$totalJobs","_ref3","_ref4","_payload$activeJobs","_ref5","_ref6","_payload$pendingJobs","_ref7","_ref8","_payload$failedJobs","_ref9","_payload$totalResults","_ref0","_payload$successRate","_ref1","_payload$jobsThisWeek","_ref10","_payload$resultsThisW","root","payload","stats","recentJobs","totalJobs","total_jobs","completed","activeJobs","active_jobs","running","pendingJobs","pending_jobs","queued","failedJobs","failed_jobs","failed","totalResults","total_results","successRate","success_rate","jobsThisWeek","jobs_this_week","resultsThisWeek","results_this_week","_error$response15","_error$response16","raw","notFound","fallbacks","path","fallbackResp","fallbackErr","_fallbackErr$response","_fallbackErr$response2","fbStatus","fbRaw","fbNotFound","legacyBase","legacyErr","_legacyErr$response","_legacyErr$response2","ls","lr","legacyNotFound","jobsResp","jobsPayload","jobs","isArray","length","completedJobs","j","runningJobs","pausedJobs","reduce","sum","resultCount","result_count","round","slice","linkedinAccountsAPI","getAccounts","addWithCookies","formData","deleteAccount","accountId","bulkUpload","healthAPI","check"],"sources":["C:/Users/krush/OneDrive/Desktop/Final/linkedin-automation-saas/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Normalize login responses from different backend implementations\r\n// Returns a consistent shape: { success, authToken, user, refreshToken, message }\r\nfunction normalizeLoginResponse(respData) {\r\n  try {\r\n    const data = respData && respData.data ? respData.data : respData;\r\n\r\n    const authToken = (\r\n      data?.authToken ||\r\n      data?.token ||\r\n      data?.data?.token ||\r\n      data?.accessToken ||\r\n      data?.data?.accessToken ||\r\n      null\r\n    );\r\n\r\n    const user = (\r\n      data?.user ||\r\n      data?.data?.user ||\r\n      data?.profile ||\r\n      null\r\n    );\r\n\r\n    const refreshToken = (\r\n      data?.refreshToken ||\r\n      data?.data?.refreshToken ||\r\n      null\r\n    );\r\n\r\n    const success = Boolean(\r\n      data?.success === true ||\r\n      data?.ok === true ||\r\n      authToken\r\n    );\r\n\r\n    if (!success) {\r\n      const message = (\r\n        data?.message ||\r\n        data?.error ||\r\n        (typeof data === 'string' ? data : 'Login failed')\r\n      );\r\n      return { success: false, message };\r\n    }\r\n\r\n    return {\r\n      success: true,\r\n      authToken,\r\n      user,\r\n      refreshToken,\r\n      message: data?.message || 'Login successful',\r\n    };\r\n  } catch (err) {\r\n    return { success: false, message: 'Login response parsing error' };\r\n  }\r\n}\r\n\r\n// ---- Backend base URL resolution and fallback helpers ----\r\nfunction deriveCandidateBases() {\r\n  const envBase = process.env.REACT_APP_API_URL;\r\n  const storedBase = typeof window !== 'undefined' ? localStorage.getItem('API_BASE_URL') : null;\r\n  const fromOrigin = typeof window !== 'undefined' && window.location?.origin\r\n    ? (window.location.origin.includes(':3001')\r\n        ? window.location.origin.replace(':3001', ':5002')\r\n        : window.location.origin)\r\n    : null;\r\n  const candidates = [envBase, storedBase, fromOrigin, 'http://localhost:5002', 'http://localhost:5001', 'https://scralytics.com'];\r\n  return Array.from(new Set(candidates.filter(Boolean)));\r\n}\r\n\r\nfunction getInitialBaseURL() {\r\n  const list = deriveCandidateBases();\r\n  return list[0] || 'http://localhost:5002';\r\n}\r\n\r\nfunction persistBaseURL(base) {\r\n  try {\r\n    if (typeof window !== 'undefined' && base) {\r\n      localStorage.setItem('API_BASE_URL', base);\r\n      window.__API_BASE_URL__ = base;\r\n    }\r\n  } catch (_) {}\r\n}\r\n\r\n// Create axios instance with resilient base URL\r\nconst api = axios.create({\r\n  baseURL: getInitialBaseURL(),\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  params: {\r\n    _t: Date.now() // Cache busting parameter\r\n  }\r\n});\r\n\r\n// Request interceptor with logging and auth\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Add logging for debugging\r\n    console.log('üåê API Request:', {\r\n      method: config.method?.toUpperCase(),\r\n      url: config.url,\r\n      baseURL: config.baseURL,\r\n      fullURL: `${config.baseURL}${config.url}`\r\n    });\r\n    \r\n    // Token is set via authAPI.setAuthToken() - no need to set here\r\n    // Debug token presence\r\n    const token = localStorage.getItem('authToken') || localStorage.getItem('token');\r\n    const authHeader = config.headers.Authorization || config.headers.common?.Authorization;\r\n    console.log('üîê Frontend Token Debug:', { \r\n      tokenInStorage: token ? token.substring(0, 20) + '...' : 'null',\r\n      authHeaderSet: authHeader ? authHeader.substring(0, 30) + '...' : 'null'\r\n    });\r\n    \r\n    if (!authHeader && token) {\r\n      console.warn('‚ö†Ô∏è Token exists in storage but not in headers - setting manually');\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('‚ùå Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor with enhanced logging\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    // Log successful responses\r\n    console.log('‚úÖ API Response:', {\r\n      status: response.status,\r\n      url: response.config?.url,\r\n      data: response.data\r\n    });\r\n    \r\n    // Check for new token in response headers\r\n    const newToken = response.headers['x-new-token'];\r\n    if (newToken) {\r\n      localStorage.setItem('token', newToken);\r\n    }\r\n    \r\n    return response.data;\r\n  },\r\n  (error) => {\r\n    // Enhanced error logging\r\n    console.error('‚ùå API Response Error:', {\r\n      message: error.message,\r\n      status: error.response?.status,\r\n      statusText: error.response?.statusText,\r\n      url: error.config?.url,\r\n      data: error.response?.data,\r\n      headers: error.response?.headers,\r\n      code: error.code,\r\n      fullError: error\r\n    });\r\n    \r\n    // Add user-friendly error message\r\n    if (error.response?.status === 500) {\r\n      console.error('üî• Server Error: The server encountered an internal error. Please try again later.');\r\n    } else if (error.response?.status === 404) {\r\n      console.error('üîç Not Found: The requested resource was not found.');\r\n    } else if (error.response?.status === 403) {\r\n      console.error('üö´ Forbidden: You do not have permission to access this resource.');\r\n    }\r\n    \r\n    // Handle 401/403 errors (unauthorized/forbidden)\r\n    if (error.response?.status === 401 || error.response?.status === 403) {\r\n      console.warn('üîê Authentication failed or unauthorized response detected');\r\n      console.log('üîê Error details:', error.response?.data);\r\n      // Do NOT auto-clear tokens or redirect; let the app handle gracefully\r\n      // This avoids unexpected logout on background requests or transient errors\r\n    }\r\n    \r\n    // Return error in consistent format\r\n    const errorMessage = error.response?.data?.message || error.message || 'An error occurred';\r\n    return Promise.reject({\r\n      message: errorMessage,\r\n      status: error.response?.status,\r\n      response: error.response,\r\n      originalError: error\r\n    });\r\n  }\r\n);\r\n\r\n// Rate limiting state\r\nlet loginInProgress = false;\r\nlet lastLoginAttempt = 0;\r\nconst LOGIN_COOLDOWN = 2000; // 2 seconds between login attempts\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  // Set auth token\r\n  setAuthToken: (token) => {\r\n    if (token) {\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n      delete api.defaults.headers.common['Authorization'];\r\n    }\r\n  },\r\n  \r\n  // Clear auth token\r\n  clearAuthToken: () => {\r\n    delete api.defaults.headers.common['Authorization'];\r\n  },\r\n  \r\n  // Login with rate limiting\r\n  login: async (email, password) => {\r\n    console.log('üîê Login attempt triggered for:', email);\r\n    \r\n    // Prevent multiple parallel logins\r\n    if (loginInProgress) {\r\n      console.warn('‚ö†Ô∏è Login already in progress, ignoring duplicate request');\r\n      return Promise.reject({ message: 'Login already in progress' });\r\n    }\r\n    \r\n    // Check cooldown period\r\n    const now = Date.now();\r\n    const timeSinceLastAttempt = now - lastLoginAttempt;\r\n    if (timeSinceLastAttempt < LOGIN_COOLDOWN) {\r\n      const remainingCooldown = LOGIN_COOLDOWN - timeSinceLastAttempt;\r\n      console.warn(`‚è∞ Login cooldown active, wait ${remainingCooldown}ms`);\r\n      return Promise.reject({ \r\n        message: `Please wait ${Math.ceil(remainingCooldown / 1000)} seconds before trying again` \r\n      });\r\n    }\r\n    \r\n    loginInProgress = true;\r\n    lastLoginAttempt = now;\r\n    \r\n    try {\r\n      const respData = await api.post('/api/login', { email, password });\r\n      console.log('‚úÖ Login successful via /api/login');\r\n      // Normalize response shape\r\n      const normalized = normalizeLoginResponse(respData);\r\n      return normalized;\r\n    } catch (error) {\r\n      console.error('‚ùå Login failed:', error.message);\r\n      \r\n      // Handle specific error cases\r\n      if (error.response?.status === 429) {\r\n        console.warn('üö´ Too many login attempts detected');\r\n        const e = new Error('Too many login attempts. Please wait before trying again.');\r\n        e.status = 429;\r\n        e.response = error.response;\r\n        throw e;\r\n      }\r\n      \r\n      if (error.response?.status === 431) {\r\n        console.warn('üì¶ Request headers too large - clearing cookies');\r\n        // Clear potentially oversized cookies\r\n        document.cookie.split(\";\").forEach(function(c) { \r\n          document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\"); \r\n        });\r\n        const e = new Error('Request headers too large. Cookies cleared, please try again.');\r\n        e.status = 431;\r\n        e.response = error.response;\r\n        throw e;\r\n      }\r\n      \r\n      // If we hit a network error (no response), automatically try alternative bases\r\n      const isNetworkError = !error.response && (/Network Error/i.test(error.message) || error.code === 'ERR_NETWORK');\r\n      if (isNetworkError) {\r\n        console.warn('üåê Network error detected. Trying alternative API bases...');\r\n        const candidates = deriveCandidateBases().filter(b => b && b !== api.defaults.baseURL);\r\n        for (const base of candidates) {\r\n          try {\r\n            console.log('üîÅ Attempting login against base:', base);\r\n            api.defaults.baseURL = base;\r\n            const altResp = await api.post('/api/login', { email, password });\r\n            const normalized = normalizeLoginResponse(altResp);\r\n            if (normalized.success) {\r\n              console.log('‚úÖ Login successful after base switch:', base);\r\n              persistBaseURL(base);\r\n              return normalized;\r\n            }\r\n          } catch (e) {\r\n            const msg = e?.message || e?.response?.data?.message || 'unknown';\r\n            console.warn('‚ö†Ô∏è Base attempt failed:', base, '-', msg);\r\n          }\r\n          // Try legacy path on this base if /api/login not found\r\n          try {\r\n            const legacyResp = await api.post('/api/auth/login', { email, password });\r\n            const normalized = normalizeLoginResponse(legacyResp);\r\n            if (normalized.success) {\r\n              console.log('‚úÖ Legacy /api/auth/login successful after base switch:', base);\r\n              persistBaseURL(base);\r\n              return normalized;\r\n            }\r\n          } catch (_) {}\r\n        }\r\n        console.error('‚ùå All alternative bases failed. Returning original error.');\r\n      }\r\n\r\n      // Fallback: if alias not found, try legacy /api/auth/login\r\n      const status = (error?.response?.status ?? error?.status);\r\n      const dataText = typeof error?.response?.data === 'string' ? error.response.data : '';\r\n      const isNotFound = status === 404 || (dataText && dataText.includes('Cannot POST /api/login'));\r\n      if (isNotFound) {\r\n        console.warn('üîÅ /api/login alias not available, falling back to /api/auth/login');\r\n        const legacyData = await api.post('/api/auth/login', { email, password });\r\n        console.log('‚úÖ Login successful via /api/auth/login');\r\n        const normalized = normalizeLoginResponse(legacyData);\r\n        return normalized;\r\n      }\r\n      \r\n      throw error;\r\n    } finally {\r\n      loginInProgress = false;\r\n    }\r\n  },\r\n  \r\n  // Register\r\n  register: (userData) => {\r\n    return api.post('/api/auth/register', userData);\r\n  },\r\n  \r\n  // Get profile\r\n  getProfile: () => {\r\n    return api.get('/api/auth/me');\r\n  },\r\n  \r\n  // Update profile\r\n  updateProfile: (profileData) => {\r\n    return api.put('/api/auth/me', profileData);\r\n  },\r\n  \r\n  // Change password\r\n  changePassword: (currentPassword, newPassword) => {\r\n    return api.put('/api/auth/password', {\r\n      currentPassword,\r\n      newPassword,\r\n    });\r\n  },\r\n  \r\n  // Forgot password\r\n  forgotPassword: (email) => {\r\n    return api.post('/api/auth/forgot-password', { email });\r\n  },\r\n  \r\n  // Reset password\r\n  resetPassword: (token, password) => {\r\n    return api.post('/api/auth/reset-password', { token, password });\r\n  },\r\n  \r\n  // Refresh token\r\n  refreshToken: (refreshToken) => {\r\n    return api.post('/api/auth/refresh', { refreshToken });\r\n  },\r\n  \r\n  // Logout\r\n  logout: () => {\r\n    return api.post('/api/auth/logout');\r\n  },\r\n};\r\n\r\n// Jobs API\r\nexport const jobsAPI = {\r\n  // Get all jobs\r\n  getJobs: (params = {}) => {\r\n    return api.get('/api/jobs', { params });\r\n  },\r\n  \r\n  // Get job by ID\r\n  getJob: (id) => {\r\n    return api.get(`/api/jobs/${id}`);\r\n  },\r\n  \r\n  // Create job\r\n  createJob: (jobData) => {\r\n    return api.post('/api/jobs', jobData);\r\n  },\r\n  \r\n  // Update job\r\n  updateJob: (id, jobData) => {\r\n    return api.put(`/api/jobs/${id}`, jobData);\r\n  },\r\n  \r\n  // Delete job\r\n  deleteJob: (id) => {\r\n    return api.delete(`/api/jobs/${id}`);\r\n  },\r\n  \r\n  // Cancel job\r\n  cancelJob: (id) => {\r\n    return api.post(`/api/jobs/${id}/cancel`);\r\n  },\r\n  \r\n  // Retry job\r\n  retryJob: (id) => {\r\n    return api.post(`/api/jobs/${id}/retry`);\r\n  },\r\n  \r\n  // Get job statistics\r\n  getJobStats: () => {\r\n    return api.get('/api/jobs/stats');\r\n  },\r\n};\r\n\r\n// Results API\r\nexport const resultsAPI = {\r\n  // Get results for a job\r\n  getResults: (jobId, params = {}) => {\r\n    return api.get(`/api/jobs/${jobId}/results`, { params });\r\n  },\r\n  \r\n  // Download results as CSV\r\n  downloadResults: (jobId) => {\r\n    return api.get(`/api/jobs/${jobId}/result`, { responseType: 'blob' });\r\n  },\r\n};\r\n\r\n// Dashboard API with 404 fallback and normalization\r\nexport const dashboardAPI = {\r\n  // Get dashboard stats with fallbacks\r\n  getStats: async () => {\r\n    const getStoredToken = () => (\r\n      localStorage.getItem('authToken') || localStorage.getItem('token') || ''\r\n    );\r\n\r\n    const tryAbsoluteUrl = async (url) => {\r\n      const token = getStoredToken();\r\n      const headers = token ? { Authorization: `Bearer ${token}` } : {};\r\n      const resp = await axios.get(url, { headers, params: { _t: Date.now() } });\r\n      return resp.data || resp;\r\n    };\r\n\r\n    // Helper to detect HTML 404 pages like \"Cannot GET /api/dashboard/stats\"\r\n    const isLikelyHtmlNotFound = (data) => {\r\n      if (typeof data === 'string') {\r\n        const s = data.toLowerCase();\r\n        return s.includes('<html') && (s.includes('cannot get') || s.includes('cannot post'));\r\n      }\r\n      return false;\r\n    };\r\n\r\n    // Normalize various backend response shapes into a single structure\r\n    const normalizeDashboardResponse = (resp) => {\r\n      const root = resp && resp.data ? resp.data : resp;\r\n      const payload = root?.data || root?.stats || root;\r\n\r\n      const stats = payload?.stats || {};\r\n      const recentJobs = payload?.recentJobs || root?.recentJobs || [];\r\n\r\n      const totalJobs = (\r\n        payload?.totalJobs ?? payload?.total_jobs ?? stats?.completed ?? 0\r\n      );\r\n      const activeJobs = (\r\n        payload?.activeJobs ?? payload?.active_jobs ?? stats?.running ?? 0\r\n      );\r\n      const pendingJobs = (\r\n        payload?.pendingJobs ?? payload?.pending_jobs ?? stats?.queued ?? 0\r\n      );\r\n      const failedJobs = (\r\n        payload?.failedJobs ?? payload?.failed_jobs ?? stats?.failed ?? 0\r\n      );\r\n      const totalResults = (\r\n        payload?.totalResults ?? payload?.total_results ?? 0\r\n      );\r\n      const successRate = (\r\n        payload?.successRate ?? payload?.success_rate ?? 0\r\n      );\r\n      const jobsThisWeek = (\r\n        payload?.jobsThisWeek ?? payload?.jobs_this_week ?? 0\r\n      );\r\n      const resultsThisWeek = (\r\n        payload?.resultsThisWeek ?? payload?.results_this_week ?? 0\r\n      );\r\n\r\n      return {\r\n        success: true,\r\n        data: {\r\n          totalJobs,\r\n          activeJobs,\r\n          pendingJobs,\r\n          failedJobs,\r\n          totalResults,\r\n          successRate,\r\n          jobsThisWeek,\r\n          resultsThisWeek,\r\n          recentJobs\r\n        }\r\n      };\r\n    };\r\n\r\n    try {\r\n      // Primary endpoint (current baseURL)\r\n      const resp = await api.get('/api/dashboard/stats');\r\n      return normalizeDashboardResponse(resp);\r\n    } catch (error) {\r\n      const status = error?.status || error?.response?.status;\r\n      const raw = error?.response?.data;\r\n      const notFound = status === 404 || isLikelyHtmlNotFound(raw);\r\n\r\n      if (!notFound) {\r\n        throw error;\r\n      }\r\n\r\n      // Fallback chain (same host)\r\n      const fallbacks = ['/api/stats', '/api/jobs/stats'];\r\n      for (const path of fallbacks) {\r\n        try {\r\n          const fallbackResp = await api.get(path);\r\n          return normalizeDashboardResponse(fallbackResp);\r\n        } catch (fallbackErr) {\r\n          const fbStatus = fallbackErr?.status || fallbackErr?.response?.status;\r\n          const fbRaw = fallbackErr?.response?.data;\r\n          const fbNotFound = fbStatus === 404 || isLikelyHtmlNotFound(fbRaw);\r\n          if (!fbNotFound) {\r\n            // Other error type; stop here\r\n            throw fallbackErr;\r\n          }\r\n          // else continue to next fallback\r\n        }\r\n      }\r\n\r\n      // Legacy server fallback (port 5002), try dashboard first\r\n      const legacyBase = 'http://localhost:5002';\r\n      try {\r\n        const legacyResp = await tryAbsoluteUrl(`${legacyBase}/api/dashboard/stats`);\r\n        return normalizeDashboardResponse(legacyResp);\r\n      } catch (legacyErr) {\r\n        const ls = legacyErr?.status || legacyErr?.response?.status;\r\n        const lr = legacyErr?.response?.data;\r\n        const legacyNotFound = ls === 404 || isLikelyHtmlNotFound(lr);\r\n        if (!legacyNotFound && ls) {\r\n          throw legacyErr;\r\n        }\r\n      }\r\n\r\n      // As a last resort, fetch jobs list and compute basic stats\r\n      try {\r\n        const jobsResp = await tryAbsoluteUrl(`${legacyBase}/api/jobs`);\r\n        const jobsPayload = jobsResp?.data || jobsResp?.jobs || jobsResp || [];\r\n        const jobs = Array.isArray(jobsPayload) ? jobsPayload : (jobsPayload.jobs || []);\r\n        const totalJobs = jobs.length;\r\n        const completedJobs = jobs.filter(j => j.status === 'completed').length;\r\n        const runningJobs = jobs.filter(j => j.status === 'running').length;\r\n        const pausedJobs = jobs.filter(j => j.status === 'paused').length;\r\n        const failedJobs = jobs.filter(j => j.status === 'failed').length;\r\n        const pendingJobs = jobs.filter(j => j.status === 'pending' || j.status === 'queued').length;\r\n        const activeJobs = runningJobs + pausedJobs;\r\n        const totalResults = jobs.reduce((sum, j) => sum + (j.resultCount || j.result_count || 0), 0);\r\n        const successRate = totalJobs > 0 ? Math.round((completedJobs / totalJobs) * 100) : 0;\r\n        const recentJobs = jobs.slice(0, 5);\r\n\r\n        return {\r\n          success: true,\r\n          data: {\r\n            totalJobs: completedJobs,\r\n            activeJobs,\r\n            pendingJobs,\r\n            failedJobs,\r\n            totalResults,\r\n            successRate,\r\n            jobsThisWeek: 0,\r\n            resultsThisWeek: 0,\r\n            recentJobs\r\n          }\r\n        };\r\n      } catch (_) {\r\n        // ignore and fall through to empty structure\r\n      }\r\n\r\n      // If all fallbacks fail with 404, return a safe empty structure\r\n      return {\r\n        success: true,\r\n        data: {\r\n          totalJobs: 0,\r\n          activeJobs: 0,\r\n          pendingJobs: 0,\r\n          failedJobs: 0,\r\n          totalResults: 0,\r\n          successRate: 0,\r\n          jobsThisWeek: 0,\r\n          resultsThisWeek: 0,\r\n          recentJobs: []\r\n        }\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\n// LinkedIn Accounts API\r\nexport const linkedinAccountsAPI = {\r\n  // Get all accounts\r\n  getAccounts: () => {\r\n    return api.get('/api/linkedin-accounts');\r\n  },\r\n  \r\n  // Get account statistics\r\n  getStats: () => {\r\n    return api.get('/api/linkedin-accounts/stats');\r\n  },\r\n  \r\n  // Add account with cookies\r\n  addWithCookies: (formData) => {\r\n    return api.post('/api/linkedin-accounts/add-with-cookies', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n  \r\n  // Delete account\r\n  deleteAccount: (accountId) => {\r\n    return api.delete(`/api/linkedin-accounts/${accountId}`);\r\n  },\r\n  \r\n  // Bulk upload\r\n  bulkUpload: (formData) => {\r\n    return api.post('/api/linkedin-accounts/bulk', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n};\r\n\r\n// Health API for testing connectivity\r\nexport const healthAPI = {\r\n  check: () => api.get('/health'),\r\n};\r\n\r\nexport default api;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}