{"ast":null,"code":"import axios from 'axios';\n\n// ---- Lightweight log-level gating to reduce noisy logs ----\nconst LOG_LEVEL = (process.env.REACT_APP_LOG_LEVEL || typeof window !== 'undefined' && localStorage.getItem('LOG_LEVEL') || 'info').toLowerCase();\nconst LEVELS = {\n  error: 0,\n  warn: 1,\n  info: 2,\n  debug: 3\n};\nfunction shouldLog(level) {\n  var _LEVELS$LOG_LEVEL, _LEVELS$level;\n  const current = (_LEVELS$LOG_LEVEL = LEVELS[LOG_LEVEL]) !== null && _LEVELS$LOG_LEVEL !== void 0 ? _LEVELS$LOG_LEVEL : 2;\n  const target = (_LEVELS$level = LEVELS[level]) !== null && _LEVELS$level !== void 0 ? _LEVELS$level : 2;\n  return target <= current;\n}\nfunction log(level, ...args) {\n  if (!shouldLog(level)) return;\n  const fn = level === 'debug' ? 'log' : level;\n  try {\n    console[fn](...args);\n  } catch (_) {/* no-op */}\n}\n\n// Normalize login responses from different backend implementations\n// Returns a consistent shape: { success, authToken, user, refreshToken, message }\nfunction normalizeLoginResponse(respData) {\n  try {\n    var _data$data, _data$data2, _data$data3, _data$data4, _data$data5, _data$data6, _data$data7, _data$data8, _data$data9;\n    const data = respData && respData.data ? respData.data : respData;\n\n    // Capture token across multiple possible field names\n    let authToken = (data === null || data === void 0 ? void 0 : data.accessToken) || (data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.accessToken) || (data === null || data === void 0 ? void 0 : data.token) || (data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.token) || (data === null || data === void 0 ? void 0 : data.authToken) || (data === null || data === void 0 ? void 0 : (_data$data3 = data.data) === null || _data$data3 === void 0 ? void 0 : _data$data3.authToken) || (data === null || data === void 0 ? void 0 : data.access_token) || (data === null || data === void 0 ? void 0 : (_data$data4 = data.data) === null || _data$data4 === void 0 ? void 0 : _data$data4.access_token) || (data === null || data === void 0 ? void 0 : data.jwt) || (data === null || data === void 0 ? void 0 : (_data$data5 = data.data) === null || _data$data5 === void 0 ? void 0 : _data$data5.jwt) || (data === null || data === void 0 ? void 0 : data.jwtToken) || (data === null || data === void 0 ? void 0 : (_data$data6 = data.data) === null || _data$data6 === void 0 ? void 0 : _data$data6.jwtToken) || (data === null || data === void 0 ? void 0 : data.auth_token) || (data === null || data === void 0 ? void 0 : (_data$data7 = data.data) === null || _data$data7 === void 0 ? void 0 : _data$data7.auth_token) || null;\n\n    // Fallback: if token not present in body, try cookie `token`\n    if (!authToken && typeof document !== 'undefined') {\n      try {\n        const m = document.cookie && document.cookie.match(/(?:^|;\\s*)token=([^;]+)/);\n        if (m && m[1]) {\n          authToken = decodeURIComponent(m[1]);\n        }\n      } catch (_) {}\n    }\n    const user = (data === null || data === void 0 ? void 0 : data.user) || (data === null || data === void 0 ? void 0 : (_data$data8 = data.data) === null || _data$data8 === void 0 ? void 0 : _data$data8.user) || (data === null || data === void 0 ? void 0 : data.profile) || null;\n    const refreshToken = (data === null || data === void 0 ? void 0 : data.refreshToken) || (data === null || data === void 0 ? void 0 : (_data$data9 = data.data) === null || _data$data9 === void 0 ? void 0 : _data$data9.refreshToken) || null;\n\n    // Consider login successful ONLY when we have a token\n    const success = Boolean(authToken);\n    if (!success) {\n      const message = (data === null || data === void 0 ? void 0 : data.message) || (data === null || data === void 0 ? void 0 : data.error) || (typeof data === 'string' ? data : 'Login failed');\n      return {\n        success: false,\n        message\n      };\n    }\n    return {\n      success: true,\n      authToken,\n      user,\n      refreshToken,\n      message: (data === null || data === void 0 ? void 0 : data.message) || 'Login successful'\n    };\n  } catch (err) {\n    return {\n      success: false,\n      message: 'Login response parsing error'\n    };\n  }\n}\n\n// ---- Backend base URL resolution and fallback helpers ----\nfunction isValidHttpUrl(str) {\n  try {\n    if (!str || typeof str !== 'string') return false;\n    const u = new URL(str);\n    return u.protocol === 'http:' || u.protocol === 'https:';\n  } catch {\n    return false;\n  }\n}\nfunction deriveCandidateBases() {\n  var _window$location;\n  // Read env and normalize for trailing slashes to avoid double-slash URLs\n  let envBase = process.env.REACT_APP_API_URL;\n  if (typeof envBase === 'string') {\n    envBase = envBase.trim();\n    // Strip trailing slash to ensure endpoint concatenation is consistent\n    if (envBase.endsWith('/')) envBase = envBase.slice(0, -1);\n  }\n  const storedBase = typeof window !== 'undefined' ? localStorage.getItem('API_BASE_URL') : null;\n  const fromOrigin = typeof window !== 'undefined' && (_window$location = window.location) !== null && _window$location !== void 0 && _window$location.origin ? window.location.origin : null;\n  // Prefer common dev backend port 3001 before other fallbacks\n  const rawCandidates = [envBase, storedBase, fromOrigin, 'http://localhost:3001', 'http://localhost:5001', 'https://scralytics.com'];\n  const unique = Array.from(new Set(rawCandidates.filter(Boolean)));\n  return unique.filter(isValidHttpUrl);\n}\nfunction getInitialBaseURL() {\n  const list = deriveCandidateBases();\n  // Default to backend dev server on port 3001 when nothing else is set\n  return list[0] || 'http://localhost:3001';\n}\nfunction persistBaseURL(base) {\n  try {\n    if (typeof window !== 'undefined' && base && isValidHttpUrl(base)) {\n      localStorage.setItem('API_BASE_URL', base);\n      window.__API_BASE_URL__ = base;\n    }\n  } catch (_) {}\n}\n\n// Ensure axios has a valid baseURL; if not, set a sane fallback\nfunction ensureValidBaseURL(current) {\n  if (isValidHttpUrl(current)) return current;\n  const fallback = getInitialBaseURL();\n  return isValidHttpUrl(fallback) ? fallback : 'http://localhost:3001';\n}\n\n// Create axios instance with resilient base URL\nconst api = axios.create({\n  baseURL: getInitialBaseURL(),\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  params: {\n    _t: Date.now() // Cache busting parameter\n  }\n});\n\n// ---- Token refresh coordination (avoid parallel refresh storms) ----\nlet isRefreshingToken = false;\nlet refreshWaiters = [];\nconst subscribeTokenRefresh = cb => refreshWaiters.push(cb);\nconst notifyTokenRefreshed = token => {\n  try {\n    refreshWaiters.forEach(cb => cb(token));\n  } finally {\n    refreshWaiters = [];\n  }\n};\n\n// Request interceptor with logging and auth\napi.interceptors.request.use(config => {\n  var _config$method, _config$headers$commo;\n  // Guard against invalid baseURL before axios constructs the request\n  const fixedBase = ensureValidBaseURL(config.baseURL || api.defaults.baseURL);\n  if (fixedBase !== config.baseURL) {\n    config.baseURL = fixedBase;\n    api.defaults.baseURL = fixedBase;\n    log('warn', '🔧 Fixed invalid baseURL; using:', fixedBase);\n  }\n\n  // Add logging for debugging\n  log('info', '🌐 API Request:', {\n    method: (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(),\n    url: config.url || '(no-url)',\n    baseURL: config.baseURL || '(no-baseURL)',\n    fullURL: (() => {\n      const base = config.baseURL || api.defaults.baseURL;\n      const path = config.url || '';\n      if (!base) return path || '(no-url)';\n      // Avoid double slashes when concatenating\n      const normalizedBase = base.endsWith('/') ? base.slice(0, -1) : base;\n      const normalizedPath = path.startsWith('/') ? path : `/${path}`;\n      return `${normalizedBase}${normalizedPath}`;\n    })()\n  });\n\n  // Token is set via authAPI.setAuthToken() - no need to set here\n  // Debug token presence\n  let token = localStorage.getItem('authToken') || localStorage.getItem('token') || localStorage.getItem('accessToken') || localStorage.getItem('access_token') || localStorage.getItem('jwt') || localStorage.getItem('jwtToken') || localStorage.getItem('auth_token');\n  if (token && token.includes('{')) {\n    try {\n      const parsedToken = JSON.parse(token);\n      token = parsedToken.token || token;\n    } catch (e) {\n      log('error', 'Failed to parse token from localStorage', e);\n    }\n  }\n  const authHeader = config.headers.Authorization || ((_config$headers$commo = config.headers.common) === null || _config$headers$commo === void 0 ? void 0 : _config$headers$commo.Authorization);\n  log('debug', '🔐 Frontend Token Debug:', {\n    tokenInStorage: token ? token.substring(0, 20) + '...' : 'null',\n    authHeaderSet: authHeader ? authHeader.substring(0, 30) + '...' : 'null'\n  });\n  if (!authHeader && token) {\n    log('warn', '⚠️ Token exists in storage but not in headers - setting manually');\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  log('error', '❌ Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor with enhanced logging\napi.interceptors.response.use(response => {\n  var _response$config;\n  // Log successful responses\n  log('info', '✅ API Response:', {\n    status: response.status,\n    url: (_response$config = response.config) === null || _response$config === void 0 ? void 0 : _response$config.url,\n    data: response.data\n  });\n\n  // Check for new token in response headers\n  const newToken = response.headers['x-new-token'];\n  if (newToken) {\n    // Persist and apply refreshed token\n    try {\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('authToken', newToken);\n    } catch (_) {}\n    api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n    log('info', '🔄 Applied refreshed token from X-New-Token header');\n  }\n  return response.data;\n}, async error => {\n  var _error$response, _error$response2, _error$config, _error$response3, _error$response4, _error$response5, _error$response6, _error$response7, _error$response8, _error$response0, _error$response0$data, _error$response1;\n  // Enhanced error logging\n  log('error', '❌ API Response Error:', {\n    message: error.message,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    statusText: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusText,\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data,\n    headers: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.headers,\n    code: error.code,\n    fullError: error\n  });\n\n  // Add user-friendly error message\n  if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 500) {\n    log('error', '🔥 Server Error: The server encountered an internal error. Please try again later.');\n  } else if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 404) {\n    log('warn', '🔍 Not Found: The requested resource was not found.');\n  } else if (((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status) === 403) {\n    log('warn', '🚫 Forbidden: You do not have permission to access this resource.');\n  }\n  const status = (_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.status;\n  const originalRequest = error.config || {};\n  const url = (originalRequest === null || originalRequest === void 0 ? void 0 : originalRequest.url) || '';\n  const isAuthEndpoint = url.includes('/api/auth/login') || url.includes('/api/auth/register') || url.includes('/api/auth/refresh');\n\n  // Handle 401 with automatic refresh + retry (except on auth endpoints)\n  if (status === 401 && !isAuthEndpoint) {\n    const refreshToken = localStorage.getItem('refreshToken') || localStorage.getItem('refresh_token') || '';\n    if (!refreshToken) {\n      var _error$response9, _error$response9$data;\n      log('warn', '🔐 401 received and no refreshToken available');\n      // Inform extension and UI that re-authentication is required\n      try {\n        if (typeof window !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('scralytics:authRequired', {\n            detail: {\n              reason: 'NO_REFRESH_TOKEN',\n              url: url\n            }\n          }));\n        }\n      } catch (_) {}\n      const errorMessage = ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || error.message || 'Unauthorized';\n      return Promise.reject({\n        message: errorMessage,\n        status,\n        response: error.response,\n        originalError: error\n      });\n    }\n\n    // If a refresh is already in progress, queue this request\n    if (isRefreshingToken) {\n      log('info', '⏳ Waiting for ongoing token refresh to complete');\n      return new Promise(resolve => {\n        subscribeTokenRefresh(newToken => {\n          // Apply new token and retry original request\n          originalRequest.headers = originalRequest.headers || {};\n          originalRequest.headers['Authorization'] = `Bearer ${newToken}`;\n          resolve(api.request(originalRequest));\n        });\n      });\n    }\n\n    // Start refresh\n    isRefreshingToken = true;\n    try {\n      log('info', '🔄 Attempting token refresh...');\n      const refreshResp = await api.post('/api/auth/refresh', {\n        refreshToken\n      });\n      const root = refreshResp && refreshResp.data ? refreshResp.data : refreshResp;\n      const payload = (root === null || root === void 0 ? void 0 : root.data) || root;\n      const newToken = (payload === null || payload === void 0 ? void 0 : payload.accessToken) || (payload === null || payload === void 0 ? void 0 : payload.token) || (payload === null || payload === void 0 ? void 0 : payload.authToken) || null;\n      const newRefresh = (payload === null || payload === void 0 ? void 0 : payload.refreshToken) || null;\n      if (!newToken) {\n        throw new Error('Failed to refresh access token');\n      }\n\n      // Persist and apply new tokens\n      try {\n        localStorage.setItem('token', newToken);\n        localStorage.setItem('authToken', newToken);\n        if (newRefresh) {\n          localStorage.setItem('refreshToken', newRefresh);\n          localStorage.setItem('refresh_token', newRefresh);\n        }\n      } catch (_) {}\n      api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n      log('info', '✅ Token refresh succeeded; retrying original request');\n\n      // Notify queued requests\n      notifyTokenRefreshed(newToken);\n\n      // Best-effort: notify extension/content script of new token\n      try {\n        const userStr = localStorage.getItem('user');\n        const user = userStr ? JSON.parse(userStr) : null;\n        const apiBase = typeof window !== 'undefined' ? window.location.origin : '';\n        if (typeof window !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('scralytics:loginSuccess', {\n            detail: {\n              authToken: newToken,\n              refreshToken: newRefresh,\n              user,\n              apiBaseUrl: apiBase\n            }\n          }));\n        }\n      } catch (_) {}\n\n      // Retry original request with the new token\n      originalRequest.headers = originalRequest.headers || {};\n      originalRequest.headers['Authorization'] = `Bearer ${newToken}`;\n      return api.request(originalRequest);\n    } catch (refreshErr) {\n      log('error', '❌ Token refresh failed:', refreshErr);\n      // Do not auto-clear app state, but remove invalid tokens\n      try {\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('token');\n        // Keep refreshToken to allow manual retry if desired\n      } catch (_) {}\n      return Promise.reject({\n        message: (refreshErr === null || refreshErr === void 0 ? void 0 : refreshErr.message) || 'Token refresh failed',\n        status,\n        response: error.response,\n        originalError: error\n      });\n    } finally {\n      isRefreshingToken = false;\n    }\n  }\n\n  // Return error in consistent format\n  const errorMessage = ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : (_error$response0$data = _error$response0.data) === null || _error$response0$data === void 0 ? void 0 : _error$response0$data.message) || error.message || 'An error occurred';\n  return Promise.reject({\n    message: errorMessage,\n    status: (_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : _error$response1.status,\n    response: error.response,\n    originalError: error\n  });\n});\n\n// Rate limiting state\nlet loginInProgress = false;\nlet lastLoginAttempt = 0;\nconst LOGIN_COOLDOWN = 2000; // 2 seconds between login attempts\n\n// Auth API\nexport const authAPI = {\n  // Set auth token\n  setAuthToken: token => {\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete api.defaults.headers.common['Authorization'];\n    }\n  },\n  // Clear auth token\n  clearAuthToken: () => {\n    delete api.defaults.headers.common['Authorization'];\n  },\n  // Login with rate limiting\n  login: async (email, password) => {\n    log('info', '🔐 Login attempt triggered for:', email);\n\n    // Prevent multiple parallel logins\n    if (loginInProgress) {\n      log('warn', '⚠️ Login already in progress, ignoring duplicate request');\n      return Promise.reject({\n        message: 'Login already in progress'\n      });\n    }\n\n    // Check cooldown period\n    const now = Date.now();\n    const timeSinceLastAttempt = now - lastLoginAttempt;\n    if (timeSinceLastAttempt < LOGIN_COOLDOWN) {\n      const remainingCooldown = LOGIN_COOLDOWN - timeSinceLastAttempt;\n      log('warn', `⏰ Login cooldown active, wait ${remainingCooldown}ms`);\n      return Promise.reject({\n        message: `Please wait ${Math.ceil(remainingCooldown / 1000)} seconds before trying again`\n      });\n    }\n    loginInProgress = true;\n    lastLoginAttempt = now;\n    try {\n      // Prefer canonical endpoint first\n      const respData = await api.post('/api/auth/login', {\n        email,\n        password\n      });\n      log('info', '✅ Login successful via /api/auth/login');\n      // Normalize response shape\n      const normalized = normalizeLoginResponse(respData);\n      // Persist tokens, set auth header, and notify extension via event\n      if (normalized && normalized.success && normalized.authToken) {\n        var _api$defaults;\n        try {\n          // Store access token under common keys for the content script to discover\n          localStorage.setItem('authToken', normalized.authToken);\n          localStorage.setItem('token', normalized.authToken);\n          localStorage.setItem('accessToken', normalized.authToken);\n          localStorage.setItem('access_token', normalized.authToken);\n          // Store refresh token under both variants\n          if (normalized.refreshToken) {\n            localStorage.setItem('refreshToken', normalized.refreshToken);\n            localStorage.setItem('refresh_token', normalized.refreshToken);\n          }\n          // Persist user info if available\n          if (normalized.user) {\n            try {\n              localStorage.setItem('user', JSON.stringify(normalized.user));\n            } catch (_) {}\n          }\n        } catch (_) {}\n\n        // Apply token to axios instance\n        try {\n          authAPI.setAuthToken(normalized.authToken);\n        } catch (_) {}\n\n        // Derive and persist API base for the extension\n        const apiBase = typeof window !== 'undefined' && window.location && window.location.origin ? window.location.origin : ((_api$defaults = api.defaults) === null || _api$defaults === void 0 ? void 0 : _api$defaults.baseURL) || 'http://localhost:5001';\n        try {\n          localStorage.setItem('apiBaseUrl', apiBase);\n        } catch (_) {}\n\n        // Explicitly notify the content script of login success to avoid UI-based guesswork\n        try {\n          if (typeof window !== 'undefined') {\n            window.dispatchEvent(new CustomEvent('scralytics:loginSuccess', {\n              detail: {\n                authToken: normalized.authToken,\n                refreshToken: normalized.refreshToken || null,\n                user: normalized.user || null,\n                apiBaseUrl: apiBase\n              }\n            }));\n          }\n        } catch (_) {}\n      }\n      return normalized;\n    } catch (error) {\n      var _error$response10, _error$response11, _error$response$statu, _error$response12, _error$response13;\n      log('error', '❌ Login failed:', error.message);\n\n      // Handle specific error cases\n      if (((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.status) === 429) {\n        log('warn', '🚫 Too many login attempts detected');\n        const e = new Error('Too many login attempts. Please wait before trying again.');\n        e.status = 429;\n        e.response = error.response;\n        throw e;\n      }\n      if (((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.status) === 431) {\n        log('warn', '📦 Request headers too large - clearing cookies');\n        // Clear potentially oversized cookies\n        document.cookie.split(\";\").forEach(function (c) {\n          document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\");\n        });\n        const e = new Error('Request headers too large. Cookies cleared, please try again.');\n        e.status = 431;\n        e.response = error.response;\n        throw e;\n      }\n\n      // If we hit a network error (no response), automatically try alternative bases\n      const isNetworkError = !error.response && (/Network Error/i.test(error.message) || error.code === 'ERR_NETWORK');\n      if (isNetworkError) {\n        log('warn', '🌐 Network error detected. Trying alternative API bases...');\n        const candidates = deriveCandidateBases().filter(b => b && b !== api.defaults.baseURL);\n        for (const base of candidates) {\n          try {\n            log('info', '🔁 Attempting login against base:', base);\n            api.defaults.baseURL = base;\n            const altResp = await api.post('/api/auth/login', {\n              email,\n              password\n            });\n            const normalized = normalizeLoginResponse(altResp);\n            if (normalized.success) {\n              var _api$defaults2;\n              log('info', '✅ Login successful after base switch:', base);\n              // Persist tokens and notify extension\n              try {\n                localStorage.setItem('authToken', normalized.authToken);\n                localStorage.setItem('token', normalized.authToken);\n                localStorage.setItem('accessToken', normalized.authToken);\n                localStorage.setItem('access_token', normalized.authToken);\n                if (normalized.refreshToken) {\n                  localStorage.setItem('refreshToken', normalized.refreshToken);\n                  localStorage.setItem('refresh_token', normalized.refreshToken);\n                }\n                if (normalized.user) {\n                  try {\n                    localStorage.setItem('user', JSON.stringify(normalized.user));\n                  } catch (_) {}\n                }\n              } catch (_) {}\n              try {\n                authAPI.setAuthToken(normalized.authToken);\n              } catch (_) {}\n              const apiBase = typeof window !== 'undefined' && window.location && window.location.origin ? window.location.origin : ((_api$defaults2 = api.defaults) === null || _api$defaults2 === void 0 ? void 0 : _api$defaults2.baseURL) || base;\n              try {\n                localStorage.setItem('apiBaseUrl', apiBase);\n              } catch (_) {}\n              try {\n                if (typeof window !== 'undefined') {\n                  window.dispatchEvent(new CustomEvent('scralytics:loginSuccess', {\n                    detail: {\n                      authToken: normalized.authToken,\n                      refreshToken: normalized.refreshToken || null,\n                      user: normalized.user || null,\n                      apiBaseUrl: apiBase\n                    }\n                  }));\n                }\n              } catch (_) {}\n              persistBaseURL(base);\n              return normalized;\n            }\n          } catch (e) {\n            var _e$response, _e$response$data;\n            const msg = (e === null || e === void 0 ? void 0 : e.message) || (e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message) || 'unknown';\n            log('warn', '⚠️ Base attempt failed:', base, '-', msg);\n          }\n          // Try legacy path on this base if /api/login not found\n          try {\n            const legacyResp = await api.post('/api/login', {\n              email,\n              password\n            });\n            const normalized = normalizeLoginResponse(legacyResp);\n            if (normalized.success) {\n              var _api$defaults3;\n              log('info', '✅ Legacy /api/login successful after base switch:', base);\n              // Persist tokens and notify extension\n              try {\n                localStorage.setItem('authToken', normalized.authToken);\n                localStorage.setItem('token', normalized.authToken);\n                localStorage.setItem('accessToken', normalized.authToken);\n                localStorage.setItem('access_token', normalized.authToken);\n                if (normalized.refreshToken) {\n                  localStorage.setItem('refreshToken', normalized.refreshToken);\n                  localStorage.setItem('refresh_token', normalized.refreshToken);\n                }\n                if (normalized.user) {\n                  try {\n                    localStorage.setItem('user', JSON.stringify(normalized.user));\n                  } catch (_) {}\n                }\n              } catch (_) {}\n              try {\n                authAPI.setAuthToken(normalized.authToken);\n              } catch (_) {}\n              const apiBase = typeof window !== 'undefined' && window.location && window.location.origin ? window.location.origin : ((_api$defaults3 = api.defaults) === null || _api$defaults3 === void 0 ? void 0 : _api$defaults3.baseURL) || base;\n              try {\n                localStorage.setItem('apiBaseUrl', apiBase);\n              } catch (_) {}\n              try {\n                if (typeof window !== 'undefined') {\n                  window.dispatchEvent(new CustomEvent('scralytics:loginSuccess', {\n                    detail: {\n                      authToken: normalized.authToken,\n                      refreshToken: normalized.refreshToken || null,\n                      user: normalized.user || null,\n                      apiBaseUrl: apiBase\n                    }\n                  }));\n                }\n              } catch (_) {}\n              persistBaseURL(base);\n              return normalized;\n            }\n          } catch (_) {}\n        }\n        log('error', '❌ All alternative bases failed. Returning original error.');\n      }\n\n      // Fallback: if canonical not found, try alias /api/login\n      const status = (_error$response$statu = error === null || error === void 0 ? void 0 : (_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : _error$response12.status) !== null && _error$response$statu !== void 0 ? _error$response$statu : error === null || error === void 0 ? void 0 : error.status;\n      const dataText = typeof (error === null || error === void 0 ? void 0 : (_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.data) === 'string' ? error.response.data : '';\n      const isNotFound = status === 404 || dataText && dataText.includes('Cannot POST /api/auth/login');\n      if (isNotFound) {\n        log('warn', '🔁 /api/auth/login not available, falling back to /api/login');\n        const legacyData = await api.post('/api/login', {\n          email,\n          password\n        });\n        log('info', '✅ Login successful via /api/login');\n        const normalized = normalizeLoginResponse(legacyData);\n        // Persist tokens, set auth header, and notify extension via event\n        if (normalized && normalized.success && normalized.authToken) {\n          var _api$defaults4;\n          try {\n            localStorage.setItem('authToken', normalized.authToken);\n            localStorage.setItem('token', normalized.authToken);\n            localStorage.setItem('accessToken', normalized.authToken);\n            localStorage.setItem('access_token', normalized.authToken);\n            if (normalized.refreshToken) {\n              localStorage.setItem('refreshToken', normalized.refreshToken);\n              localStorage.setItem('refresh_token', normalized.refreshToken);\n            }\n            if (normalized.user) {\n              try {\n                localStorage.setItem('user', JSON.stringify(normalized.user));\n              } catch (_) {}\n            }\n          } catch (_) {}\n          try {\n            authAPI.setAuthToken(normalized.authToken);\n          } catch (_) {}\n          const apiBase = typeof window !== 'undefined' && window.location && window.location.origin ? window.location.origin : ((_api$defaults4 = api.defaults) === null || _api$defaults4 === void 0 ? void 0 : _api$defaults4.baseURL) || 'http://localhost:5001';\n          try {\n            localStorage.setItem('apiBaseUrl', apiBase);\n          } catch (_) {}\n          try {\n            if (typeof window !== 'undefined') {\n              window.dispatchEvent(new CustomEvent('scralytics:loginSuccess', {\n                detail: {\n                  authToken: normalized.authToken,\n                  refreshToken: normalized.refreshToken || null,\n                  user: normalized.user || null,\n                  apiBaseUrl: apiBase\n                }\n              }));\n            }\n          } catch (_) {}\n        }\n        return normalized;\n      }\n      throw error;\n    } finally {\n      loginInProgress = false;\n    }\n  },\n  // Register\n  register: userData => {\n    return api.post('/api/auth/register', userData);\n  },\n  // Get profile\n  getProfile: () => {\n    return api.get('/api/auth/me');\n  },\n  // Update profile\n  updateProfile: profileData => {\n    return api.put('/api/auth/me', profileData);\n  },\n  // Change password\n  changePassword: (currentPassword, newPassword) => {\n    return api.put('/api/auth/password', {\n      currentPassword,\n      newPassword\n    });\n  },\n  // Forgot password\n  forgotPassword: email => {\n    return api.post('/api/auth/forgot-password', {\n      email\n    });\n  },\n  // Reset password\n  resetPassword: (token, password) => {\n    return api.post('/api/auth/reset-password', {\n      token,\n      password\n    });\n  },\n  // Refresh token\n  refreshToken: refreshToken => {\n    return api.post('/api/auth/refresh', {\n      refreshToken\n    });\n  },\n  // Logout\n  logout: () => {\n    return api.post('/api/auth/logout');\n  }\n};\n\n// Jobs API\nexport const jobsAPI = {\n  // Get all jobs\n  getJobs: (params = {}) => {\n    return api.get('/api/jobs', {\n      params\n    });\n  },\n  // Get job by ID\n  getJob: id => {\n    return api.get(`/api/jobs/${id}`);\n  },\n  // Create job\n  createJob: jobData => {\n    return api.post('/api/jobs', jobData);\n  },\n  // Update job\n  updateJob: (id, jobData) => {\n    return api.put(`/api/jobs/${id}`, jobData);\n  },\n  // Delete job\n  deleteJob: id => {\n    return api.delete(`/api/jobs/${id}`);\n  },\n  // Cancel job\n  cancelJob: id => {\n    return api.post(`/api/jobs/${id}/cancel`);\n  },\n  // Retry job\n  retryJob: id => {\n    return api.post(`/api/jobs/${id}/retry`);\n  },\n  // Get job statistics\n  getJobStats: () => {\n    return api.get('/api/jobs/stats');\n  }\n};\n\n// Results API\nexport const resultsAPI = {\n  // Get results for a job\n  getResults: (jobId, params = {}) => {\n    return api.get(`/api/jobs/${jobId}/results`, {\n      params\n    });\n  },\n  // Download results as CSV\n  downloadResults: jobId => {\n    return api.get(`/api/jobs/${jobId}/result`, {\n      responseType: 'blob'\n    });\n  }\n};\n\n// Dashboard API with 404 fallback and normalization\nexport const dashboardAPI = {\n  // Get dashboard stats with fallbacks\n  getStats: async () => {\n    const getStoredToken = () => localStorage.getItem('authToken') || localStorage.getItem('token') || '';\n    const tryAbsoluteUrl = async url => {\n      const token = getStoredToken();\n      const headers = token ? {\n        Authorization: `Bearer ${token}`\n      } : {};\n      const resp = await axios.get(url, {\n        headers,\n        params: {\n          _t: Date.now()\n        }\n      });\n      return resp.data || resp;\n    };\n\n    // Helper to detect HTML 404 pages like \"Cannot GET /api/dashboard/stats\"\n    const isLikelyHtmlNotFound = data => {\n      if (typeof data === 'string') {\n        const s = data.toLowerCase();\n        return s.includes('<html') && (s.includes('cannot get') || s.includes('cannot post'));\n      }\n      return false;\n    };\n\n    // Normalize various backend response shapes into a single structure\n    const normalizeDashboardResponse = resp => {\n      var _ref, _ref2, _payload$totalJobs, _ref3, _ref4, _payload$activeJobs, _ref5, _ref6, _payload$pendingJobs, _ref7, _ref8, _payload$failedJobs, _ref9, _payload$totalResults, _ref0, _payload$successRate, _ref1, _payload$jobsThisWeek, _ref10, _payload$resultsThisW;\n      const root = resp && resp.data ? resp.data : resp;\n      const payload = (root === null || root === void 0 ? void 0 : root.data) || (root === null || root === void 0 ? void 0 : root.stats) || root;\n      const stats = (payload === null || payload === void 0 ? void 0 : payload.stats) || {};\n      const recentJobs = (payload === null || payload === void 0 ? void 0 : payload.recentJobs) || (root === null || root === void 0 ? void 0 : root.recentJobs) || [];\n      const totalJobs = (_ref = (_ref2 = (_payload$totalJobs = payload === null || payload === void 0 ? void 0 : payload.totalJobs) !== null && _payload$totalJobs !== void 0 ? _payload$totalJobs : payload === null || payload === void 0 ? void 0 : payload.total_jobs) !== null && _ref2 !== void 0 ? _ref2 : stats === null || stats === void 0 ? void 0 : stats.completed) !== null && _ref !== void 0 ? _ref : 0;\n      const activeJobs = (_ref3 = (_ref4 = (_payload$activeJobs = payload === null || payload === void 0 ? void 0 : payload.activeJobs) !== null && _payload$activeJobs !== void 0 ? _payload$activeJobs : payload === null || payload === void 0 ? void 0 : payload.active_jobs) !== null && _ref4 !== void 0 ? _ref4 : stats === null || stats === void 0 ? void 0 : stats.running) !== null && _ref3 !== void 0 ? _ref3 : 0;\n      const pendingJobs = (_ref5 = (_ref6 = (_payload$pendingJobs = payload === null || payload === void 0 ? void 0 : payload.pendingJobs) !== null && _payload$pendingJobs !== void 0 ? _payload$pendingJobs : payload === null || payload === void 0 ? void 0 : payload.pending_jobs) !== null && _ref6 !== void 0 ? _ref6 : stats === null || stats === void 0 ? void 0 : stats.queued) !== null && _ref5 !== void 0 ? _ref5 : 0;\n      const failedJobs = (_ref7 = (_ref8 = (_payload$failedJobs = payload === null || payload === void 0 ? void 0 : payload.failedJobs) !== null && _payload$failedJobs !== void 0 ? _payload$failedJobs : payload === null || payload === void 0 ? void 0 : payload.failed_jobs) !== null && _ref8 !== void 0 ? _ref8 : stats === null || stats === void 0 ? void 0 : stats.failed) !== null && _ref7 !== void 0 ? _ref7 : 0;\n      const totalResults = (_ref9 = (_payload$totalResults = payload === null || payload === void 0 ? void 0 : payload.totalResults) !== null && _payload$totalResults !== void 0 ? _payload$totalResults : payload === null || payload === void 0 ? void 0 : payload.total_results) !== null && _ref9 !== void 0 ? _ref9 : 0;\n      const successRate = (_ref0 = (_payload$successRate = payload === null || payload === void 0 ? void 0 : payload.successRate) !== null && _payload$successRate !== void 0 ? _payload$successRate : payload === null || payload === void 0 ? void 0 : payload.success_rate) !== null && _ref0 !== void 0 ? _ref0 : 0;\n      const jobsThisWeek = (_ref1 = (_payload$jobsThisWeek = payload === null || payload === void 0 ? void 0 : payload.jobsThisWeek) !== null && _payload$jobsThisWeek !== void 0 ? _payload$jobsThisWeek : payload === null || payload === void 0 ? void 0 : payload.jobs_this_week) !== null && _ref1 !== void 0 ? _ref1 : 0;\n      const resultsThisWeek = (_ref10 = (_payload$resultsThisW = payload === null || payload === void 0 ? void 0 : payload.resultsThisWeek) !== null && _payload$resultsThisW !== void 0 ? _payload$resultsThisW : payload === null || payload === void 0 ? void 0 : payload.results_this_week) !== null && _ref10 !== void 0 ? _ref10 : 0;\n      return {\n        success: true,\n        data: {\n          totalJobs,\n          activeJobs,\n          pendingJobs,\n          failedJobs,\n          totalResults,\n          successRate,\n          jobsThisWeek,\n          resultsThisWeek,\n          recentJobs\n        }\n      };\n    };\n    try {\n      // Primary endpoint (current baseURL)\n      const resp = await api.get('/api/dashboard/stats');\n      return normalizeDashboardResponse(resp);\n    } catch (error) {\n      var _error$response14, _error$response15;\n      const status = (error === null || error === void 0 ? void 0 : error.status) || (error === null || error === void 0 ? void 0 : (_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : _error$response14.status);\n      const raw = error === null || error === void 0 ? void 0 : (_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : _error$response15.data;\n      const notFound = status === 404 || isLikelyHtmlNotFound(raw);\n      if (!notFound) {\n        throw error;\n      }\n\n      // Fallback chain (same host)\n      const fallbacks = ['/api/stats', '/api/jobs/stats'];\n      for (const path of fallbacks) {\n        try {\n          const fallbackResp = await api.get(path);\n          return normalizeDashboardResponse(fallbackResp);\n        } catch (fallbackErr) {\n          var _fallbackErr$response, _fallbackErr$response2;\n          const fbStatus = (fallbackErr === null || fallbackErr === void 0 ? void 0 : fallbackErr.status) || (fallbackErr === null || fallbackErr === void 0 ? void 0 : (_fallbackErr$response = fallbackErr.response) === null || _fallbackErr$response === void 0 ? void 0 : _fallbackErr$response.status);\n          const fbRaw = fallbackErr === null || fallbackErr === void 0 ? void 0 : (_fallbackErr$response2 = fallbackErr.response) === null || _fallbackErr$response2 === void 0 ? void 0 : _fallbackErr$response2.data;\n          const fbNotFound = fbStatus === 404 || isLikelyHtmlNotFound(fbRaw);\n          if (!fbNotFound) {\n            // Other error type; stop here\n            throw fallbackErr;\n          }\n          // else continue to next fallback\n        }\n      }\n\n      // Legacy server fallback (common dev backend port 3001), try dashboard first\n      const legacyBase = 'http://localhost:3001';\n      try {\n        const legacyResp = await tryAbsoluteUrl(`${legacyBase}/api/dashboard/stats`);\n        return normalizeDashboardResponse(legacyResp);\n      } catch (legacyErr) {\n        var _legacyErr$response, _legacyErr$response2;\n        const ls = (legacyErr === null || legacyErr === void 0 ? void 0 : legacyErr.status) || (legacyErr === null || legacyErr === void 0 ? void 0 : (_legacyErr$response = legacyErr.response) === null || _legacyErr$response === void 0 ? void 0 : _legacyErr$response.status);\n        const lr = legacyErr === null || legacyErr === void 0 ? void 0 : (_legacyErr$response2 = legacyErr.response) === null || _legacyErr$response2 === void 0 ? void 0 : _legacyErr$response2.data;\n        const legacyNotFound = ls === 404 || isLikelyHtmlNotFound(lr);\n        if (!legacyNotFound && ls) {\n          throw legacyErr;\n        }\n      }\n\n      // As a last resort, fetch jobs list and compute basic stats\n      try {\n        const jobsResp = await tryAbsoluteUrl(`${legacyBase}/api/jobs`);\n        const jobsPayload = (jobsResp === null || jobsResp === void 0 ? void 0 : jobsResp.data) || (jobsResp === null || jobsResp === void 0 ? void 0 : jobsResp.jobs) || jobsResp || [];\n        const jobs = Array.isArray(jobsPayload) ? jobsPayload : jobsPayload.jobs || [];\n        const totalJobs = jobs.length;\n        const completedJobs = jobs.filter(j => j.status === 'completed').length;\n        const runningJobs = jobs.filter(j => j.status === 'running').length;\n        const pausedJobs = jobs.filter(j => j.status === 'paused').length;\n        const failedJobs = jobs.filter(j => j.status === 'failed').length;\n        const pendingJobs = jobs.filter(j => j.status === 'pending' || j.status === 'queued').length;\n        const activeJobs = runningJobs + pausedJobs;\n        const totalResults = jobs.reduce((sum, j) => sum + (j.resultCount || j.result_count || 0), 0);\n        const successRate = totalJobs > 0 ? Math.round(completedJobs / totalJobs * 100) : 0;\n        const recentJobs = jobs.slice(0, 5);\n        return {\n          success: true,\n          data: {\n            totalJobs: completedJobs,\n            activeJobs,\n            pendingJobs,\n            failedJobs,\n            totalResults,\n            successRate,\n            jobsThisWeek: 0,\n            resultsThisWeek: 0,\n            recentJobs\n          }\n        };\n      } catch (_) {\n        // ignore and fall through to empty structure\n      }\n\n      // If all fallbacks fail with 404, return a safe empty structure\n      return {\n        success: true,\n        data: {\n          totalJobs: 0,\n          activeJobs: 0,\n          pendingJobs: 0,\n          failedJobs: 0,\n          totalResults: 0,\n          successRate: 0,\n          jobsThisWeek: 0,\n          resultsThisWeek: 0,\n          recentJobs: []\n        }\n      };\n    }\n  }\n};\n\n// LinkedIn Accounts API\nexport const linkedinAccountsAPI = {\n  // Get all accounts\n  getAccounts: () => {\n    return api.get('/api/linkedin-accounts');\n  },\n  // Get account statistics\n  getStats: () => {\n    return api.get('/api/linkedin-accounts/stats');\n  },\n  // Add account with cookies\n  addWithCookies: formData => {\n    return api.post('/api/linkedin-accounts/add-with-cookies', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  // Delete account\n  deleteAccount: accountId => {\n    return api.delete(`/api/linkedin-accounts/${accountId}`);\n  },\n  // Bulk upload\n  bulkUpload: formData => {\n    return api.post('/api/linkedin-accounts/bulk', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n};\n\n// Health API for testing connectivity\nexport const healthAPI = {\n  check: () => api.get('/health')\n};\nexport default api;","map":{"version":3,"names":["axios","LOG_LEVEL","process","env","REACT_APP_LOG_LEVEL","window","localStorage","getItem","toLowerCase","LEVELS","error","warn","info","debug","shouldLog","level","_LEVELS$LOG_LEVEL","_LEVELS$level","current","target","log","args","fn","console","_","normalizeLoginResponse","respData","_data$data","_data$data2","_data$data3","_data$data4","_data$data5","_data$data6","_data$data7","_data$data8","_data$data9","data","authToken","accessToken","token","access_token","jwt","jwtToken","auth_token","document","m","cookie","match","decodeURIComponent","user","profile","refreshToken","success","Boolean","message","err","isValidHttpUrl","str","u","URL","protocol","deriveCandidateBases","_window$location","envBase","REACT_APP_API_URL","trim","endsWith","slice","storedBase","fromOrigin","location","origin","rawCandidates","unique","Array","from","Set","filter","getInitialBaseURL","list","persistBaseURL","base","setItem","__API_BASE_URL__","ensureValidBaseURL","fallback","api","create","baseURL","timeout","headers","params","_t","Date","now","isRefreshingToken","refreshWaiters","subscribeTokenRefresh","cb","push","notifyTokenRefreshed","forEach","interceptors","request","use","config","_config$method","_config$headers$commo","fixedBase","defaults","method","toUpperCase","url","fullURL","path","normalizedBase","normalizedPath","startsWith","includes","parsedToken","JSON","parse","e","authHeader","Authorization","common","tokenInStorage","substring","authHeaderSet","Promise","reject","response","_response$config","status","newToken","_error$response","_error$response2","_error$config","_error$response3","_error$response4","_error$response5","_error$response6","_error$response7","_error$response8","_error$response0","_error$response0$data","_error$response1","statusText","code","fullError","originalRequest","isAuthEndpoint","_error$response9","_error$response9$data","dispatchEvent","CustomEvent","detail","reason","errorMessage","originalError","resolve","refreshResp","post","root","payload","newRefresh","Error","userStr","apiBase","apiBaseUrl","refreshErr","removeItem","loginInProgress","lastLoginAttempt","LOGIN_COOLDOWN","authAPI","setAuthToken","clearAuthToken","login","email","password","timeSinceLastAttempt","remainingCooldown","Math","ceil","normalized","_api$defaults","stringify","_error$response10","_error$response11","_error$response$statu","_error$response12","_error$response13","split","c","replace","toUTCString","isNetworkError","test","candidates","b","altResp","_api$defaults2","_e$response","_e$response$data","msg","legacyResp","_api$defaults3","dataText","isNotFound","legacyData","_api$defaults4","register","userData","getProfile","get","updateProfile","profileData","put","changePassword","currentPassword","newPassword","forgotPassword","resetPassword","logout","jobsAPI","getJobs","getJob","id","createJob","jobData","updateJob","deleteJob","delete","cancelJob","retryJob","getJobStats","resultsAPI","getResults","jobId","downloadResults","responseType","dashboardAPI","getStats","getStoredToken","tryAbsoluteUrl","resp","isLikelyHtmlNotFound","s","normalizeDashboardResponse","_ref","_ref2","_payload$totalJobs","_ref3","_ref4","_payload$activeJobs","_ref5","_ref6","_payload$pendingJobs","_ref7","_ref8","_payload$failedJobs","_ref9","_payload$totalResults","_ref0","_payload$successRate","_ref1","_payload$jobsThisWeek","_ref10","_payload$resultsThisW","stats","recentJobs","totalJobs","total_jobs","completed","activeJobs","active_jobs","running","pendingJobs","pending_jobs","queued","failedJobs","failed_jobs","failed","totalResults","total_results","successRate","success_rate","jobsThisWeek","jobs_this_week","resultsThisWeek","results_this_week","_error$response14","_error$response15","raw","notFound","fallbacks","fallbackResp","fallbackErr","_fallbackErr$response","_fallbackErr$response2","fbStatus","fbRaw","fbNotFound","legacyBase","legacyErr","_legacyErr$response","_legacyErr$response2","ls","lr","legacyNotFound","jobsResp","jobsPayload","jobs","isArray","length","completedJobs","j","runningJobs","pausedJobs","reduce","sum","resultCount","result_count","round","linkedinAccountsAPI","getAccounts","addWithCookies","formData","deleteAccount","accountId","bulkUpload","healthAPI","check"],"sources":["C:/Users/krush/OneDrive/Desktop/Final/linkedin-automation-saas/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// ---- Lightweight log-level gating to reduce noisy logs ----\r\nconst LOG_LEVEL = (process.env.REACT_APP_LOG_LEVEL || (typeof window !== 'undefined' && localStorage.getItem('LOG_LEVEL')) || 'info').toLowerCase();\r\nconst LEVELS = { error: 0, warn: 1, info: 2, debug: 3 };\r\nfunction shouldLog(level) {\r\n  const current = LEVELS[LOG_LEVEL] ?? 2;\r\n  const target = LEVELS[level] ?? 2;\r\n  return target <= current;\r\n}\r\nfunction log(level, ...args) {\r\n  if (!shouldLog(level)) return;\r\n  const fn = level === 'debug' ? 'log' : level;\r\n  try { console[fn](...args); } catch (_) { /* no-op */ }\r\n}\r\n\r\n// Normalize login responses from different backend implementations\r\n// Returns a consistent shape: { success, authToken, user, refreshToken, message }\r\nfunction normalizeLoginResponse(respData) {\r\n  try {\r\n    const data = respData && respData.data ? respData.data : respData;\r\n\r\n    // Capture token across multiple possible field names\r\n    let authToken = (\r\n      data?.accessToken ||\r\n      data?.data?.accessToken ||\r\n      data?.token ||\r\n      data?.data?.token ||\r\n      data?.authToken ||\r\n      data?.data?.authToken ||\r\n      data?.access_token ||\r\n      data?.data?.access_token ||\r\n      data?.jwt ||\r\n      data?.data?.jwt ||\r\n      data?.jwtToken ||\r\n      data?.data?.jwtToken ||\r\n      data?.auth_token ||\r\n      data?.data?.auth_token ||\r\n      null\r\n    );\r\n\r\n    // Fallback: if token not present in body, try cookie `token`\r\n    if (!authToken && typeof document !== 'undefined') {\r\n      try {\r\n        const m = document.cookie && document.cookie.match(/(?:^|;\\s*)token=([^;]+)/);\r\n        if (m && m[1]) {\r\n          authToken = decodeURIComponent(m[1]);\r\n        }\r\n      } catch (_) {}\r\n    }\r\n\r\n    const user = (\r\n      data?.user ||\r\n      data?.data?.user ||\r\n      data?.profile ||\r\n      null\r\n    );\r\n\r\n    const refreshToken = (\r\n      data?.refreshToken ||\r\n      data?.data?.refreshToken ||\r\n      null\r\n    );\r\n\r\n    // Consider login successful ONLY when we have a token\r\n    const success = Boolean(authToken);\r\n\r\n    if (!success) {\r\n      const message = (\r\n        data?.message ||\r\n        data?.error ||\r\n        (typeof data === 'string' ? data : 'Login failed')\r\n      );\r\n      return { success: false, message };\r\n    }\r\n\r\n    return {\r\n      success: true,\r\n      authToken,\r\n      user,\r\n      refreshToken,\r\n      message: data?.message || 'Login successful',\r\n    };\r\n  } catch (err) {\r\n    return { success: false, message: 'Login response parsing error' };\r\n  }\r\n}\r\n\r\n// ---- Backend base URL resolution and fallback helpers ----\r\nfunction isValidHttpUrl(str) {\r\n  try {\r\n    if (!str || typeof str !== 'string') return false;\r\n    const u = new URL(str);\r\n    return u.protocol === 'http:' || u.protocol === 'https:';\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction deriveCandidateBases() {\r\n  // Read env and normalize for trailing slashes to avoid double-slash URLs\r\n  let envBase = process.env.REACT_APP_API_URL;\r\n  if (typeof envBase === 'string') {\r\n    envBase = envBase.trim();\r\n    // Strip trailing slash to ensure endpoint concatenation is consistent\r\n    if (envBase.endsWith('/')) envBase = envBase.slice(0, -1);\r\n  }\r\n  const storedBase = typeof window !== 'undefined' ? localStorage.getItem('API_BASE_URL') : null;\r\n  const fromOrigin = typeof window !== 'undefined' && window.location?.origin\r\n    ? window.location.origin\r\n    : null;\r\n  // Prefer common dev backend port 3001 before other fallbacks\r\n  const rawCandidates = [envBase, storedBase, fromOrigin, 'http://localhost:3001', 'http://localhost:5001', 'https://scralytics.com'];\r\n  const unique = Array.from(new Set(rawCandidates.filter(Boolean)));\r\n  return unique.filter(isValidHttpUrl);\r\n}\r\n\r\nfunction getInitialBaseURL() {\r\n  const list = deriveCandidateBases();\r\n  // Default to backend dev server on port 3001 when nothing else is set\r\n  return list[0] || 'http://localhost:3001';\r\n}\r\n\r\nfunction persistBaseURL(base) {\r\n  try {\r\n    if (typeof window !== 'undefined' && base && isValidHttpUrl(base)) {\r\n      localStorage.setItem('API_BASE_URL', base);\r\n      window.__API_BASE_URL__ = base;\r\n    }\r\n  } catch (_) {}\r\n}\r\n\r\n// Ensure axios has a valid baseURL; if not, set a sane fallback\r\nfunction ensureValidBaseURL(current) {\r\n  if (isValidHttpUrl(current)) return current;\r\n  const fallback = getInitialBaseURL();\r\n  return isValidHttpUrl(fallback) ? fallback : 'http://localhost:3001';\r\n}\r\n\r\n// Create axios instance with resilient base URL\r\nconst api = axios.create({\r\n  baseURL: getInitialBaseURL(),\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  params: {\r\n    _t: Date.now() // Cache busting parameter\r\n  }\r\n});\r\n\r\n// ---- Token refresh coordination (avoid parallel refresh storms) ----\r\nlet isRefreshingToken = false;\r\nlet refreshWaiters = [];\r\nconst subscribeTokenRefresh = (cb) => refreshWaiters.push(cb);\r\nconst notifyTokenRefreshed = (token) => {\r\n  try {\r\n    refreshWaiters.forEach((cb) => cb(token));\r\n  } finally {\r\n    refreshWaiters = [];\r\n  }\r\n};\r\n\r\n// Request interceptor with logging and auth\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Guard against invalid baseURL before axios constructs the request\r\n    const fixedBase = ensureValidBaseURL(config.baseURL || api.defaults.baseURL);\r\n    if (fixedBase !== config.baseURL) {\r\n      config.baseURL = fixedBase;\r\n      api.defaults.baseURL = fixedBase;\r\n      log('warn', '🔧 Fixed invalid baseURL; using:', fixedBase);\r\n    }\r\n\r\n  // Add logging for debugging\r\n  log('info', '🌐 API Request:', {\r\n    method: config.method?.toUpperCase(),\r\n    url: config.url || '(no-url)',\r\n    baseURL: config.baseURL || '(no-baseURL)',\r\n    fullURL: (() => {\r\n      const base = config.baseURL || api.defaults.baseURL;\r\n      const path = config.url || '';\r\n      if (!base) return path || '(no-url)';\r\n      // Avoid double slashes when concatenating\r\n      const normalizedBase = base.endsWith('/') ? base.slice(0, -1) : base;\r\n      const normalizedPath = path.startsWith('/') ? path : `/${path}`;\r\n      return `${normalizedBase}${normalizedPath}`;\r\n    })()\r\n  });\r\n    \r\n    // Token is set via authAPI.setAuthToken() - no need to set here\r\n    // Debug token presence\r\n    let token = (\r\n      localStorage.getItem('authToken') ||\r\n      localStorage.getItem('token') ||\r\n      localStorage.getItem('accessToken') ||\r\n      localStorage.getItem('access_token') ||\r\n      localStorage.getItem('jwt') ||\r\n      localStorage.getItem('jwtToken') ||\r\n      localStorage.getItem('auth_token')\r\n    );\r\n    if (token && token.includes('{')) {\r\n      try {\r\n        const parsedToken = JSON.parse(token);\r\n        token = parsedToken.token || token;\r\n      } catch (e) {\r\n        log('error', 'Failed to parse token from localStorage', e);\r\n      }\r\n    }\r\n    const authHeader = config.headers.Authorization || config.headers.common?.Authorization;\r\n    log('debug', '🔐 Frontend Token Debug:', { \r\n      tokenInStorage: token ? token.substring(0, 20) + '...' : 'null',\r\n      authHeaderSet: authHeader ? authHeader.substring(0, 30) + '...' : 'null'\r\n    });\r\n    \r\n    if (!authHeader && token) {\r\n      log('warn', '⚠️ Token exists in storage but not in headers - setting manually');\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    log('error', '❌ Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor with enhanced logging\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    // Log successful responses\r\n    log('info', '✅ API Response:', {\r\n      status: response.status,\r\n      url: response.config?.url,\r\n      data: response.data\r\n    });\r\n    \r\n    // Check for new token in response headers\r\n    const newToken = response.headers['x-new-token'];\r\n    if (newToken) {\r\n      // Persist and apply refreshed token\r\n      try {\r\n        localStorage.setItem('token', newToken);\r\n        localStorage.setItem('authToken', newToken);\r\n      } catch (_) {}\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\r\n      log('info', '🔄 Applied refreshed token from X-New-Token header');\r\n    }\r\n\r\n    return response.data;\r\n  },\r\n  async (error) => {\r\n    // Enhanced error logging\r\n    log('error', '❌ API Response Error:', {\r\n      message: error.message,\r\n      status: error.response?.status,\r\n      statusText: error.response?.statusText,\r\n      url: error.config?.url,\r\n      data: error.response?.data,\r\n      headers: error.response?.headers,\r\n      code: error.code,\r\n      fullError: error\r\n    });\r\n    \r\n    // Add user-friendly error message\r\n    if (error.response?.status === 500) {\r\n      log('error', '🔥 Server Error: The server encountered an internal error. Please try again later.');\r\n    } else if (error.response?.status === 404) {\r\n      log('warn', '🔍 Not Found: The requested resource was not found.');\r\n    } else if (error.response?.status === 403) {\r\n      log('warn', '🚫 Forbidden: You do not have permission to access this resource.');\r\n    }\r\n    \r\n    const status = error.response?.status;\r\n    const originalRequest = error.config || {};\r\n    const url = originalRequest?.url || '';\r\n    const isAuthEndpoint = url.includes('/api/auth/login') || url.includes('/api/auth/register') || url.includes('/api/auth/refresh');\r\n\r\n    // Handle 401 with automatic refresh + retry (except on auth endpoints)\r\n    if (status === 401 && !isAuthEndpoint) {\r\n      const refreshToken = (\r\n        localStorage.getItem('refreshToken') ||\r\n        localStorage.getItem('refresh_token') ||\r\n        ''\r\n      );\r\n      if (!refreshToken) {\r\n        log('warn', '🔐 401 received and no refreshToken available');\r\n        // Inform extension and UI that re-authentication is required\r\n        try {\r\n          if (typeof window !== 'undefined') {\r\n            window.dispatchEvent(new CustomEvent('scralytics:authRequired', {\r\n              detail: {\r\n                reason: 'NO_REFRESH_TOKEN',\r\n                url: url\r\n              }\r\n            }));\r\n          }\r\n        } catch (_) {}\r\n        const errorMessage = error.response?.data?.message || error.message || 'Unauthorized';\r\n        return Promise.reject({\r\n          message: errorMessage,\r\n          status,\r\n          response: error.response,\r\n          originalError: error\r\n        });\r\n      }\r\n\r\n      // If a refresh is already in progress, queue this request\r\n      if (isRefreshingToken) {\r\n        log('info', '⏳ Waiting for ongoing token refresh to complete');\r\n        return new Promise((resolve) => {\r\n          subscribeTokenRefresh((newToken) => {\r\n            // Apply new token and retry original request\r\n            originalRequest.headers = originalRequest.headers || {};\r\n            originalRequest.headers['Authorization'] = `Bearer ${newToken}`;\r\n            resolve(api.request(originalRequest));\r\n          });\r\n        });\r\n      }\r\n\r\n      // Start refresh\r\n      isRefreshingToken = true;\r\n      try {\r\n        log('info', '🔄 Attempting token refresh...');\r\n        const refreshResp = await api.post('/api/auth/refresh', { refreshToken });\r\n        const root = refreshResp && refreshResp.data ? refreshResp.data : refreshResp;\r\n        const payload = root?.data || root;\r\n        const newToken = (\r\n          payload?.accessToken || payload?.token || payload?.authToken || null\r\n        );\r\n        const newRefresh = (\r\n          payload?.refreshToken || null\r\n        );\r\n\r\n        if (!newToken) {\r\n          throw new Error('Failed to refresh access token');\r\n        }\r\n\r\n        // Persist and apply new tokens\r\n        try {\r\n          localStorage.setItem('token', newToken);\r\n          localStorage.setItem('authToken', newToken);\r\n          if (newRefresh) {\r\n            localStorage.setItem('refreshToken', newRefresh);\r\n            localStorage.setItem('refresh_token', newRefresh);\r\n          }\r\n        } catch (_) {}\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\r\n        log('info', '✅ Token refresh succeeded; retrying original request');\r\n\r\n        // Notify queued requests\r\n        notifyTokenRefreshed(newToken);\r\n\r\n        // Best-effort: notify extension/content script of new token\r\n        try {\r\n          const userStr = localStorage.getItem('user');\r\n          const user = userStr ? JSON.parse(userStr) : null;\r\n          const apiBase = (typeof window !== 'undefined' ? window.location.origin : '');\r\n          if (typeof window !== 'undefined') {\r\n            window.dispatchEvent(new CustomEvent('scralytics:loginSuccess', {\r\n              detail: { authToken: newToken, refreshToken: newRefresh, user, apiBaseUrl: apiBase }\r\n            }));\r\n          }\r\n        } catch (_) {}\r\n\r\n        // Retry original request with the new token\r\n        originalRequest.headers = originalRequest.headers || {};\r\n        originalRequest.headers['Authorization'] = `Bearer ${newToken}`;\r\n        return api.request(originalRequest);\r\n      } catch (refreshErr) {\r\n        log('error', '❌ Token refresh failed:', refreshErr);\r\n        // Do not auto-clear app state, but remove invalid tokens\r\n        try {\r\n          localStorage.removeItem('authToken');\r\n          localStorage.removeItem('token');\r\n          // Keep refreshToken to allow manual retry if desired\r\n        } catch (_) {}\r\n        return Promise.reject({\r\n          message: refreshErr?.message || 'Token refresh failed',\r\n          status,\r\n          response: error.response,\r\n          originalError: error\r\n        });\r\n      } finally {\r\n        isRefreshingToken = false;\r\n      }\r\n    }\r\n\r\n    // Return error in consistent format\r\n    const errorMessage = error.response?.data?.message || error.message || 'An error occurred';\r\n    return Promise.reject({\r\n      message: errorMessage,\r\n      status: error.response?.status,\r\n      response: error.response,\r\n      originalError: error\r\n    });\r\n  }\r\n);\r\n\r\n// Rate limiting state\r\nlet loginInProgress = false;\r\nlet lastLoginAttempt = 0;\r\nconst LOGIN_COOLDOWN = 2000; // 2 seconds between login attempts\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  // Set auth token\r\n  setAuthToken: (token) => {\r\n    if (token) {\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n      delete api.defaults.headers.common['Authorization'];\r\n    }\r\n  },\r\n  \r\n  // Clear auth token\r\n  clearAuthToken: () => {\r\n    delete api.defaults.headers.common['Authorization'];\r\n  },\r\n  \r\n  // Login with rate limiting\r\n  login: async (email, password) => {\r\n    log('info', '🔐 Login attempt triggered for:', email);\r\n    \r\n    // Prevent multiple parallel logins\r\n    if (loginInProgress) {\r\n      log('warn', '⚠️ Login already in progress, ignoring duplicate request');\r\n      return Promise.reject({ message: 'Login already in progress' });\r\n    }\r\n    \r\n    // Check cooldown period\r\n    const now = Date.now();\r\n    const timeSinceLastAttempt = now - lastLoginAttempt;\r\n    if (timeSinceLastAttempt < LOGIN_COOLDOWN) {\r\n      const remainingCooldown = LOGIN_COOLDOWN - timeSinceLastAttempt;\r\n      log('warn', `⏰ Login cooldown active, wait ${remainingCooldown}ms`);\r\n      return Promise.reject({ \r\n        message: `Please wait ${Math.ceil(remainingCooldown / 1000)} seconds before trying again` \r\n      });\r\n    }\r\n    \r\n    loginInProgress = true;\r\n    lastLoginAttempt = now;\r\n    \r\n    try {\r\n      // Prefer canonical endpoint first\r\n      const respData = await api.post('/api/auth/login', { email, password });\r\n      log('info', '✅ Login successful via /api/auth/login');\r\n      // Normalize response shape\r\n      const normalized = normalizeLoginResponse(respData);\r\n      // Persist tokens, set auth header, and notify extension via event\r\n      if (normalized && normalized.success && normalized.authToken) {\r\n        try {\r\n          // Store access token under common keys for the content script to discover\r\n          localStorage.setItem('authToken', normalized.authToken);\r\n          localStorage.setItem('token', normalized.authToken);\r\n          localStorage.setItem('accessToken', normalized.authToken);\r\n          localStorage.setItem('access_token', normalized.authToken);\r\n          // Store refresh token under both variants\r\n          if (normalized.refreshToken) {\r\n            localStorage.setItem('refreshToken', normalized.refreshToken);\r\n            localStorage.setItem('refresh_token', normalized.refreshToken);\r\n          }\r\n          // Persist user info if available\r\n          if (normalized.user) {\r\n            try { localStorage.setItem('user', JSON.stringify(normalized.user)); } catch (_) {}\r\n          }\r\n        } catch (_) {}\r\n\r\n        // Apply token to axios instance\r\n        try { authAPI.setAuthToken(normalized.authToken); } catch (_) {}\r\n\r\n        // Derive and persist API base for the extension\r\n        const apiBase = (typeof window !== 'undefined' && window.location && window.location.origin) ? window.location.origin : (api.defaults?.baseURL || 'http://localhost:5001');\r\n        try { localStorage.setItem('apiBaseUrl', apiBase); } catch (_) {}\r\n\r\n        // Explicitly notify the content script of login success to avoid UI-based guesswork\r\n        try {\r\n          if (typeof window !== 'undefined') {\r\n            window.dispatchEvent(new CustomEvent('scralytics:loginSuccess', {\r\n              detail: {\r\n                authToken: normalized.authToken,\r\n                refreshToken: normalized.refreshToken || null,\r\n                user: normalized.user || null,\r\n                apiBaseUrl: apiBase\r\n              }\r\n            }));\r\n          }\r\n        } catch (_) {}\r\n      }\r\n      return normalized;\r\n    } catch (error) {\r\n      log('error', '❌ Login failed:', error.message);\r\n      \r\n      // Handle specific error cases\r\n      if (error.response?.status === 429) {\r\n        log('warn', '🚫 Too many login attempts detected');\r\n        const e = new Error('Too many login attempts. Please wait before trying again.');\r\n        e.status = 429;\r\n        e.response = error.response;\r\n        throw e;\r\n      }\r\n      \r\n      if (error.response?.status === 431) {\r\n        log('warn', '📦 Request headers too large - clearing cookies');\r\n        // Clear potentially oversized cookies\r\n        document.cookie.split(\";\").forEach(function(c) { \r\n          document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\"); \r\n        });\r\n        const e = new Error('Request headers too large. Cookies cleared, please try again.');\r\n        e.status = 431;\r\n        e.response = error.response;\r\n        throw e;\r\n      }\r\n      \r\n      // If we hit a network error (no response), automatically try alternative bases\r\n      const isNetworkError = !error.response && (/Network Error/i.test(error.message) || error.code === 'ERR_NETWORK');\r\n      if (isNetworkError) {\r\n        log('warn', '🌐 Network error detected. Trying alternative API bases...');\r\n        const candidates = deriveCandidateBases().filter(b => b && b !== api.defaults.baseURL);\r\n        for (const base of candidates) {\r\n          try {\r\n            log('info', '🔁 Attempting login against base:', base);\r\n            api.defaults.baseURL = base;\r\n            const altResp = await api.post('/api/auth/login', { email, password });\r\n            const normalized = normalizeLoginResponse(altResp);\r\n            if (normalized.success) {\r\n              log('info', '✅ Login successful after base switch:', base);\r\n              // Persist tokens and notify extension\r\n              try {\r\n                localStorage.setItem('authToken', normalized.authToken);\r\n                localStorage.setItem('token', normalized.authToken);\r\n                localStorage.setItem('accessToken', normalized.authToken);\r\n                localStorage.setItem('access_token', normalized.authToken);\r\n                if (normalized.refreshToken) {\r\n                  localStorage.setItem('refreshToken', normalized.refreshToken);\r\n                  localStorage.setItem('refresh_token', normalized.refreshToken);\r\n                }\r\n                if (normalized.user) {\r\n                  try { localStorage.setItem('user', JSON.stringify(normalized.user)); } catch (_) {}\r\n                }\r\n              } catch (_) {}\r\n              try { authAPI.setAuthToken(normalized.authToken); } catch (_) {}\r\n              const apiBase = (typeof window !== 'undefined' && window.location && window.location.origin) ? window.location.origin : (api.defaults?.baseURL || base);\r\n              try { localStorage.setItem('apiBaseUrl', apiBase); } catch (_) {}\r\n              try {\r\n                if (typeof window !== 'undefined') {\r\n                  window.dispatchEvent(new CustomEvent('scralytics:loginSuccess', {\r\n                    detail: {\r\n                      authToken: normalized.authToken,\r\n                      refreshToken: normalized.refreshToken || null,\r\n                      user: normalized.user || null,\r\n                      apiBaseUrl: apiBase\r\n                    }\r\n                  }));\r\n                }\r\n              } catch (_) {}\r\n              persistBaseURL(base);\r\n              return normalized;\r\n            }\r\n          } catch (e) {\r\n            const msg = e?.message || e?.response?.data?.message || 'unknown';\r\n            log('warn', '⚠️ Base attempt failed:', base, '-', msg);\r\n          }\r\n          // Try legacy path on this base if /api/login not found\r\n          try {\r\n            const legacyResp = await api.post('/api/login', { email, password });\r\n            const normalized = normalizeLoginResponse(legacyResp);\r\n            if (normalized.success) {\r\n              log('info', '✅ Legacy /api/login successful after base switch:', base);\r\n              // Persist tokens and notify extension\r\n              try {\r\n                localStorage.setItem('authToken', normalized.authToken);\r\n                localStorage.setItem('token', normalized.authToken);\r\n                localStorage.setItem('accessToken', normalized.authToken);\r\n                localStorage.setItem('access_token', normalized.authToken);\r\n                if (normalized.refreshToken) {\r\n                  localStorage.setItem('refreshToken', normalized.refreshToken);\r\n                  localStorage.setItem('refresh_token', normalized.refreshToken);\r\n                }\r\n                if (normalized.user) {\r\n                  try { localStorage.setItem('user', JSON.stringify(normalized.user)); } catch (_) {}\r\n                }\r\n              } catch (_) {}\r\n              try { authAPI.setAuthToken(normalized.authToken); } catch (_) {}\r\n              const apiBase = (typeof window !== 'undefined' && window.location && window.location.origin) ? window.location.origin : (api.defaults?.baseURL || base);\r\n              try { localStorage.setItem('apiBaseUrl', apiBase); } catch (_) {}\r\n              try {\r\n                if (typeof window !== 'undefined') {\r\n                  window.dispatchEvent(new CustomEvent('scralytics:loginSuccess', {\r\n                    detail: {\r\n                      authToken: normalized.authToken,\r\n                      refreshToken: normalized.refreshToken || null,\r\n                      user: normalized.user || null,\r\n                      apiBaseUrl: apiBase\r\n                    }\r\n                  }));\r\n                }\r\n              } catch (_) {}\r\n              persistBaseURL(base);\r\n              return normalized;\r\n            }\r\n          } catch (_) {}\r\n        }\r\n        log('error', '❌ All alternative bases failed. Returning original error.');\r\n      }\r\n\r\n      // Fallback: if canonical not found, try alias /api/login\r\n      const status = (error?.response?.status ?? error?.status);\r\n      const dataText = typeof error?.response?.data === 'string' ? error.response.data : '';\r\n      const isNotFound = status === 404 || (dataText && dataText.includes('Cannot POST /api/auth/login'));\r\n      if (isNotFound) {\r\n        log('warn', '🔁 /api/auth/login not available, falling back to /api/login');\r\n        const legacyData = await api.post('/api/login', { email, password });\r\n        log('info', '✅ Login successful via /api/login');\r\n        const normalized = normalizeLoginResponse(legacyData);\r\n        // Persist tokens, set auth header, and notify extension via event\r\n        if (normalized && normalized.success && normalized.authToken) {\r\n          try {\r\n            localStorage.setItem('authToken', normalized.authToken);\r\n            localStorage.setItem('token', normalized.authToken);\r\n            localStorage.setItem('accessToken', normalized.authToken);\r\n            localStorage.setItem('access_token', normalized.authToken);\r\n            if (normalized.refreshToken) {\r\n              localStorage.setItem('refreshToken', normalized.refreshToken);\r\n              localStorage.setItem('refresh_token', normalized.refreshToken);\r\n            }\r\n            if (normalized.user) {\r\n              try { localStorage.setItem('user', JSON.stringify(normalized.user)); } catch (_) {}\r\n            }\r\n          } catch (_) {}\r\n          try { authAPI.setAuthToken(normalized.authToken); } catch (_) {}\r\n          const apiBase = (typeof window !== 'undefined' && window.location && window.location.origin) ? window.location.origin : (api.defaults?.baseURL || 'http://localhost:5001');\r\n          try { localStorage.setItem('apiBaseUrl', apiBase); } catch (_) {}\r\n          try {\r\n            if (typeof window !== 'undefined') {\r\n              window.dispatchEvent(new CustomEvent('scralytics:loginSuccess', {\r\n                detail: {\r\n                  authToken: normalized.authToken,\r\n                  refreshToken: normalized.refreshToken || null,\r\n                  user: normalized.user || null,\r\n                  apiBaseUrl: apiBase\r\n                }\r\n              }));\r\n            }\r\n          } catch (_) {}\r\n        }\r\n        return normalized;\r\n      }\r\n\r\n      throw error;\r\n    } finally {\r\n      loginInProgress = false;\r\n    }\r\n  },\r\n  \r\n  // Register\r\n  register: (userData) => {\r\n    return api.post('/api/auth/register', userData);\r\n  },\r\n  \r\n  // Get profile\r\n  getProfile: () => {\r\n    return api.get('/api/auth/me');\r\n  },\r\n  \r\n  // Update profile\r\n  updateProfile: (profileData) => {\r\n    return api.put('/api/auth/me', profileData);\r\n  },\r\n  \r\n  // Change password\r\n  changePassword: (currentPassword, newPassword) => {\r\n    return api.put('/api/auth/password', {\r\n      currentPassword,\r\n      newPassword,\r\n    });\r\n  },\r\n  \r\n  // Forgot password\r\n  forgotPassword: (email) => {\r\n    return api.post('/api/auth/forgot-password', { email });\r\n  },\r\n  \r\n  // Reset password\r\n  resetPassword: (token, password) => {\r\n    return api.post('/api/auth/reset-password', { token, password });\r\n  },\r\n  \r\n  // Refresh token\r\n  refreshToken: (refreshToken) => {\r\n    return api.post('/api/auth/refresh', { refreshToken });\r\n  },\r\n  \r\n  // Logout\r\n  logout: () => {\r\n    return api.post('/api/auth/logout');\r\n  },\r\n};\r\n\r\n// Jobs API\r\nexport const jobsAPI = {\r\n  // Get all jobs\r\n  getJobs: (params = {}) => {\r\n    return api.get('/api/jobs', { params });\r\n  },\r\n  \r\n  // Get job by ID\r\n  getJob: (id) => {\r\n    return api.get(`/api/jobs/${id}`);\r\n  },\r\n  \r\n  // Create job\r\n  createJob: (jobData) => {\r\n    return api.post('/api/jobs', jobData);\r\n  },\r\n  \r\n  // Update job\r\n  updateJob: (id, jobData) => {\r\n    return api.put(`/api/jobs/${id}`, jobData);\r\n  },\r\n  \r\n  // Delete job\r\n  deleteJob: (id) => {\r\n    return api.delete(`/api/jobs/${id}`);\r\n  },\r\n  \r\n  // Cancel job\r\n  cancelJob: (id) => {\r\n    return api.post(`/api/jobs/${id}/cancel`);\r\n  },\r\n  \r\n  // Retry job\r\n  retryJob: (id) => {\r\n    return api.post(`/api/jobs/${id}/retry`);\r\n  },\r\n  \r\n  // Get job statistics\r\n  getJobStats: () => {\r\n    return api.get('/api/jobs/stats');\r\n  },\r\n};\r\n\r\n// Results API\r\nexport const resultsAPI = {\r\n  // Get results for a job\r\n  getResults: (jobId, params = {}) => {\r\n    return api.get(`/api/jobs/${jobId}/results`, { params });\r\n  },\r\n  \r\n  // Download results as CSV\r\n  downloadResults: (jobId) => {\r\n    return api.get(`/api/jobs/${jobId}/result`, { responseType: 'blob' });\r\n  },\r\n};\r\n\r\n// Dashboard API with 404 fallback and normalization\r\nexport const dashboardAPI = {\r\n  // Get dashboard stats with fallbacks\r\n  getStats: async () => {\r\n    const getStoredToken = () => (\r\n      localStorage.getItem('authToken') || localStorage.getItem('token') || ''\r\n    );\r\n\r\n    const tryAbsoluteUrl = async (url) => {\r\n      const token = getStoredToken();\r\n      const headers = token ? { Authorization: `Bearer ${token}` } : {};\r\n      const resp = await axios.get(url, { headers, params: { _t: Date.now() } });\r\n      return resp.data || resp;\r\n    };\r\n\r\n    // Helper to detect HTML 404 pages like \"Cannot GET /api/dashboard/stats\"\r\n    const isLikelyHtmlNotFound = (data) => {\r\n      if (typeof data === 'string') {\r\n        const s = data.toLowerCase();\r\n        return s.includes('<html') && (s.includes('cannot get') || s.includes('cannot post'));\r\n      }\r\n      return false;\r\n    };\r\n\r\n    // Normalize various backend response shapes into a single structure\r\n    const normalizeDashboardResponse = (resp) => {\r\n      const root = resp && resp.data ? resp.data : resp;\r\n      const payload = root?.data || root?.stats || root;\r\n\r\n      const stats = payload?.stats || {};\r\n      const recentJobs = payload?.recentJobs || root?.recentJobs || [];\r\n\r\n      const totalJobs = (\r\n        payload?.totalJobs ?? payload?.total_jobs ?? stats?.completed ?? 0\r\n      );\r\n      const activeJobs = (\r\n        payload?.activeJobs ?? payload?.active_jobs ?? stats?.running ?? 0\r\n      );\r\n      const pendingJobs = (\r\n        payload?.pendingJobs ?? payload?.pending_jobs ?? stats?.queued ?? 0\r\n      );\r\n      const failedJobs = (\r\n        payload?.failedJobs ?? payload?.failed_jobs ?? stats?.failed ?? 0\r\n      );\r\n      const totalResults = (\r\n        payload?.totalResults ?? payload?.total_results ?? 0\r\n      );\r\n      const successRate = (\r\n        payload?.successRate ?? payload?.success_rate ?? 0\r\n      );\r\n      const jobsThisWeek = (\r\n        payload?.jobsThisWeek ?? payload?.jobs_this_week ?? 0\r\n      );\r\n      const resultsThisWeek = (\r\n        payload?.resultsThisWeek ?? payload?.results_this_week ?? 0\r\n      );\r\n\r\n      return {\r\n        success: true,\r\n        data: {\r\n          totalJobs,\r\n          activeJobs,\r\n          pendingJobs,\r\n          failedJobs,\r\n          totalResults,\r\n          successRate,\r\n          jobsThisWeek,\r\n          resultsThisWeek,\r\n          recentJobs\r\n        }\r\n      };\r\n    };\r\n\r\n    try {\r\n      // Primary endpoint (current baseURL)\r\n      const resp = await api.get('/api/dashboard/stats');\r\n      return normalizeDashboardResponse(resp);\r\n    } catch (error) {\r\n      const status = error?.status || error?.response?.status;\r\n      const raw = error?.response?.data;\r\n      const notFound = status === 404 || isLikelyHtmlNotFound(raw);\r\n\r\n      if (!notFound) {\r\n        throw error;\r\n      }\r\n\r\n      // Fallback chain (same host)\r\n      const fallbacks = ['/api/stats', '/api/jobs/stats'];\r\n      for (const path of fallbacks) {\r\n        try {\r\n          const fallbackResp = await api.get(path);\r\n          return normalizeDashboardResponse(fallbackResp);\r\n        } catch (fallbackErr) {\r\n          const fbStatus = fallbackErr?.status || fallbackErr?.response?.status;\r\n          const fbRaw = fallbackErr?.response?.data;\r\n          const fbNotFound = fbStatus === 404 || isLikelyHtmlNotFound(fbRaw);\r\n          if (!fbNotFound) {\r\n            // Other error type; stop here\r\n            throw fallbackErr;\r\n          }\r\n          // else continue to next fallback\r\n        }\r\n      }\r\n\r\n      // Legacy server fallback (common dev backend port 3001), try dashboard first\r\nconst legacyBase = 'http://localhost:3001';\r\n      try {\r\n        const legacyResp = await tryAbsoluteUrl(`${legacyBase}/api/dashboard/stats`);\r\n        return normalizeDashboardResponse(legacyResp);\r\n      } catch (legacyErr) {\r\n        const ls = legacyErr?.status || legacyErr?.response?.status;\r\n        const lr = legacyErr?.response?.data;\r\n        const legacyNotFound = ls === 404 || isLikelyHtmlNotFound(lr);\r\n        if (!legacyNotFound && ls) {\r\n          throw legacyErr;\r\n        }\r\n      }\r\n\r\n      // As a last resort, fetch jobs list and compute basic stats\r\n      try {\r\n        const jobsResp = await tryAbsoluteUrl(`${legacyBase}/api/jobs`);\r\n        const jobsPayload = jobsResp?.data || jobsResp?.jobs || jobsResp || [];\r\n        const jobs = Array.isArray(jobsPayload) ? jobsPayload : (jobsPayload.jobs || []);\r\n        const totalJobs = jobs.length;\r\n        const completedJobs = jobs.filter(j => j.status === 'completed').length;\r\n        const runningJobs = jobs.filter(j => j.status === 'running').length;\r\n        const pausedJobs = jobs.filter(j => j.status === 'paused').length;\r\n        const failedJobs = jobs.filter(j => j.status === 'failed').length;\r\n        const pendingJobs = jobs.filter(j => j.status === 'pending' || j.status === 'queued').length;\r\n        const activeJobs = runningJobs + pausedJobs;\r\n        const totalResults = jobs.reduce((sum, j) => sum + (j.resultCount || j.result_count || 0), 0);\r\n        const successRate = totalJobs > 0 ? Math.round((completedJobs / totalJobs) * 100) : 0;\r\n        const recentJobs = jobs.slice(0, 5);\r\n\r\n        return {\r\n          success: true,\r\n          data: {\r\n            totalJobs: completedJobs,\r\n            activeJobs,\r\n            pendingJobs,\r\n            failedJobs,\r\n            totalResults,\r\n            successRate,\r\n            jobsThisWeek: 0,\r\n            resultsThisWeek: 0,\r\n            recentJobs\r\n          }\r\n        };\r\n      } catch (_) {\r\n        // ignore and fall through to empty structure\r\n      }\r\n\r\n      // If all fallbacks fail with 404, return a safe empty structure\r\n      return {\r\n        success: true,\r\n        data: {\r\n          totalJobs: 0,\r\n          activeJobs: 0,\r\n          pendingJobs: 0,\r\n          failedJobs: 0,\r\n          totalResults: 0,\r\n          successRate: 0,\r\n          jobsThisWeek: 0,\r\n          resultsThisWeek: 0,\r\n          recentJobs: []\r\n        }\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\n// LinkedIn Accounts API\r\nexport const linkedinAccountsAPI = {\r\n  // Get all accounts\r\n  getAccounts: () => {\r\n    return api.get('/api/linkedin-accounts');\r\n  },\r\n  \r\n  // Get account statistics\r\n  getStats: () => {\r\n    return api.get('/api/linkedin-accounts/stats');\r\n  },\r\n  \r\n  // Add account with cookies\r\n  addWithCookies: (formData) => {\r\n    return api.post('/api/linkedin-accounts/add-with-cookies', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n  \r\n  // Delete account\r\n  deleteAccount: (accountId) => {\r\n    return api.delete(`/api/linkedin-accounts/${accountId}`);\r\n  },\r\n  \r\n  // Bulk upload\r\n  bulkUpload: (formData) => {\r\n    return api.post('/api/linkedin-accounts/bulk', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n};\r\n\r\n// Health API for testing connectivity\r\nexport const healthAPI = {\r\n  check: () => api.get('/health'),\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}