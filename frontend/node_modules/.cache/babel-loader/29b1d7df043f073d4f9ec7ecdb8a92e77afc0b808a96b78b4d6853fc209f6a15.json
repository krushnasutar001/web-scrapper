{"ast":null,"code":"import axios from 'axios';\n\n// Normalize login responses from different backend implementations\n// Returns a consistent shape: { success, authToken, user, refreshToken, message }\nfunction normalizeLoginResponse(respData) {\n  try {\n    var _data$data, _data$data2, _data$data3, _data$data4;\n    const data = respData && respData.data ? respData.data : respData;\n    const authToken = (data === null || data === void 0 ? void 0 : data.authToken) || (data === null || data === void 0 ? void 0 : data.token) || (data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.token) || (data === null || data === void 0 ? void 0 : data.accessToken) || (data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.accessToken) || null;\n    const user = (data === null || data === void 0 ? void 0 : data.user) || (data === null || data === void 0 ? void 0 : (_data$data3 = data.data) === null || _data$data3 === void 0 ? void 0 : _data$data3.user) || (data === null || data === void 0 ? void 0 : data.profile) || null;\n    const refreshToken = (data === null || data === void 0 ? void 0 : data.refreshToken) || (data === null || data === void 0 ? void 0 : (_data$data4 = data.data) === null || _data$data4 === void 0 ? void 0 : _data$data4.refreshToken) || null;\n    const success = Boolean((data === null || data === void 0 ? void 0 : data.success) === true || (data === null || data === void 0 ? void 0 : data.ok) === true || authToken);\n    if (!success) {\n      const message = (data === null || data === void 0 ? void 0 : data.message) || (data === null || data === void 0 ? void 0 : data.error) || (typeof data === 'string' ? data : 'Login failed');\n      return {\n        success: false,\n        message\n      };\n    }\n    return {\n      success: true,\n      authToken,\n      user,\n      refreshToken,\n      message: (data === null || data === void 0 ? void 0 : data.message) || 'Login successful'\n    };\n  } catch (err) {\n    return {\n      success: false,\n      message: 'Login response parsing error'\n    };\n  }\n}\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5001',\n  // Explicit backend URL (fallback aligned with backend)\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  params: {\n    _t: Date.now() // Cache busting parameter\n  }\n});\n\n// Request interceptor with logging and auth\napi.interceptors.request.use(config => {\n  var _config$method, _config$headers$commo;\n  // Add logging for debugging\n  console.log('üåê API Request:', {\n    method: (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(),\n    url: config.url,\n    baseURL: config.baseURL,\n    fullURL: `${config.baseURL}${config.url}`\n  });\n\n  // Token is set via authAPI.setAuthToken() - no need to set here\n  // Debug token presence\n  const token = localStorage.getItem('authToken') || localStorage.getItem('token');\n  const authHeader = config.headers.Authorization || ((_config$headers$commo = config.headers.common) === null || _config$headers$commo === void 0 ? void 0 : _config$headers$commo.Authorization);\n  console.log('üîê Frontend Token Debug:', {\n    tokenInStorage: token ? token.substring(0, 20) + '...' : 'null',\n    authHeaderSet: authHeader ? authHeader.substring(0, 30) + '...' : 'null'\n  });\n  if (!authHeader && token) {\n    console.warn('‚ö†Ô∏è Token exists in storage but not in headers - setting manually');\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('‚ùå Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor with enhanced logging\napi.interceptors.response.use(response => {\n  var _response$config;\n  // Log successful responses\n  console.log('‚úÖ API Response:', {\n    status: response.status,\n    url: (_response$config = response.config) === null || _response$config === void 0 ? void 0 : _response$config.url,\n    data: response.data\n  });\n\n  // Check for new token in response headers\n  const newToken = response.headers['x-new-token'];\n  if (newToken) {\n    localStorage.setItem('token', newToken);\n  }\n  return response.data;\n}, error => {\n  var _error$response, _error$response2, _error$config, _error$response3, _error$response4, _error$response5, _error$response6, _error$response7, _error$response8, _error$response9, _error$response1, _error$response1$data, _error$response10;\n  // Enhanced error logging\n  console.error('‚ùå API Response Error:', {\n    message: error.message,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    statusText: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusText,\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data,\n    headers: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.headers,\n    code: error.code,\n    fullError: error\n  });\n\n  // Add user-friendly error message\n  if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 500) {\n    console.error('üî• Server Error: The server encountered an internal error. Please try again later.');\n  } else if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 404) {\n    console.error('üîç Not Found: The requested resource was not found.');\n  } else if (((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status) === 403) {\n    console.error('üö´ Forbidden: You do not have permission to access this resource.');\n  }\n\n  // Handle 401/403 errors (unauthorized/forbidden)\n  if (((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.status) === 401 || ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.status) === 403) {\n    var _error$response0;\n    console.warn('üîê Authentication failed or unauthorized response detected');\n    console.log('üîê Error details:', (_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data);\n    // Do NOT auto-clear tokens or redirect; let the app handle gracefully\n    // This avoids unexpected logout on background requests or transient errors\n  }\n\n  // Return error in consistent format\n  const errorMessage = ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || error.message || 'An error occurred';\n  return Promise.reject({\n    message: errorMessage,\n    status: (_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.status,\n    response: error.response,\n    originalError: error\n  });\n});\n\n// Rate limiting state\nlet loginInProgress = false;\nlet lastLoginAttempt = 0;\nconst LOGIN_COOLDOWN = 2000; // 2 seconds between login attempts\n\n// Auth API\nexport const authAPI = {\n  // Set auth token\n  setAuthToken: token => {\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete api.defaults.headers.common['Authorization'];\n    }\n  },\n  // Clear auth token\n  clearAuthToken: () => {\n    delete api.defaults.headers.common['Authorization'];\n  },\n  // Login with rate limiting\n  login: async (email, password) => {\n    console.log('üîê Login attempt triggered for:', email);\n\n    // Prevent multiple parallel logins\n    if (loginInProgress) {\n      console.warn('‚ö†Ô∏è Login already in progress, ignoring duplicate request');\n      return Promise.reject({\n        message: 'Login already in progress'\n      });\n    }\n\n    // Check cooldown period\n    const now = Date.now();\n    const timeSinceLastAttempt = now - lastLoginAttempt;\n    if (timeSinceLastAttempt < LOGIN_COOLDOWN) {\n      const remainingCooldown = LOGIN_COOLDOWN - timeSinceLastAttempt;\n      console.warn(`‚è∞ Login cooldown active, wait ${remainingCooldown}ms`);\n      return Promise.reject({\n        message: `Please wait ${Math.ceil(remainingCooldown / 1000)} seconds before trying again`\n      });\n    }\n    loginInProgress = true;\n    lastLoginAttempt = now;\n    try {\n      const respData = await api.post('/api/login', {\n        email,\n        password\n      });\n      console.log('‚úÖ Login successful via /api/login');\n      // Normalize response shape\n      const normalized = normalizeLoginResponse(respData);\n      return normalized;\n    } catch (error) {\n      var _error$response11, _error$response12, _error$response$statu, _error$response13, _error$response14;\n      console.error('‚ùå Login failed:', error.message);\n\n      // Handle specific error cases\n      if (((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.status) === 429) {\n        console.warn('üö´ Too many login attempts detected');\n        throw {\n          message: 'Too many login attempts. Please wait before trying again.',\n          status: 429,\n          response: error.response\n        };\n      }\n      if (((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : _error$response12.status) === 431) {\n        console.warn('üì¶ Request headers too large - clearing cookies');\n        // Clear potentially oversized cookies\n        document.cookie.split(\";\").forEach(function (c) {\n          document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\");\n        });\n        throw {\n          message: 'Request headers too large. Cookies cleared, please try again.',\n          status: 431,\n          response: error.response\n        };\n      }\n\n      // Fallback: if alias not found, try legacy /api/auth/login\n      const status = (_error$response$statu = error === null || error === void 0 ? void 0 : (_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.status) !== null && _error$response$statu !== void 0 ? _error$response$statu : error === null || error === void 0 ? void 0 : error.status;\n      const dataText = typeof (error === null || error === void 0 ? void 0 : (_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : _error$response14.data) === 'string' ? error.response.data : '';\n      const isNotFound = status === 404 || dataText && dataText.includes('Cannot POST /api/login');\n      if (isNotFound) {\n        console.warn('üîÅ /api/login alias not available, falling back to /api/auth/login');\n        const legacyData = await api.post('/api/auth/login', {\n          email,\n          password\n        });\n        console.log('‚úÖ Login successful via /api/auth/login');\n        const normalized = normalizeLoginResponse(legacyData);\n        return normalized;\n      }\n      throw error;\n    } finally {\n      loginInProgress = false;\n    }\n  },\n  // Register\n  register: userData => {\n    return api.post('/api/auth/register', userData);\n  },\n  // Get profile\n  getProfile: () => {\n    return api.get('/api/auth/me');\n  },\n  // Update profile\n  updateProfile: profileData => {\n    return api.put('/api/auth/me', profileData);\n  },\n  // Change password\n  changePassword: (currentPassword, newPassword) => {\n    return api.put('/api/auth/password', {\n      currentPassword,\n      newPassword\n    });\n  },\n  // Forgot password\n  forgotPassword: email => {\n    return api.post('/api/auth/forgot-password', {\n      email\n    });\n  },\n  // Reset password\n  resetPassword: (token, password) => {\n    return api.post('/api/auth/reset-password', {\n      token,\n      password\n    });\n  },\n  // Refresh token\n  refreshToken: refreshToken => {\n    return api.post('/api/auth/refresh', {\n      refreshToken\n    });\n  },\n  // Logout\n  logout: () => {\n    return api.post('/api/auth/logout');\n  }\n};\n\n// Jobs API\nexport const jobsAPI = {\n  // Get all jobs\n  getJobs: (params = {}) => {\n    return api.get('/api/jobs', {\n      params\n    });\n  },\n  // Get job by ID\n  getJob: id => {\n    return api.get(`/api/jobs/${id}`);\n  },\n  // Create job\n  createJob: jobData => {\n    return api.post('/api/jobs', jobData);\n  },\n  // Update job\n  updateJob: (id, jobData) => {\n    return api.put(`/api/jobs/${id}`, jobData);\n  },\n  // Delete job\n  deleteJob: id => {\n    return api.delete(`/api/jobs/${id}`);\n  },\n  // Cancel job\n  cancelJob: id => {\n    return api.post(`/api/jobs/${id}/cancel`);\n  },\n  // Retry job\n  retryJob: id => {\n    return api.post(`/api/jobs/${id}/retry`);\n  },\n  // Get job statistics\n  getJobStats: () => {\n    return api.get('/api/jobs/stats');\n  }\n};\n\n// Results API\nexport const resultsAPI = {\n  // Get results for a job\n  getResults: (jobId, params = {}) => {\n    return api.get(`/api/jobs/${jobId}/results`, {\n      params\n    });\n  },\n  // Download results as CSV\n  downloadResults: jobId => {\n    return api.get(`/api/jobs/${jobId}/result`, {\n      responseType: 'blob'\n    });\n  }\n};\n\n// LinkedIn Accounts API\nexport const linkedinAccountsAPI = {\n  // Get all accounts\n  getAccounts: () => {\n    return api.get('/api/linkedin-accounts');\n  },\n  // Get account statistics\n  getStats: () => {\n    return api.get('/api/linkedin-accounts/stats');\n  },\n  // Add account with cookies\n  addWithCookies: formData => {\n    return api.post('/api/linkedin-accounts/add-with-cookies', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  // Delete account\n  deleteAccount: accountId => {\n    return api.delete(`/api/linkedin-accounts/${accountId}`);\n  },\n  // Bulk upload\n  bulkUpload: formData => {\n    return api.post('/api/linkedin-accounts/bulk', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n};\n\n// Health API for testing connectivity\nexport const healthAPI = {\n  check: () => api.get('/health')\n};\nexport default api;","map":{"version":3,"names":["axios","normalizeLoginResponse","respData","_data$data","_data$data2","_data$data3","_data$data4","data","authToken","token","accessToken","user","profile","refreshToken","success","Boolean","ok","message","error","err","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","params","_t","Date","now","interceptors","request","use","config","_config$method","_config$headers$commo","console","log","method","toUpperCase","url","fullURL","localStorage","getItem","authHeader","Authorization","common","tokenInStorage","substring","authHeaderSet","warn","Promise","reject","response","_response$config","status","newToken","setItem","_error$response","_error$response2","_error$config","_error$response3","_error$response4","_error$response5","_error$response6","_error$response7","_error$response8","_error$response9","_error$response1","_error$response1$data","_error$response10","statusText","code","fullError","_error$response0","errorMessage","originalError","loginInProgress","lastLoginAttempt","LOGIN_COOLDOWN","authAPI","setAuthToken","defaults","clearAuthToken","login","email","password","timeSinceLastAttempt","remainingCooldown","Math","ceil","post","normalized","_error$response11","_error$response12","_error$response$statu","_error$response13","_error$response14","document","cookie","split","forEach","c","replace","toUTCString","dataText","isNotFound","includes","legacyData","register","userData","getProfile","get","updateProfile","profileData","put","changePassword","currentPassword","newPassword","forgotPassword","resetPassword","logout","jobsAPI","getJobs","getJob","id","createJob","jobData","updateJob","deleteJob","delete","cancelJob","retryJob","getJobStats","resultsAPI","getResults","jobId","downloadResults","responseType","linkedinAccountsAPI","getAccounts","getStats","addWithCookies","formData","deleteAccount","accountId","bulkUpload","healthAPI","check"],"sources":["C:/Users/krush/OneDrive/Desktop/Final/linkedin-automation-saas/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Normalize login responses from different backend implementations\r\n// Returns a consistent shape: { success, authToken, user, refreshToken, message }\r\nfunction normalizeLoginResponse(respData) {\r\n  try {\r\n    const data = respData && respData.data ? respData.data : respData;\r\n\r\n    const authToken = (\r\n      data?.authToken ||\r\n      data?.token ||\r\n      data?.data?.token ||\r\n      data?.accessToken ||\r\n      data?.data?.accessToken ||\r\n      null\r\n    );\r\n\r\n    const user = (\r\n      data?.user ||\r\n      data?.data?.user ||\r\n      data?.profile ||\r\n      null\r\n    );\r\n\r\n    const refreshToken = (\r\n      data?.refreshToken ||\r\n      data?.data?.refreshToken ||\r\n      null\r\n    );\r\n\r\n    const success = Boolean(\r\n      data?.success === true ||\r\n      data?.ok === true ||\r\n      authToken\r\n    );\r\n\r\n    if (!success) {\r\n      const message = (\r\n        data?.message ||\r\n        data?.error ||\r\n        (typeof data === 'string' ? data : 'Login failed')\r\n      );\r\n      return { success: false, message };\r\n    }\r\n\r\n    return {\r\n      success: true,\r\n      authToken,\r\n      user,\r\n      refreshToken,\r\n      message: data?.message || 'Login successful',\r\n    };\r\n  } catch (err) {\r\n    return { success: false, message: 'Login response parsing error' };\r\n  }\r\n}\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5001', // Explicit backend URL (fallback aligned with backend)\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  params: {\r\n    _t: Date.now() // Cache busting parameter\r\n  }\r\n});\r\n\r\n// Request interceptor with logging and auth\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Add logging for debugging\r\n    console.log('üåê API Request:', {\r\n      method: config.method?.toUpperCase(),\r\n      url: config.url,\r\n      baseURL: config.baseURL,\r\n      fullURL: `${config.baseURL}${config.url}`\r\n    });\r\n    \r\n    // Token is set via authAPI.setAuthToken() - no need to set here\r\n    // Debug token presence\r\n    const token = localStorage.getItem('authToken') || localStorage.getItem('token');\r\n    const authHeader = config.headers.Authorization || config.headers.common?.Authorization;\r\n    console.log('üîê Frontend Token Debug:', { \r\n      tokenInStorage: token ? token.substring(0, 20) + '...' : 'null',\r\n      authHeaderSet: authHeader ? authHeader.substring(0, 30) + '...' : 'null'\r\n    });\r\n    \r\n    if (!authHeader && token) {\r\n      console.warn('‚ö†Ô∏è Token exists in storage but not in headers - setting manually');\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('‚ùå Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor with enhanced logging\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    // Log successful responses\r\n    console.log('‚úÖ API Response:', {\r\n      status: response.status,\r\n      url: response.config?.url,\r\n      data: response.data\r\n    });\r\n    \r\n    // Check for new token in response headers\r\n    const newToken = response.headers['x-new-token'];\r\n    if (newToken) {\r\n      localStorage.setItem('token', newToken);\r\n    }\r\n    \r\n    return response.data;\r\n  },\r\n  (error) => {\r\n    // Enhanced error logging\r\n    console.error('‚ùå API Response Error:', {\r\n      message: error.message,\r\n      status: error.response?.status,\r\n      statusText: error.response?.statusText,\r\n      url: error.config?.url,\r\n      data: error.response?.data,\r\n      headers: error.response?.headers,\r\n      code: error.code,\r\n      fullError: error\r\n    });\r\n    \r\n    // Add user-friendly error message\r\n    if (error.response?.status === 500) {\r\n      console.error('üî• Server Error: The server encountered an internal error. Please try again later.');\r\n    } else if (error.response?.status === 404) {\r\n      console.error('üîç Not Found: The requested resource was not found.');\r\n    } else if (error.response?.status === 403) {\r\n      console.error('üö´ Forbidden: You do not have permission to access this resource.');\r\n    }\r\n    \r\n    // Handle 401/403 errors (unauthorized/forbidden)\r\n    if (error.response?.status === 401 || error.response?.status === 403) {\r\n      console.warn('üîê Authentication failed or unauthorized response detected');\r\n      console.log('üîê Error details:', error.response?.data);\r\n      // Do NOT auto-clear tokens or redirect; let the app handle gracefully\r\n      // This avoids unexpected logout on background requests or transient errors\r\n    }\r\n    \r\n    // Return error in consistent format\r\n    const errorMessage = error.response?.data?.message || error.message || 'An error occurred';\r\n    return Promise.reject({\r\n      message: errorMessage,\r\n      status: error.response?.status,\r\n      response: error.response,\r\n      originalError: error\r\n    });\r\n  }\r\n);\r\n\r\n// Rate limiting state\r\nlet loginInProgress = false;\r\nlet lastLoginAttempt = 0;\r\nconst LOGIN_COOLDOWN = 2000; // 2 seconds between login attempts\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  // Set auth token\r\n  setAuthToken: (token) => {\r\n    if (token) {\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n      delete api.defaults.headers.common['Authorization'];\r\n    }\r\n  },\r\n  \r\n  // Clear auth token\r\n  clearAuthToken: () => {\r\n    delete api.defaults.headers.common['Authorization'];\r\n  },\r\n  \r\n  // Login with rate limiting\r\n  login: async (email, password) => {\r\n    console.log('üîê Login attempt triggered for:', email);\r\n    \r\n    // Prevent multiple parallel logins\r\n    if (loginInProgress) {\r\n      console.warn('‚ö†Ô∏è Login already in progress, ignoring duplicate request');\r\n      return Promise.reject({ message: 'Login already in progress' });\r\n    }\r\n    \r\n    // Check cooldown period\r\n    const now = Date.now();\r\n    const timeSinceLastAttempt = now - lastLoginAttempt;\r\n    if (timeSinceLastAttempt < LOGIN_COOLDOWN) {\r\n      const remainingCooldown = LOGIN_COOLDOWN - timeSinceLastAttempt;\r\n      console.warn(`‚è∞ Login cooldown active, wait ${remainingCooldown}ms`);\r\n      return Promise.reject({ \r\n        message: `Please wait ${Math.ceil(remainingCooldown / 1000)} seconds before trying again` \r\n      });\r\n    }\r\n    \r\n    loginInProgress = true;\r\n    lastLoginAttempt = now;\r\n    \r\n    try {\r\n      const respData = await api.post('/api/login', { email, password });\r\n      console.log('‚úÖ Login successful via /api/login');\r\n      // Normalize response shape\r\n      const normalized = normalizeLoginResponse(respData);\r\n      return normalized;\r\n    } catch (error) {\r\n      console.error('‚ùå Login failed:', error.message);\r\n      \r\n      // Handle specific error cases\r\n      if (error.response?.status === 429) {\r\n        console.warn('üö´ Too many login attempts detected');\r\n        throw {\r\n          message: 'Too many login attempts. Please wait before trying again.',\r\n          status: 429,\r\n          response: error.response\r\n        };\r\n      }\r\n      \r\n      if (error.response?.status === 431) {\r\n        console.warn('üì¶ Request headers too large - clearing cookies');\r\n        // Clear potentially oversized cookies\r\n        document.cookie.split(\";\").forEach(function(c) { \r\n          document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\"); \r\n        });\r\n        throw {\r\n          message: 'Request headers too large. Cookies cleared, please try again.',\r\n          status: 431,\r\n          response: error.response\r\n        };\r\n      }\r\n      \r\n      // Fallback: if alias not found, try legacy /api/auth/login\r\n      const status = (error?.response?.status ?? error?.status);\r\n      const dataText = typeof error?.response?.data === 'string' ? error.response.data : '';\r\n      const isNotFound = status === 404 || (dataText && dataText.includes('Cannot POST /api/login'));\r\n      if (isNotFound) {\r\n        console.warn('üîÅ /api/login alias not available, falling back to /api/auth/login');\r\n        const legacyData = await api.post('/api/auth/login', { email, password });\r\n        console.log('‚úÖ Login successful via /api/auth/login');\r\n        const normalized = normalizeLoginResponse(legacyData);\r\n        return normalized;\r\n      }\r\n      \r\n      throw error;\r\n    } finally {\r\n      loginInProgress = false;\r\n    }\r\n  },\r\n  \r\n  // Register\r\n  register: (userData) => {\r\n    return api.post('/api/auth/register', userData);\r\n  },\r\n  \r\n  // Get profile\r\n  getProfile: () => {\r\n    return api.get('/api/auth/me');\r\n  },\r\n  \r\n  // Update profile\r\n  updateProfile: (profileData) => {\r\n    return api.put('/api/auth/me', profileData);\r\n  },\r\n  \r\n  // Change password\r\n  changePassword: (currentPassword, newPassword) => {\r\n    return api.put('/api/auth/password', {\r\n      currentPassword,\r\n      newPassword,\r\n    });\r\n  },\r\n  \r\n  // Forgot password\r\n  forgotPassword: (email) => {\r\n    return api.post('/api/auth/forgot-password', { email });\r\n  },\r\n  \r\n  // Reset password\r\n  resetPassword: (token, password) => {\r\n    return api.post('/api/auth/reset-password', { token, password });\r\n  },\r\n  \r\n  // Refresh token\r\n  refreshToken: (refreshToken) => {\r\n    return api.post('/api/auth/refresh', { refreshToken });\r\n  },\r\n  \r\n  // Logout\r\n  logout: () => {\r\n    return api.post('/api/auth/logout');\r\n  },\r\n};\r\n\r\n// Jobs API\r\nexport const jobsAPI = {\r\n  // Get all jobs\r\n  getJobs: (params = {}) => {\r\n    return api.get('/api/jobs', { params });\r\n  },\r\n  \r\n  // Get job by ID\r\n  getJob: (id) => {\r\n    return api.get(`/api/jobs/${id}`);\r\n  },\r\n  \r\n  // Create job\r\n  createJob: (jobData) => {\r\n    return api.post('/api/jobs', jobData);\r\n  },\r\n  \r\n  // Update job\r\n  updateJob: (id, jobData) => {\r\n    return api.put(`/api/jobs/${id}`, jobData);\r\n  },\r\n  \r\n  // Delete job\r\n  deleteJob: (id) => {\r\n    return api.delete(`/api/jobs/${id}`);\r\n  },\r\n  \r\n  // Cancel job\r\n  cancelJob: (id) => {\r\n    return api.post(`/api/jobs/${id}/cancel`);\r\n  },\r\n  \r\n  // Retry job\r\n  retryJob: (id) => {\r\n    return api.post(`/api/jobs/${id}/retry`);\r\n  },\r\n  \r\n  // Get job statistics\r\n  getJobStats: () => {\r\n    return api.get('/api/jobs/stats');\r\n  },\r\n};\r\n\r\n// Results API\r\nexport const resultsAPI = {\r\n  // Get results for a job\r\n  getResults: (jobId, params = {}) => {\r\n    return api.get(`/api/jobs/${jobId}/results`, { params });\r\n  },\r\n  \r\n  // Download results as CSV\r\n  downloadResults: (jobId) => {\r\n    return api.get(`/api/jobs/${jobId}/result`, { responseType: 'blob' });\r\n  },\r\n};\r\n\r\n// LinkedIn Accounts API\r\nexport const linkedinAccountsAPI = {\r\n  // Get all accounts\r\n  getAccounts: () => {\r\n    return api.get('/api/linkedin-accounts');\r\n  },\r\n  \r\n  // Get account statistics\r\n  getStats: () => {\r\n    return api.get('/api/linkedin-accounts/stats');\r\n  },\r\n  \r\n  // Add account with cookies\r\n  addWithCookies: (formData) => {\r\n    return api.post('/api/linkedin-accounts/add-with-cookies', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n  \r\n  // Delete account\r\n  deleteAccount: (accountId) => {\r\n    return api.delete(`/api/linkedin-accounts/${accountId}`);\r\n  },\r\n  \r\n  // Bulk upload\r\n  bulkUpload: (formData) => {\r\n    return api.post('/api/linkedin-accounts/bulk', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n};\r\n\r\n// Health API for testing connectivity\r\nexport const healthAPI = {\r\n  check: () => api.get('/health'),\r\n};\r\n\r\nexport default api;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}