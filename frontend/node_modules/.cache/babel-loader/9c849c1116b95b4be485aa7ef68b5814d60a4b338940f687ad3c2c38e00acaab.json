{"ast":null,"code":"import axios from 'axios';\n\n// ---- Lightweight log-level gating to reduce noisy logs ----\nconst LOG_LEVEL = (process.env.REACT_APP_LOG_LEVEL || typeof window !== 'undefined' && localStorage.getItem('LOG_LEVEL') || 'info').toLowerCase();\nconst LEVELS = {\n  error: 0,\n  warn: 1,\n  info: 2,\n  debug: 3\n};\nfunction shouldLog(level) {\n  var _LEVELS$LOG_LEVEL, _LEVELS$level;\n  const current = (_LEVELS$LOG_LEVEL = LEVELS[LOG_LEVEL]) !== null && _LEVELS$LOG_LEVEL !== void 0 ? _LEVELS$LOG_LEVEL : 2;\n  const target = (_LEVELS$level = LEVELS[level]) !== null && _LEVELS$level !== void 0 ? _LEVELS$level : 2;\n  return target <= current;\n}\nfunction log(level, ...args) {\n  if (!shouldLog(level)) return;\n  const fn = level === 'debug' ? 'log' : level;\n  try {\n    console[fn](...args);\n  } catch (_) {/* no-op */}\n}\n\n// Normalize login responses from different backend implementations\n// Returns a consistent shape: { success, authToken, user, refreshToken, message }\nfunction normalizeLoginResponse(respData) {\n  try {\n    var _data$data, _data$data2, _data$data3, _data$data4;\n    const data = respData && respData.data ? respData.data : respData;\n    const authToken = (data === null || data === void 0 ? void 0 : data.accessToken) || (data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.accessToken) || (data === null || data === void 0 ? void 0 : data.token) || (data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.token) || (data === null || data === void 0 ? void 0 : data.authToken) || null;\n    const user = (data === null || data === void 0 ? void 0 : data.user) || (data === null || data === void 0 ? void 0 : (_data$data3 = data.data) === null || _data$data3 === void 0 ? void 0 : _data$data3.user) || (data === null || data === void 0 ? void 0 : data.profile) || null;\n    const refreshToken = (data === null || data === void 0 ? void 0 : data.refreshToken) || (data === null || data === void 0 ? void 0 : (_data$data4 = data.data) === null || _data$data4 === void 0 ? void 0 : _data$data4.refreshToken) || null;\n    const success = Boolean((data === null || data === void 0 ? void 0 : data.success) === true || (data === null || data === void 0 ? void 0 : data.ok) === true || authToken);\n    if (!success) {\n      const message = (data === null || data === void 0 ? void 0 : data.message) || (data === null || data === void 0 ? void 0 : data.error) || (typeof data === 'string' ? data : 'Login failed');\n      return {\n        success: false,\n        message\n      };\n    }\n    return {\n      success: true,\n      authToken,\n      user,\n      refreshToken,\n      message: (data === null || data === void 0 ? void 0 : data.message) || 'Login successful'\n    };\n  } catch (err) {\n    return {\n      success: false,\n      message: 'Login response parsing error'\n    };\n  }\n}\n\n// ---- Backend base URL resolution and fallback helpers ----\nfunction isValidHttpUrl(str) {\n  try {\n    if (!str || typeof str !== 'string') return false;\n    const u = new URL(str);\n    return u.protocol === 'http:' || u.protocol === 'https:';\n  } catch {\n    return false;\n  }\n}\nfunction deriveCandidateBases() {\n  var _window$location;\n  // Read env and normalize for trailing slashes to avoid double-slash URLs\n  let envBase = process.env.REACT_APP_API_URL;\n  if (typeof envBase === 'string') {\n    envBase = envBase.trim();\n    // Strip trailing slash to ensure endpoint concatenation is consistent\n    if (envBase.endsWith('/')) envBase = envBase.slice(0, -1);\n  }\n  const storedBase = typeof window !== 'undefined' ? localStorage.getItem('API_BASE_URL') : null;\n  const fromOrigin = typeof window !== 'undefined' && (_window$location = window.location) !== null && _window$location !== void 0 && _window$location.origin ? window.location.origin.includes(':5001') ? window.location.origin.replace(':5001', ':5002') : window.location.origin : null;\n  const rawCandidates = [envBase, storedBase, fromOrigin, 'http://localhost:5002', 'http://localhost:5001', 'https://scralytics.com'];\n  const unique = Array.from(new Set(rawCandidates.filter(Boolean)));\n  return unique.filter(isValidHttpUrl);\n}\nfunction getInitialBaseURL() {\n  const list = deriveCandidateBases();\n  return list[0] || 'http://localhost:5001';\n}\nfunction persistBaseURL(base) {\n  try {\n    if (typeof window !== 'undefined' && base && isValidHttpUrl(base)) {\n      localStorage.setItem('API_BASE_URL', base);\n      window.__API_BASE_URL__ = base;\n    }\n  } catch (_) {}\n}\n\n// Ensure axios has a valid baseURL; if not, set a sane fallback\nfunction ensureValidBaseURL(current) {\n  if (isValidHttpUrl(current)) return current;\n  const fallback = getInitialBaseURL();\n  return isValidHttpUrl(fallback) ? fallback : 'http://localhost:5001';\n}\n\n// Create axios instance with resilient base URL\nconst api = axios.create({\n  baseURL: getInitialBaseURL(),\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  params: {\n    _t: Date.now() // Cache busting parameter\n  }\n});\n\n// Request interceptor with logging and auth\napi.interceptors.request.use(config => {\n  var _config$method, _config$headers$commo;\n  // Guard against invalid baseURL before axios constructs the request\n  const fixedBase = ensureValidBaseURL(config.baseURL || api.defaults.baseURL);\n  if (fixedBase !== config.baseURL) {\n    config.baseURL = fixedBase;\n    api.defaults.baseURL = fixedBase;\n    log('warn', 'üîß Fixed invalid baseURL; using:', fixedBase);\n  }\n\n  // Add logging for debugging\n  log('info', 'üåê API Request:', {\n    method: (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(),\n    url: config.url || '(no-url)',\n    baseURL: config.baseURL || '(no-baseURL)',\n    fullURL: (() => {\n      const base = config.baseURL || api.defaults.baseURL;\n      const path = config.url || '';\n      if (!base) return path || '(no-url)';\n      // Avoid double slashes when concatenating\n      const normalizedBase = base.endsWith('/') ? base.slice(0, -1) : base;\n      const normalizedPath = path.startsWith('/') ? path : `/${path}`;\n      return `${normalizedBase}${normalizedPath}`;\n    })()\n  });\n\n  // Token is set via authAPI.setAuthToken() - no need to set here\n  // Debug token presence\n  let token = localStorage.getItem('authToken') || localStorage.getItem('token');\n  if (token && token.includes('{')) {\n    try {\n      const parsedToken = JSON.parse(token);\n      token = parsedToken.token || token;\n    } catch (e) {\n      log('error', 'Failed to parse token from localStorage', e);\n    }\n  }\n  const authHeader = config.headers.Authorization || ((_config$headers$commo = config.headers.common) === null || _config$headers$commo === void 0 ? void 0 : _config$headers$commo.Authorization);\n  log('debug', 'üîê Frontend Token Debug:', {\n    tokenInStorage: token ? token.substring(0, 20) + '...' : 'null',\n    authHeaderSet: authHeader ? authHeader.substring(0, 30) + '...' : 'null'\n  });\n  if (!authHeader && token) {\n    log('warn', '‚ö†Ô∏è Token exists in storage but not in headers - setting manually');\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  log('error', '‚ùå Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor with enhanced logging\napi.interceptors.response.use(response => {\n  var _response$config;\n  // Log successful responses\n  log('info', '‚úÖ API Response:', {\n    status: response.status,\n    url: (_response$config = response.config) === null || _response$config === void 0 ? void 0 : _response$config.url,\n    data: response.data\n  });\n\n  // Check for new token in response headers\n  const newToken = response.headers['x-new-token'];\n  if (newToken) {\n    // Persist and apply refreshed token\n    try {\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('authToken', newToken);\n    } catch (_) {}\n    api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n    log('info', 'üîÑ Applied refreshed token from X-New-Token header');\n  }\n  return response.data;\n}, error => {\n  var _error$response, _error$response2, _error$config, _error$response3, _error$response4, _error$response5, _error$response6, _error$response7, _error$response8, _error$response9, _error$response1, _error$response1$data, _error$response10;\n  // Enhanced error logging\n  log('error', '‚ùå API Response Error:', {\n    message: error.message,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    statusText: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusText,\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data,\n    headers: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.headers,\n    code: error.code,\n    fullError: error\n  });\n\n  // Add user-friendly error message\n  if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 500) {\n    log('error', 'üî• Server Error: The server encountered an internal error. Please try again later.');\n  } else if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 404) {\n    log('warn', 'üîç Not Found: The requested resource was not found.');\n  } else if (((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status) === 403) {\n    log('warn', 'üö´ Forbidden: You do not have permission to access this resource.');\n  }\n\n  // Handle 401/403 errors (unauthorized/forbidden)\n  if (((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.status) === 401 || ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.status) === 403) {\n    var _error$response0;\n    log('warn', 'üîê Authentication failed or unauthorized response detected');\n    log('debug', 'üîê Error details:', (_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data);\n    // Do NOT auto-clear tokens or redirect; let the app handle gracefully\n    // This avoids unexpected logout on background requests or transient errors\n  }\n\n  // Return error in consistent format\n  const errorMessage = ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || error.message || 'An error occurred';\n  return Promise.reject({\n    message: errorMessage,\n    status: (_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.status,\n    response: error.response,\n    originalError: error\n  });\n});\n\n// Rate limiting state\nlet loginInProgress = false;\nlet lastLoginAttempt = 0;\nconst LOGIN_COOLDOWN = 2000; // 2 seconds between login attempts\n\n// Auth API\nexport const authAPI = {\n  // Set auth token\n  setAuthToken: token => {\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete api.defaults.headers.common['Authorization'];\n    }\n  },\n  // Clear auth token\n  clearAuthToken: () => {\n    delete api.defaults.headers.common['Authorization'];\n  },\n  // Login with rate limiting\n  login: async (email, password) => {\n    log('info', 'üîê Login attempt triggered for:', email);\n\n    // Prevent multiple parallel logins\n    if (loginInProgress) {\n      log('warn', '‚ö†Ô∏è Login already in progress, ignoring duplicate request');\n      return Promise.reject({\n        message: 'Login already in progress'\n      });\n    }\n\n    // Check cooldown period\n    const now = Date.now();\n    const timeSinceLastAttempt = now - lastLoginAttempt;\n    if (timeSinceLastAttempt < LOGIN_COOLDOWN) {\n      const remainingCooldown = LOGIN_COOLDOWN - timeSinceLastAttempt;\n      log('warn', `‚è∞ Login cooldown active, wait ${remainingCooldown}ms`);\n      return Promise.reject({\n        message: `Please wait ${Math.ceil(remainingCooldown / 1000)} seconds before trying again`\n      });\n    }\n    loginInProgress = true;\n    lastLoginAttempt = now;\n    try {\n      // Prefer canonical endpoint first\n      const respData = await api.post('/api/auth/login', {\n        email,\n        password\n      });\n      log('info', '‚úÖ Login successful via /api/auth/login');\n      // Normalize response shape\n      const normalized = normalizeLoginResponse(respData);\n      return normalized;\n    } catch (error) {\n      var _error$response11, _error$response12, _error$response$statu, _error$response13, _error$response14;\n      log('error', '‚ùå Login failed:', error.message);\n\n      // Handle specific error cases\n      if (((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.status) === 429) {\n        log('warn', 'üö´ Too many login attempts detected');\n        const e = new Error('Too many login attempts. Please wait before trying again.');\n        e.status = 429;\n        e.response = error.response;\n        throw e;\n      }\n      if (((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : _error$response12.status) === 431) {\n        log('warn', 'üì¶ Request headers too large - clearing cookies');\n        // Clear potentially oversized cookies\n        document.cookie.split(\";\").forEach(function (c) {\n          document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\");\n        });\n        const e = new Error('Request headers too large. Cookies cleared, please try again.');\n        e.status = 431;\n        e.response = error.response;\n        throw e;\n      }\n\n      // If we hit a network error (no response), automatically try alternative bases\n      const isNetworkError = !error.response && (/Network Error/i.test(error.message) || error.code === 'ERR_NETWORK');\n      if (isNetworkError) {\n        log('warn', 'üåê Network error detected. Trying alternative API bases...');\n        const candidates = deriveCandidateBases().filter(b => b && b !== api.defaults.baseURL);\n        for (const base of candidates) {\n          try {\n            log('info', 'üîÅ Attempting login against base:', base);\n            api.defaults.baseURL = base;\n            const altResp = await api.post('/api/auth/login', {\n              email,\n              password\n            });\n            const normalized = normalizeLoginResponse(altResp);\n            if (normalized.success) {\n              log('info', '‚úÖ Login successful after base switch:', base);\n              persistBaseURL(base);\n              return normalized;\n            }\n          } catch (e) {\n            var _e$response, _e$response$data;\n            const msg = (e === null || e === void 0 ? void 0 : e.message) || (e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message) || 'unknown';\n            log('warn', '‚ö†Ô∏è Base attempt failed:', base, '-', msg);\n          }\n          // Try legacy path on this base if /api/login not found\n          try {\n            const legacyResp = await api.post('/api/login', {\n              email,\n              password\n            });\n            const normalized = normalizeLoginResponse(legacyResp);\n            if (normalized.success) {\n              log('info', '‚úÖ Legacy /api/login successful after base switch:', base);\n              persistBaseURL(base);\n              return normalized;\n            }\n          } catch (_) {}\n        }\n        log('error', '‚ùå All alternative bases failed. Returning original error.');\n      }\n\n      // Fallback: if canonical not found, try alias /api/login\n      const status = (_error$response$statu = error === null || error === void 0 ? void 0 : (_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.status) !== null && _error$response$statu !== void 0 ? _error$response$statu : error === null || error === void 0 ? void 0 : error.status;\n      const dataText = typeof (error === null || error === void 0 ? void 0 : (_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : _error$response14.data) === 'string' ? error.response.data : '';\n      const isNotFound = status === 404 || dataText && dataText.includes('Cannot POST /api/auth/login');\n      if (isNotFound) {\n        log('warn', 'üîÅ /api/auth/login not available, falling back to /api/login');\n        const legacyData = await api.post('/api/login', {\n          email,\n          password\n        });\n        log('info', '‚úÖ Login successful via /api/login');\n        const normalized = normalizeLoginResponse(legacyData);\n        return normalized;\n      }\n      throw error;\n    } finally {\n      loginInProgress = false;\n    }\n  },\n  // Register\n  register: userData => {\n    return api.post('/api/auth/register', userData);\n  },\n  // Get profile\n  getProfile: () => {\n    return api.get('/api/auth/me');\n  },\n  // Update profile\n  updateProfile: profileData => {\n    return api.put('/api/auth/me', profileData);\n  },\n  // Change password\n  changePassword: (currentPassword, newPassword) => {\n    return api.put('/api/auth/password', {\n      currentPassword,\n      newPassword\n    });\n  },\n  // Forgot password\n  forgotPassword: email => {\n    return api.post('/api/auth/forgot-password', {\n      email\n    });\n  },\n  // Reset password\n  resetPassword: (token, password) => {\n    return api.post('/api/auth/reset-password', {\n      token,\n      password\n    });\n  },\n  // Refresh token\n  refreshToken: refreshToken => {\n    return api.post('/api/auth/refresh', {\n      refreshToken\n    });\n  },\n  // Logout\n  logout: () => {\n    return api.post('/api/auth/logout');\n  }\n};\n\n// Jobs API\nexport const jobsAPI = {\n  // Get all jobs\n  getJobs: (params = {}) => {\n    return api.get('/api/jobs', {\n      params\n    });\n  },\n  // Get job by ID\n  getJob: id => {\n    return api.get(`/api/jobs/${id}`);\n  },\n  // Create job\n  createJob: jobData => {\n    return api.post('/api/jobs', jobData);\n  },\n  // Update job\n  updateJob: (id, jobData) => {\n    return api.put(`/api/jobs/${id}`, jobData);\n  },\n  // Delete job\n  deleteJob: id => {\n    return api.delete(`/api/jobs/${id}`);\n  },\n  // Cancel job\n  cancelJob: id => {\n    return api.post(`/api/jobs/${id}/cancel`);\n  },\n  // Retry job\n  retryJob: id => {\n    return api.post(`/api/jobs/${id}/retry`);\n  },\n  // Get job statistics\n  getJobStats: () => {\n    return api.get('/api/jobs/stats');\n  }\n};\n\n// Results API\nexport const resultsAPI = {\n  // Get results for a job\n  getResults: (jobId, params = {}) => {\n    return api.get(`/api/jobs/${jobId}/results`, {\n      params\n    });\n  },\n  // Download results as CSV\n  downloadResults: jobId => {\n    return api.get(`/api/jobs/${jobId}/result`, {\n      responseType: 'blob'\n    });\n  }\n};\n\n// Dashboard API with 404 fallback and normalization\nexport const dashboardAPI = {\n  // Get dashboard stats with fallbacks\n  getStats: async () => {\n    const getStoredToken = () => localStorage.getItem('authToken') || localStorage.getItem('token') || '';\n    const tryAbsoluteUrl = async url => {\n      const token = getStoredToken();\n      const headers = token ? {\n        Authorization: `Bearer ${token}`\n      } : {};\n      const resp = await axios.get(url, {\n        headers,\n        params: {\n          _t: Date.now()\n        }\n      });\n      return resp.data || resp;\n    };\n\n    // Helper to detect HTML 404 pages like \"Cannot GET /api/dashboard/stats\"\n    const isLikelyHtmlNotFound = data => {\n      if (typeof data === 'string') {\n        const s = data.toLowerCase();\n        return s.includes('<html') && (s.includes('cannot get') || s.includes('cannot post'));\n      }\n      return false;\n    };\n\n    // Normalize various backend response shapes into a single structure\n    const normalizeDashboardResponse = resp => {\n      var _ref, _ref2, _payload$totalJobs, _ref3, _ref4, _payload$activeJobs, _ref5, _ref6, _payload$pendingJobs, _ref7, _ref8, _payload$failedJobs, _ref9, _payload$totalResults, _ref0, _payload$successRate, _ref1, _payload$jobsThisWeek, _ref10, _payload$resultsThisW;\n      const root = resp && resp.data ? resp.data : resp;\n      const payload = (root === null || root === void 0 ? void 0 : root.data) || (root === null || root === void 0 ? void 0 : root.stats) || root;\n      const stats = (payload === null || payload === void 0 ? void 0 : payload.stats) || {};\n      const recentJobs = (payload === null || payload === void 0 ? void 0 : payload.recentJobs) || (root === null || root === void 0 ? void 0 : root.recentJobs) || [];\n      const totalJobs = (_ref = (_ref2 = (_payload$totalJobs = payload === null || payload === void 0 ? void 0 : payload.totalJobs) !== null && _payload$totalJobs !== void 0 ? _payload$totalJobs : payload === null || payload === void 0 ? void 0 : payload.total_jobs) !== null && _ref2 !== void 0 ? _ref2 : stats === null || stats === void 0 ? void 0 : stats.completed) !== null && _ref !== void 0 ? _ref : 0;\n      const activeJobs = (_ref3 = (_ref4 = (_payload$activeJobs = payload === null || payload === void 0 ? void 0 : payload.activeJobs) !== null && _payload$activeJobs !== void 0 ? _payload$activeJobs : payload === null || payload === void 0 ? void 0 : payload.active_jobs) !== null && _ref4 !== void 0 ? _ref4 : stats === null || stats === void 0 ? void 0 : stats.running) !== null && _ref3 !== void 0 ? _ref3 : 0;\n      const pendingJobs = (_ref5 = (_ref6 = (_payload$pendingJobs = payload === null || payload === void 0 ? void 0 : payload.pendingJobs) !== null && _payload$pendingJobs !== void 0 ? _payload$pendingJobs : payload === null || payload === void 0 ? void 0 : payload.pending_jobs) !== null && _ref6 !== void 0 ? _ref6 : stats === null || stats === void 0 ? void 0 : stats.queued) !== null && _ref5 !== void 0 ? _ref5 : 0;\n      const failedJobs = (_ref7 = (_ref8 = (_payload$failedJobs = payload === null || payload === void 0 ? void 0 : payload.failedJobs) !== null && _payload$failedJobs !== void 0 ? _payload$failedJobs : payload === null || payload === void 0 ? void 0 : payload.failed_jobs) !== null && _ref8 !== void 0 ? _ref8 : stats === null || stats === void 0 ? void 0 : stats.failed) !== null && _ref7 !== void 0 ? _ref7 : 0;\n      const totalResults = (_ref9 = (_payload$totalResults = payload === null || payload === void 0 ? void 0 : payload.totalResults) !== null && _payload$totalResults !== void 0 ? _payload$totalResults : payload === null || payload === void 0 ? void 0 : payload.total_results) !== null && _ref9 !== void 0 ? _ref9 : 0;\n      const successRate = (_ref0 = (_payload$successRate = payload === null || payload === void 0 ? void 0 : payload.successRate) !== null && _payload$successRate !== void 0 ? _payload$successRate : payload === null || payload === void 0 ? void 0 : payload.success_rate) !== null && _ref0 !== void 0 ? _ref0 : 0;\n      const jobsThisWeek = (_ref1 = (_payload$jobsThisWeek = payload === null || payload === void 0 ? void 0 : payload.jobsThisWeek) !== null && _payload$jobsThisWeek !== void 0 ? _payload$jobsThisWeek : payload === null || payload === void 0 ? void 0 : payload.jobs_this_week) !== null && _ref1 !== void 0 ? _ref1 : 0;\n      const resultsThisWeek = (_ref10 = (_payload$resultsThisW = payload === null || payload === void 0 ? void 0 : payload.resultsThisWeek) !== null && _payload$resultsThisW !== void 0 ? _payload$resultsThisW : payload === null || payload === void 0 ? void 0 : payload.results_this_week) !== null && _ref10 !== void 0 ? _ref10 : 0;\n      return {\n        success: true,\n        data: {\n          totalJobs,\n          activeJobs,\n          pendingJobs,\n          failedJobs,\n          totalResults,\n          successRate,\n          jobsThisWeek,\n          resultsThisWeek,\n          recentJobs\n        }\n      };\n    };\n    try {\n      // Primary endpoint (current baseURL)\n      const resp = await api.get('/api/dashboard/stats');\n      return normalizeDashboardResponse(resp);\n    } catch (error) {\n      var _error$response15, _error$response16;\n      const status = (error === null || error === void 0 ? void 0 : error.status) || (error === null || error === void 0 ? void 0 : (_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : _error$response15.status);\n      const raw = error === null || error === void 0 ? void 0 : (_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : _error$response16.data;\n      const notFound = status === 404 || isLikelyHtmlNotFound(raw);\n      if (!notFound) {\n        throw error;\n      }\n\n      // Fallback chain (same host)\n      const fallbacks = ['/api/stats', '/api/jobs/stats'];\n      for (const path of fallbacks) {\n        try {\n          const fallbackResp = await api.get(path);\n          return normalizeDashboardResponse(fallbackResp);\n        } catch (fallbackErr) {\n          var _fallbackErr$response, _fallbackErr$response2;\n          const fbStatus = (fallbackErr === null || fallbackErr === void 0 ? void 0 : fallbackErr.status) || (fallbackErr === null || fallbackErr === void 0 ? void 0 : (_fallbackErr$response = fallbackErr.response) === null || _fallbackErr$response === void 0 ? void 0 : _fallbackErr$response.status);\n          const fbRaw = fallbackErr === null || fallbackErr === void 0 ? void 0 : (_fallbackErr$response2 = fallbackErr.response) === null || _fallbackErr$response2 === void 0 ? void 0 : _fallbackErr$response2.data;\n          const fbNotFound = fbStatus === 404 || isLikelyHtmlNotFound(fbRaw);\n          if (!fbNotFound) {\n            // Other error type; stop here\n            throw fallbackErr;\n          }\n          // else continue to next fallback\n        }\n      }\n\n      // Legacy server fallback (port 5002), try dashboard first\n      const legacyBase = 'http://localhost:5002';\n      try {\n        const legacyResp = await tryAbsoluteUrl(`${legacyBase}/api/dashboard/stats`);\n        return normalizeDashboardResponse(legacyResp);\n      } catch (legacyErr) {\n        var _legacyErr$response, _legacyErr$response2;\n        const ls = (legacyErr === null || legacyErr === void 0 ? void 0 : legacyErr.status) || (legacyErr === null || legacyErr === void 0 ? void 0 : (_legacyErr$response = legacyErr.response) === null || _legacyErr$response === void 0 ? void 0 : _legacyErr$response.status);\n        const lr = legacyErr === null || legacyErr === void 0 ? void 0 : (_legacyErr$response2 = legacyErr.response) === null || _legacyErr$response2 === void 0 ? void 0 : _legacyErr$response2.data;\n        const legacyNotFound = ls === 404 || isLikelyHtmlNotFound(lr);\n        if (!legacyNotFound && ls) {\n          throw legacyErr;\n        }\n      }\n\n      // As a last resort, fetch jobs list and compute basic stats\n      try {\n        const jobsResp = await tryAbsoluteUrl(`${legacyBase}/api/jobs`);\n        const jobsPayload = (jobsResp === null || jobsResp === void 0 ? void 0 : jobsResp.data) || (jobsResp === null || jobsResp === void 0 ? void 0 : jobsResp.jobs) || jobsResp || [];\n        const jobs = Array.isArray(jobsPayload) ? jobsPayload : jobsPayload.jobs || [];\n        const totalJobs = jobs.length;\n        const completedJobs = jobs.filter(j => j.status === 'completed').length;\n        const runningJobs = jobs.filter(j => j.status === 'running').length;\n        const pausedJobs = jobs.filter(j => j.status === 'paused').length;\n        const failedJobs = jobs.filter(j => j.status === 'failed').length;\n        const pendingJobs = jobs.filter(j => j.status === 'pending' || j.status === 'queued').length;\n        const activeJobs = runningJobs + pausedJobs;\n        const totalResults = jobs.reduce((sum, j) => sum + (j.resultCount || j.result_count || 0), 0);\n        const successRate = totalJobs > 0 ? Math.round(completedJobs / totalJobs * 100) : 0;\n        const recentJobs = jobs.slice(0, 5);\n        return {\n          success: true,\n          data: {\n            totalJobs: completedJobs,\n            activeJobs,\n            pendingJobs,\n            failedJobs,\n            totalResults,\n            successRate,\n            jobsThisWeek: 0,\n            resultsThisWeek: 0,\n            recentJobs\n          }\n        };\n      } catch (_) {\n        // ignore and fall through to empty structure\n      }\n\n      // If all fallbacks fail with 404, return a safe empty structure\n      return {\n        success: true,\n        data: {\n          totalJobs: 0,\n          activeJobs: 0,\n          pendingJobs: 0,\n          failedJobs: 0,\n          totalResults: 0,\n          successRate: 0,\n          jobsThisWeek: 0,\n          resultsThisWeek: 0,\n          recentJobs: []\n        }\n      };\n    }\n  }\n};\n\n// LinkedIn Accounts API\nexport const linkedinAccountsAPI = {\n  // Get all accounts\n  getAccounts: () => {\n    return api.get('/api/linkedin-accounts');\n  },\n  // Get account statistics\n  getStats: () => {\n    return api.get('/api/linkedin-accounts/stats');\n  },\n  // Add account with cookies\n  addWithCookies: formData => {\n    return api.post('/api/linkedin-accounts/add-with-cookies', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  // Delete account\n  deleteAccount: accountId => {\n    return api.delete(`/api/linkedin-accounts/${accountId}`);\n  },\n  // Bulk upload\n  bulkUpload: formData => {\n    return api.post('/api/linkedin-accounts/bulk', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n};\n\n// Health API for testing connectivity\nexport const healthAPI = {\n  check: () => api.get('/health')\n};\nexport default api;","map":{"version":3,"names":["axios","LOG_LEVEL","process","env","REACT_APP_LOG_LEVEL","window","localStorage","getItem","toLowerCase","LEVELS","error","warn","info","debug","shouldLog","level","_LEVELS$LOG_LEVEL","_LEVELS$level","current","target","log","args","fn","console","_","normalizeLoginResponse","respData","_data$data","_data$data2","_data$data3","_data$data4","data","authToken","accessToken","token","user","profile","refreshToken","success","Boolean","ok","message","err","isValidHttpUrl","str","u","URL","protocol","deriveCandidateBases","_window$location","envBase","REACT_APP_API_URL","trim","endsWith","slice","storedBase","fromOrigin","location","origin","includes","replace","rawCandidates","unique","Array","from","Set","filter","getInitialBaseURL","list","persistBaseURL","base","setItem","__API_BASE_URL__","ensureValidBaseURL","fallback","api","create","baseURL","timeout","headers","params","_t","Date","now","interceptors","request","use","config","_config$method","_config$headers$commo","fixedBase","defaults","method","toUpperCase","url","fullURL","path","normalizedBase","normalizedPath","startsWith","parsedToken","JSON","parse","e","authHeader","Authorization","common","tokenInStorage","substring","authHeaderSet","Promise","reject","response","_response$config","status","newToken","_error$response","_error$response2","_error$config","_error$response3","_error$response4","_error$response5","_error$response6","_error$response7","_error$response8","_error$response9","_error$response1","_error$response1$data","_error$response10","statusText","code","fullError","_error$response0","errorMessage","originalError","loginInProgress","lastLoginAttempt","LOGIN_COOLDOWN","authAPI","setAuthToken","clearAuthToken","login","email","password","timeSinceLastAttempt","remainingCooldown","Math","ceil","post","normalized","_error$response11","_error$response12","_error$response$statu","_error$response13","_error$response14","Error","document","cookie","split","forEach","c","toUTCString","isNetworkError","test","candidates","b","altResp","_e$response","_e$response$data","msg","legacyResp","dataText","isNotFound","legacyData","register","userData","getProfile","get","updateProfile","profileData","put","changePassword","currentPassword","newPassword","forgotPassword","resetPassword","logout","jobsAPI","getJobs","getJob","id","createJob","jobData","updateJob","deleteJob","delete","cancelJob","retryJob","getJobStats","resultsAPI","getResults","jobId","downloadResults","responseType","dashboardAPI","getStats","getStoredToken","tryAbsoluteUrl","resp","isLikelyHtmlNotFound","s","normalizeDashboardResponse","_ref","_ref2","_payload$totalJobs","_ref3","_ref4","_payload$activeJobs","_ref5","_ref6","_payload$pendingJobs","_ref7","_ref8","_payload$failedJobs","_ref9","_payload$totalResults","_ref0","_payload$successRate","_ref1","_payload$jobsThisWeek","_ref10","_payload$resultsThisW","root","payload","stats","recentJobs","totalJobs","total_jobs","completed","activeJobs","active_jobs","running","pendingJobs","pending_jobs","queued","failedJobs","failed_jobs","failed","totalResults","total_results","successRate","success_rate","jobsThisWeek","jobs_this_week","resultsThisWeek","results_this_week","_error$response15","_error$response16","raw","notFound","fallbacks","fallbackResp","fallbackErr","_fallbackErr$response","_fallbackErr$response2","fbStatus","fbRaw","fbNotFound","legacyBase","legacyErr","_legacyErr$response","_legacyErr$response2","ls","lr","legacyNotFound","jobsResp","jobsPayload","jobs","isArray","length","completedJobs","j","runningJobs","pausedJobs","reduce","sum","resultCount","result_count","round","linkedinAccountsAPI","getAccounts","addWithCookies","formData","deleteAccount","accountId","bulkUpload","healthAPI","check"],"sources":["C:/Users/krush/OneDrive/Desktop/Final/linkedin-automation-saas/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// ---- Lightweight log-level gating to reduce noisy logs ----\r\nconst LOG_LEVEL = (process.env.REACT_APP_LOG_LEVEL || (typeof window !== 'undefined' && localStorage.getItem('LOG_LEVEL')) || 'info').toLowerCase();\r\nconst LEVELS = { error: 0, warn: 1, info: 2, debug: 3 };\r\nfunction shouldLog(level) {\r\n  const current = LEVELS[LOG_LEVEL] ?? 2;\r\n  const target = LEVELS[level] ?? 2;\r\n  return target <= current;\r\n}\r\nfunction log(level, ...args) {\r\n  if (!shouldLog(level)) return;\r\n  const fn = level === 'debug' ? 'log' : level;\r\n  try { console[fn](...args); } catch (_) { /* no-op */ }\r\n}\r\n\r\n// Normalize login responses from different backend implementations\r\n// Returns a consistent shape: { success, authToken, user, refreshToken, message }\r\nfunction normalizeLoginResponse(respData) {\r\n  try {\r\n    const data = respData && respData.data ? respData.data : respData;\r\n\r\n    const authToken = (\r\n      data?.accessToken ||\r\n      data?.data?.accessToken ||\r\n      data?.token ||\r\n      data?.data?.token ||\r\n      data?.authToken ||\r\n      null\r\n    );\r\n\r\n    const user = (\r\n      data?.user ||\r\n      data?.data?.user ||\r\n      data?.profile ||\r\n      null\r\n    );\r\n\r\n    const refreshToken = (\r\n      data?.refreshToken ||\r\n      data?.data?.refreshToken ||\r\n      null\r\n    );\r\n\r\n    const success = Boolean(\r\n      data?.success === true ||\r\n      data?.ok === true ||\r\n      authToken\r\n    );\r\n\r\n    if (!success) {\r\n      const message = (\r\n        data?.message ||\r\n        data?.error ||\r\n        (typeof data === 'string' ? data : 'Login failed')\r\n      );\r\n      return { success: false, message };\r\n    }\r\n\r\n    return {\r\n      success: true,\r\n      authToken,\r\n      user,\r\n      refreshToken,\r\n      message: data?.message || 'Login successful',\r\n    };\r\n  } catch (err) {\r\n    return { success: false, message: 'Login response parsing error' };\r\n  }\r\n}\r\n\r\n// ---- Backend base URL resolution and fallback helpers ----\r\nfunction isValidHttpUrl(str) {\r\n  try {\r\n    if (!str || typeof str !== 'string') return false;\r\n    const u = new URL(str);\r\n    return u.protocol === 'http:' || u.protocol === 'https:';\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction deriveCandidateBases() {\r\n  // Read env and normalize for trailing slashes to avoid double-slash URLs\r\n  let envBase = process.env.REACT_APP_API_URL;\r\n  if (typeof envBase === 'string') {\r\n    envBase = envBase.trim();\r\n    // Strip trailing slash to ensure endpoint concatenation is consistent\r\n    if (envBase.endsWith('/')) envBase = envBase.slice(0, -1);\r\n  }\r\n  const storedBase = typeof window !== 'undefined' ? localStorage.getItem('API_BASE_URL') : null;\r\n  const fromOrigin = typeof window !== 'undefined' && window.location?.origin\r\n    ? (window.location.origin.includes(':5001')\r\n        ? window.location.origin.replace(':5001', ':5002')\r\n        : window.location.origin)\r\n    : null;\r\n  const rawCandidates = [envBase, storedBase, fromOrigin, 'http://localhost:5002', 'http://localhost:5001', 'https://scralytics.com'];\r\n  const unique = Array.from(new Set(rawCandidates.filter(Boolean)));\r\n  return unique.filter(isValidHttpUrl);\r\n}\r\n\r\nfunction getInitialBaseURL() {\r\n  const list = deriveCandidateBases();\r\n  return list[0] || 'http://localhost:5001';\r\n}\r\n\r\nfunction persistBaseURL(base) {\r\n  try {\r\n    if (typeof window !== 'undefined' && base && isValidHttpUrl(base)) {\r\n      localStorage.setItem('API_BASE_URL', base);\r\n      window.__API_BASE_URL__ = base;\r\n    }\r\n  } catch (_) {}\r\n}\r\n\r\n// Ensure axios has a valid baseURL; if not, set a sane fallback\r\nfunction ensureValidBaseURL(current) {\r\n  if (isValidHttpUrl(current)) return current;\r\n  const fallback = getInitialBaseURL();\r\n  return isValidHttpUrl(fallback) ? fallback : 'http://localhost:5001';\r\n}\r\n\r\n// Create axios instance with resilient base URL\r\nconst api = axios.create({\r\n  baseURL: getInitialBaseURL(),\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  params: {\r\n    _t: Date.now() // Cache busting parameter\r\n  }\r\n});\r\n\r\n// Request interceptor with logging and auth\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Guard against invalid baseURL before axios constructs the request\r\n    const fixedBase = ensureValidBaseURL(config.baseURL || api.defaults.baseURL);\r\n    if (fixedBase !== config.baseURL) {\r\n      config.baseURL = fixedBase;\r\n      api.defaults.baseURL = fixedBase;\r\n      log('warn', 'üîß Fixed invalid baseURL; using:', fixedBase);\r\n    }\r\n\r\n  // Add logging for debugging\r\n  log('info', 'üåê API Request:', {\r\n    method: config.method?.toUpperCase(),\r\n    url: config.url || '(no-url)',\r\n    baseURL: config.baseURL || '(no-baseURL)',\r\n    fullURL: (() => {\r\n      const base = config.baseURL || api.defaults.baseURL;\r\n      const path = config.url || '';\r\n      if (!base) return path || '(no-url)';\r\n      // Avoid double slashes when concatenating\r\n      const normalizedBase = base.endsWith('/') ? base.slice(0, -1) : base;\r\n      const normalizedPath = path.startsWith('/') ? path : `/${path}`;\r\n      return `${normalizedBase}${normalizedPath}`;\r\n    })()\r\n  });\r\n    \r\n    // Token is set via authAPI.setAuthToken() - no need to set here\r\n    // Debug token presence\r\n    let token = localStorage.getItem('authToken') || localStorage.getItem('token');\r\n    if (token && token.includes('{')) {\r\n      try {\r\n        const parsedToken = JSON.parse(token);\r\n        token = parsedToken.token || token;\r\n      } catch (e) {\r\n        log('error', 'Failed to parse token from localStorage', e);\r\n      }\r\n    }\r\n    const authHeader = config.headers.Authorization || config.headers.common?.Authorization;\r\n    log('debug', 'üîê Frontend Token Debug:', { \r\n      tokenInStorage: token ? token.substring(0, 20) + '...' : 'null',\r\n      authHeaderSet: authHeader ? authHeader.substring(0, 30) + '...' : 'null'\r\n    });\r\n    \r\n    if (!authHeader && token) {\r\n      log('warn', '‚ö†Ô∏è Token exists in storage but not in headers - setting manually');\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    log('error', '‚ùå Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor with enhanced logging\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    // Log successful responses\r\n    log('info', '‚úÖ API Response:', {\r\n      status: response.status,\r\n      url: response.config?.url,\r\n      data: response.data\r\n    });\r\n    \r\n    // Check for new token in response headers\r\n    const newToken = response.headers['x-new-token'];\r\n    if (newToken) {\r\n      // Persist and apply refreshed token\r\n      try {\r\n        localStorage.setItem('token', newToken);\r\n        localStorage.setItem('authToken', newToken);\r\n      } catch (_) {}\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\r\n      log('info', 'üîÑ Applied refreshed token from X-New-Token header');\r\n    }\r\n\r\n    return response.data;\r\n  },\r\n  (error) => {\r\n    // Enhanced error logging\r\n    log('error', '‚ùå API Response Error:', {\r\n      message: error.message,\r\n      status: error.response?.status,\r\n      statusText: error.response?.statusText,\r\n      url: error.config?.url,\r\n      data: error.response?.data,\r\n      headers: error.response?.headers,\r\n      code: error.code,\r\n      fullError: error\r\n    });\r\n    \r\n    // Add user-friendly error message\r\n    if (error.response?.status === 500) {\r\n      log('error', 'üî• Server Error: The server encountered an internal error. Please try again later.');\r\n    } else if (error.response?.status === 404) {\r\n      log('warn', 'üîç Not Found: The requested resource was not found.');\r\n    } else if (error.response?.status === 403) {\r\n      log('warn', 'üö´ Forbidden: You do not have permission to access this resource.');\r\n    }\r\n    \r\n    // Handle 401/403 errors (unauthorized/forbidden)\r\n    if (error.response?.status === 401 || error.response?.status === 403) {\r\n      log('warn', 'üîê Authentication failed or unauthorized response detected');\r\n      log('debug', 'üîê Error details:', error.response?.data);\r\n      // Do NOT auto-clear tokens or redirect; let the app handle gracefully\r\n      // This avoids unexpected logout on background requests or transient errors\r\n    }\r\n    \r\n    // Return error in consistent format\r\n    const errorMessage = error.response?.data?.message || error.message || 'An error occurred';\r\n    return Promise.reject({\r\n      message: errorMessage,\r\n      status: error.response?.status,\r\n      response: error.response,\r\n      originalError: error\r\n    });\r\n  }\r\n);\r\n\r\n// Rate limiting state\r\nlet loginInProgress = false;\r\nlet lastLoginAttempt = 0;\r\nconst LOGIN_COOLDOWN = 2000; // 2 seconds between login attempts\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  // Set auth token\r\n  setAuthToken: (token) => {\r\n    if (token) {\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n      delete api.defaults.headers.common['Authorization'];\r\n    }\r\n  },\r\n  \r\n  // Clear auth token\r\n  clearAuthToken: () => {\r\n    delete api.defaults.headers.common['Authorization'];\r\n  },\r\n  \r\n  // Login with rate limiting\r\n  login: async (email, password) => {\r\n    log('info', 'üîê Login attempt triggered for:', email);\r\n    \r\n    // Prevent multiple parallel logins\r\n    if (loginInProgress) {\r\n      log('warn', '‚ö†Ô∏è Login already in progress, ignoring duplicate request');\r\n      return Promise.reject({ message: 'Login already in progress' });\r\n    }\r\n    \r\n    // Check cooldown period\r\n    const now = Date.now();\r\n    const timeSinceLastAttempt = now - lastLoginAttempt;\r\n    if (timeSinceLastAttempt < LOGIN_COOLDOWN) {\r\n      const remainingCooldown = LOGIN_COOLDOWN - timeSinceLastAttempt;\r\n      log('warn', `‚è∞ Login cooldown active, wait ${remainingCooldown}ms`);\r\n      return Promise.reject({ \r\n        message: `Please wait ${Math.ceil(remainingCooldown / 1000)} seconds before trying again` \r\n      });\r\n    }\r\n    \r\n    loginInProgress = true;\r\n    lastLoginAttempt = now;\r\n    \r\n    try {\r\n      // Prefer canonical endpoint first\r\n      const respData = await api.post('/api/auth/login', { email, password });\r\n      log('info', '‚úÖ Login successful via /api/auth/login');\r\n      // Normalize response shape\r\n      const normalized = normalizeLoginResponse(respData);\r\n      return normalized;\r\n    } catch (error) {\r\n      log('error', '‚ùå Login failed:', error.message);\r\n      \r\n      // Handle specific error cases\r\n      if (error.response?.status === 429) {\r\n        log('warn', 'üö´ Too many login attempts detected');\r\n        const e = new Error('Too many login attempts. Please wait before trying again.');\r\n        e.status = 429;\r\n        e.response = error.response;\r\n        throw e;\r\n      }\r\n      \r\n      if (error.response?.status === 431) {\r\n        log('warn', 'üì¶ Request headers too large - clearing cookies');\r\n        // Clear potentially oversized cookies\r\n        document.cookie.split(\";\").forEach(function(c) { \r\n          document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\"); \r\n        });\r\n        const e = new Error('Request headers too large. Cookies cleared, please try again.');\r\n        e.status = 431;\r\n        e.response = error.response;\r\n        throw e;\r\n      }\r\n      \r\n      // If we hit a network error (no response), automatically try alternative bases\r\n      const isNetworkError = !error.response && (/Network Error/i.test(error.message) || error.code === 'ERR_NETWORK');\r\n      if (isNetworkError) {\r\n        log('warn', 'üåê Network error detected. Trying alternative API bases...');\r\n        const candidates = deriveCandidateBases().filter(b => b && b !== api.defaults.baseURL);\r\n        for (const base of candidates) {\r\n          try {\r\n            log('info', 'üîÅ Attempting login against base:', base);\r\n            api.defaults.baseURL = base;\r\n            const altResp = await api.post('/api/auth/login', { email, password });\r\n            const normalized = normalizeLoginResponse(altResp);\r\n            if (normalized.success) {\r\n              log('info', '‚úÖ Login successful after base switch:', base);\r\n              persistBaseURL(base);\r\n              return normalized;\r\n            }\r\n          } catch (e) {\r\n            const msg = e?.message || e?.response?.data?.message || 'unknown';\r\n            log('warn', '‚ö†Ô∏è Base attempt failed:', base, '-', msg);\r\n          }\r\n          // Try legacy path on this base if /api/login not found\r\n          try {\r\n            const legacyResp = await api.post('/api/login', { email, password });\r\n            const normalized = normalizeLoginResponse(legacyResp);\r\n            if (normalized.success) {\r\n              log('info', '‚úÖ Legacy /api/login successful after base switch:', base);\r\n              persistBaseURL(base);\r\n              return normalized;\r\n            }\r\n          } catch (_) {}\r\n        }\r\n        log('error', '‚ùå All alternative bases failed. Returning original error.');\r\n      }\r\n\r\n      // Fallback: if canonical not found, try alias /api/login\r\n      const status = (error?.response?.status ?? error?.status);\r\n      const dataText = typeof error?.response?.data === 'string' ? error.response.data : '';\r\n      const isNotFound = status === 404 || (dataText && dataText.includes('Cannot POST /api/auth/login'));\r\n      if (isNotFound) {\r\n        log('warn', 'üîÅ /api/auth/login not available, falling back to /api/login');\r\n        const legacyData = await api.post('/api/login', { email, password });\r\n        log('info', '‚úÖ Login successful via /api/login');\r\n        const normalized = normalizeLoginResponse(legacyData);\r\n        return normalized;\r\n      }\r\n\r\n      throw error;\r\n    } finally {\r\n      loginInProgress = false;\r\n    }\r\n  },\r\n  \r\n  // Register\r\n  register: (userData) => {\r\n    return api.post('/api/auth/register', userData);\r\n  },\r\n  \r\n  // Get profile\r\n  getProfile: () => {\r\n    return api.get('/api/auth/me');\r\n  },\r\n  \r\n  // Update profile\r\n  updateProfile: (profileData) => {\r\n    return api.put('/api/auth/me', profileData);\r\n  },\r\n  \r\n  // Change password\r\n  changePassword: (currentPassword, newPassword) => {\r\n    return api.put('/api/auth/password', {\r\n      currentPassword,\r\n      newPassword,\r\n    });\r\n  },\r\n  \r\n  // Forgot password\r\n  forgotPassword: (email) => {\r\n    return api.post('/api/auth/forgot-password', { email });\r\n  },\r\n  \r\n  // Reset password\r\n  resetPassword: (token, password) => {\r\n    return api.post('/api/auth/reset-password', { token, password });\r\n  },\r\n  \r\n  // Refresh token\r\n  refreshToken: (refreshToken) => {\r\n    return api.post('/api/auth/refresh', { refreshToken });\r\n  },\r\n  \r\n  // Logout\r\n  logout: () => {\r\n    return api.post('/api/auth/logout');\r\n  },\r\n};\r\n\r\n// Jobs API\r\nexport const jobsAPI = {\r\n  // Get all jobs\r\n  getJobs: (params = {}) => {\r\n    return api.get('/api/jobs', { params });\r\n  },\r\n  \r\n  // Get job by ID\r\n  getJob: (id) => {\r\n    return api.get(`/api/jobs/${id}`);\r\n  },\r\n  \r\n  // Create job\r\n  createJob: (jobData) => {\r\n    return api.post('/api/jobs', jobData);\r\n  },\r\n  \r\n  // Update job\r\n  updateJob: (id, jobData) => {\r\n    return api.put(`/api/jobs/${id}`, jobData);\r\n  },\r\n  \r\n  // Delete job\r\n  deleteJob: (id) => {\r\n    return api.delete(`/api/jobs/${id}`);\r\n  },\r\n  \r\n  // Cancel job\r\n  cancelJob: (id) => {\r\n    return api.post(`/api/jobs/${id}/cancel`);\r\n  },\r\n  \r\n  // Retry job\r\n  retryJob: (id) => {\r\n    return api.post(`/api/jobs/${id}/retry`);\r\n  },\r\n  \r\n  // Get job statistics\r\n  getJobStats: () => {\r\n    return api.get('/api/jobs/stats');\r\n  },\r\n};\r\n\r\n// Results API\r\nexport const resultsAPI = {\r\n  // Get results for a job\r\n  getResults: (jobId, params = {}) => {\r\n    return api.get(`/api/jobs/${jobId}/results`, { params });\r\n  },\r\n  \r\n  // Download results as CSV\r\n  downloadResults: (jobId) => {\r\n    return api.get(`/api/jobs/${jobId}/result`, { responseType: 'blob' });\r\n  },\r\n};\r\n\r\n// Dashboard API with 404 fallback and normalization\r\nexport const dashboardAPI = {\r\n  // Get dashboard stats with fallbacks\r\n  getStats: async () => {\r\n    const getStoredToken = () => (\r\n      localStorage.getItem('authToken') || localStorage.getItem('token') || ''\r\n    );\r\n\r\n    const tryAbsoluteUrl = async (url) => {\r\n      const token = getStoredToken();\r\n      const headers = token ? { Authorization: `Bearer ${token}` } : {};\r\n      const resp = await axios.get(url, { headers, params: { _t: Date.now() } });\r\n      return resp.data || resp;\r\n    };\r\n\r\n    // Helper to detect HTML 404 pages like \"Cannot GET /api/dashboard/stats\"\r\n    const isLikelyHtmlNotFound = (data) => {\r\n      if (typeof data === 'string') {\r\n        const s = data.toLowerCase();\r\n        return s.includes('<html') && (s.includes('cannot get') || s.includes('cannot post'));\r\n      }\r\n      return false;\r\n    };\r\n\r\n    // Normalize various backend response shapes into a single structure\r\n    const normalizeDashboardResponse = (resp) => {\r\n      const root = resp && resp.data ? resp.data : resp;\r\n      const payload = root?.data || root?.stats || root;\r\n\r\n      const stats = payload?.stats || {};\r\n      const recentJobs = payload?.recentJobs || root?.recentJobs || [];\r\n\r\n      const totalJobs = (\r\n        payload?.totalJobs ?? payload?.total_jobs ?? stats?.completed ?? 0\r\n      );\r\n      const activeJobs = (\r\n        payload?.activeJobs ?? payload?.active_jobs ?? stats?.running ?? 0\r\n      );\r\n      const pendingJobs = (\r\n        payload?.pendingJobs ?? payload?.pending_jobs ?? stats?.queued ?? 0\r\n      );\r\n      const failedJobs = (\r\n        payload?.failedJobs ?? payload?.failed_jobs ?? stats?.failed ?? 0\r\n      );\r\n      const totalResults = (\r\n        payload?.totalResults ?? payload?.total_results ?? 0\r\n      );\r\n      const successRate = (\r\n        payload?.successRate ?? payload?.success_rate ?? 0\r\n      );\r\n      const jobsThisWeek = (\r\n        payload?.jobsThisWeek ?? payload?.jobs_this_week ?? 0\r\n      );\r\n      const resultsThisWeek = (\r\n        payload?.resultsThisWeek ?? payload?.results_this_week ?? 0\r\n      );\r\n\r\n      return {\r\n        success: true,\r\n        data: {\r\n          totalJobs,\r\n          activeJobs,\r\n          pendingJobs,\r\n          failedJobs,\r\n          totalResults,\r\n          successRate,\r\n          jobsThisWeek,\r\n          resultsThisWeek,\r\n          recentJobs\r\n        }\r\n      };\r\n    };\r\n\r\n    try {\r\n      // Primary endpoint (current baseURL)\r\n      const resp = await api.get('/api/dashboard/stats');\r\n      return normalizeDashboardResponse(resp);\r\n    } catch (error) {\r\n      const status = error?.status || error?.response?.status;\r\n      const raw = error?.response?.data;\r\n      const notFound = status === 404 || isLikelyHtmlNotFound(raw);\r\n\r\n      if (!notFound) {\r\n        throw error;\r\n      }\r\n\r\n      // Fallback chain (same host)\r\n      const fallbacks = ['/api/stats', '/api/jobs/stats'];\r\n      for (const path of fallbacks) {\r\n        try {\r\n          const fallbackResp = await api.get(path);\r\n          return normalizeDashboardResponse(fallbackResp);\r\n        } catch (fallbackErr) {\r\n          const fbStatus = fallbackErr?.status || fallbackErr?.response?.status;\r\n          const fbRaw = fallbackErr?.response?.data;\r\n          const fbNotFound = fbStatus === 404 || isLikelyHtmlNotFound(fbRaw);\r\n          if (!fbNotFound) {\r\n            // Other error type; stop here\r\n            throw fallbackErr;\r\n          }\r\n          // else continue to next fallback\r\n        }\r\n      }\r\n\r\n      // Legacy server fallback (port 5002), try dashboard first\r\n      const legacyBase = 'http://localhost:5002';\r\n      try {\r\n        const legacyResp = await tryAbsoluteUrl(`${legacyBase}/api/dashboard/stats`);\r\n        return normalizeDashboardResponse(legacyResp);\r\n      } catch (legacyErr) {\r\n        const ls = legacyErr?.status || legacyErr?.response?.status;\r\n        const lr = legacyErr?.response?.data;\r\n        const legacyNotFound = ls === 404 || isLikelyHtmlNotFound(lr);\r\n        if (!legacyNotFound && ls) {\r\n          throw legacyErr;\r\n        }\r\n      }\r\n\r\n      // As a last resort, fetch jobs list and compute basic stats\r\n      try {\r\n        const jobsResp = await tryAbsoluteUrl(`${legacyBase}/api/jobs`);\r\n        const jobsPayload = jobsResp?.data || jobsResp?.jobs || jobsResp || [];\r\n        const jobs = Array.isArray(jobsPayload) ? jobsPayload : (jobsPayload.jobs || []);\r\n        const totalJobs = jobs.length;\r\n        const completedJobs = jobs.filter(j => j.status === 'completed').length;\r\n        const runningJobs = jobs.filter(j => j.status === 'running').length;\r\n        const pausedJobs = jobs.filter(j => j.status === 'paused').length;\r\n        const failedJobs = jobs.filter(j => j.status === 'failed').length;\r\n        const pendingJobs = jobs.filter(j => j.status === 'pending' || j.status === 'queued').length;\r\n        const activeJobs = runningJobs + pausedJobs;\r\n        const totalResults = jobs.reduce((sum, j) => sum + (j.resultCount || j.result_count || 0), 0);\r\n        const successRate = totalJobs > 0 ? Math.round((completedJobs / totalJobs) * 100) : 0;\r\n        const recentJobs = jobs.slice(0, 5);\r\n\r\n        return {\r\n          success: true,\r\n          data: {\r\n            totalJobs: completedJobs,\r\n            activeJobs,\r\n            pendingJobs,\r\n            failedJobs,\r\n            totalResults,\r\n            successRate,\r\n            jobsThisWeek: 0,\r\n            resultsThisWeek: 0,\r\n            recentJobs\r\n          }\r\n        };\r\n      } catch (_) {\r\n        // ignore and fall through to empty structure\r\n      }\r\n\r\n      // If all fallbacks fail with 404, return a safe empty structure\r\n      return {\r\n        success: true,\r\n        data: {\r\n          totalJobs: 0,\r\n          activeJobs: 0,\r\n          pendingJobs: 0,\r\n          failedJobs: 0,\r\n          totalResults: 0,\r\n          successRate: 0,\r\n          jobsThisWeek: 0,\r\n          resultsThisWeek: 0,\r\n          recentJobs: []\r\n        }\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\n// LinkedIn Accounts API\r\nexport const linkedinAccountsAPI = {\r\n  // Get all accounts\r\n  getAccounts: () => {\r\n    return api.get('/api/linkedin-accounts');\r\n  },\r\n  \r\n  // Get account statistics\r\n  getStats: () => {\r\n    return api.get('/api/linkedin-accounts/stats');\r\n  },\r\n  \r\n  // Add account with cookies\r\n  addWithCookies: (formData) => {\r\n    return api.post('/api/linkedin-accounts/add-with-cookies', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n  \r\n  // Delete account\r\n  deleteAccount: (accountId) => {\r\n    return api.delete(`/api/linkedin-accounts/${accountId}`);\r\n  },\r\n  \r\n  // Bulk upload\r\n  bulkUpload: (formData) => {\r\n    return api.post('/api/linkedin-accounts/bulk', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n};\r\n\r\n// Health API for testing connectivity\r\nexport const healthAPI = {\r\n  check: () => api.get('/health'),\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,SAAS,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,mBAAmB,IAAK,OAAOC,MAAM,KAAK,WAAW,IAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAE,IAAI,MAAM,EAAEC,WAAW,CAAC,CAAC;AACnJ,MAAMC,MAAM,GAAG;EAAEC,KAAK,EAAE,CAAC;EAAEC,IAAI,EAAE,CAAC;EAAEC,IAAI,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAE,CAAC;AACvD,SAASC,SAASA,CAACC,KAAK,EAAE;EAAA,IAAAC,iBAAA,EAAAC,aAAA;EACxB,MAAMC,OAAO,IAAAF,iBAAA,GAAGP,MAAM,CAACR,SAAS,CAAC,cAAAe,iBAAA,cAAAA,iBAAA,GAAI,CAAC;EACtC,MAAMG,MAAM,IAAAF,aAAA,GAAGR,MAAM,CAACM,KAAK,CAAC,cAAAE,aAAA,cAAAA,aAAA,GAAI,CAAC;EACjC,OAAOE,MAAM,IAAID,OAAO;AAC1B;AACA,SAASE,GAAGA,CAACL,KAAK,EAAE,GAAGM,IAAI,EAAE;EAC3B,IAAI,CAACP,SAAS,CAACC,KAAK,CAAC,EAAE;EACvB,MAAMO,EAAE,GAAGP,KAAK,KAAK,OAAO,GAAG,KAAK,GAAGA,KAAK;EAC5C,IAAI;IAAEQ,OAAO,CAACD,EAAE,CAAC,CAAC,GAAGD,IAAI,CAAC;EAAE,CAAC,CAAC,OAAOG,CAAC,EAAE,CAAE;AAC5C;;AAEA;AACA;AACA,SAASC,sBAAsBA,CAACC,QAAQ,EAAE;EACxC,IAAI;IAAA,IAAAC,UAAA,EAAAC,WAAA,EAAAC,WAAA,EAAAC,WAAA;IACF,MAAMC,IAAI,GAAGL,QAAQ,IAAIA,QAAQ,CAACK,IAAI,GAAGL,QAAQ,CAACK,IAAI,GAAGL,QAAQ;IAEjE,MAAMM,SAAS,GACb,CAAAD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,WAAW,MACjBF,IAAI,aAAJA,IAAI,wBAAAJ,UAAA,GAAJI,IAAI,CAAEA,IAAI,cAAAJ,UAAA,uBAAVA,UAAA,CAAYM,WAAW,MACvBF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,KAAK,MACXH,IAAI,aAAJA,IAAI,wBAAAH,WAAA,GAAJG,IAAI,CAAEA,IAAI,cAAAH,WAAA,uBAAVA,WAAA,CAAYM,KAAK,MACjBH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,SAAS,KACf,IACD;IAED,MAAMG,IAAI,GACR,CAAAJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,IAAI,MACVJ,IAAI,aAAJA,IAAI,wBAAAF,WAAA,GAAJE,IAAI,CAAEA,IAAI,cAAAF,WAAA,uBAAVA,WAAA,CAAYM,IAAI,MAChBJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEK,OAAO,KACb,IACD;IAED,MAAMC,YAAY,GAChB,CAAAN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,YAAY,MAClBN,IAAI,aAAJA,IAAI,wBAAAD,WAAA,GAAJC,IAAI,CAAEA,IAAI,cAAAD,WAAA,uBAAVA,WAAA,CAAYO,YAAY,KACxB,IACD;IAED,MAAMC,OAAO,GAAGC,OAAO,CACrB,CAAAR,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,OAAO,MAAK,IAAI,IACtB,CAAAP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAES,EAAE,MAAK,IAAI,IACjBR,SACF,CAAC;IAED,IAAI,CAACM,OAAO,EAAE;MACZ,MAAMG,OAAO,GACX,CAAAV,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU,OAAO,MACbV,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAErB,KAAK,MACV,OAAOqB,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAG,cAAc,CAClD;MACD,OAAO;QAAEO,OAAO,EAAE,KAAK;QAAEG;MAAQ,CAAC;IACpC;IAEA,OAAO;MACLH,OAAO,EAAE,IAAI;MACbN,SAAS;MACTG,IAAI;MACJE,YAAY;MACZI,OAAO,EAAE,CAAAV,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU,OAAO,KAAI;IAC5B,CAAC;EACH,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,OAAO;MAAEJ,OAAO,EAAE,KAAK;MAAEG,OAAO,EAAE;IAA+B,CAAC;EACpE;AACF;;AAEA;AACA,SAASE,cAAcA,CAACC,GAAG,EAAE;EAC3B,IAAI;IACF,IAAI,CAACA,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE,OAAO,KAAK;IACjD,MAAMC,CAAC,GAAG,IAAIC,GAAG,CAACF,GAAG,CAAC;IACtB,OAAOC,CAAC,CAACE,QAAQ,KAAK,OAAO,IAAIF,CAAC,CAACE,QAAQ,KAAK,QAAQ;EAC1D,CAAC,CAAC,MAAM;IACN,OAAO,KAAK;EACd;AACF;AAEA,SAASC,oBAAoBA,CAAA,EAAG;EAAA,IAAAC,gBAAA;EAC9B;EACA,IAAIC,OAAO,GAAGhD,OAAO,CAACC,GAAG,CAACgD,iBAAiB;EAC3C,IAAI,OAAOD,OAAO,KAAK,QAAQ,EAAE;IAC/BA,OAAO,GAAGA,OAAO,CAACE,IAAI,CAAC,CAAC;IACxB;IACA,IAAIF,OAAO,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAEH,OAAO,GAAGA,OAAO,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC3D;EACA,MAAMC,UAAU,GAAG,OAAOlD,MAAM,KAAK,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,GAAG,IAAI;EAC9F,MAAMiD,UAAU,GAAG,OAAOnD,MAAM,KAAK,WAAW,KAAA4C,gBAAA,GAAI5C,MAAM,CAACoD,QAAQ,cAAAR,gBAAA,eAAfA,gBAAA,CAAiBS,MAAM,GACtErD,MAAM,CAACoD,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAAC,OAAO,CAAC,GACrCtD,MAAM,CAACoD,QAAQ,CAACC,MAAM,CAACE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,GAChDvD,MAAM,CAACoD,QAAQ,CAACC,MAAM,GAC1B,IAAI;EACR,MAAMG,aAAa,GAAG,CAACX,OAAO,EAAEK,UAAU,EAAEC,UAAU,EAAE,uBAAuB,EAAE,uBAAuB,EAAE,wBAAwB,CAAC;EACnI,MAAMM,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACJ,aAAa,CAACK,MAAM,CAAC3B,OAAO,CAAC,CAAC,CAAC;EACjE,OAAOuB,MAAM,CAACI,MAAM,CAACvB,cAAc,CAAC;AACtC;AAEA,SAASwB,iBAAiBA,CAAA,EAAG;EAC3B,MAAMC,IAAI,GAAGpB,oBAAoB,CAAC,CAAC;EACnC,OAAOoB,IAAI,CAAC,CAAC,CAAC,IAAI,uBAAuB;AAC3C;AAEA,SAASC,cAAcA,CAACC,IAAI,EAAE;EAC5B,IAAI;IACF,IAAI,OAAOjE,MAAM,KAAK,WAAW,IAAIiE,IAAI,IAAI3B,cAAc,CAAC2B,IAAI,CAAC,EAAE;MACjEhE,YAAY,CAACiE,OAAO,CAAC,cAAc,EAAED,IAAI,CAAC;MAC1CjE,MAAM,CAACmE,gBAAgB,GAAGF,IAAI;IAChC;EACF,CAAC,CAAC,OAAO9C,CAAC,EAAE,CAAC;AACf;;AAEA;AACA,SAASiD,kBAAkBA,CAACvD,OAAO,EAAE;EACnC,IAAIyB,cAAc,CAACzB,OAAO,CAAC,EAAE,OAAOA,OAAO;EAC3C,MAAMwD,QAAQ,GAAGP,iBAAiB,CAAC,CAAC;EACpC,OAAOxB,cAAc,CAAC+B,QAAQ,CAAC,GAAGA,QAAQ,GAAG,uBAAuB;AACtE;;AAEA;AACA,MAAMC,GAAG,GAAG3E,KAAK,CAAC4E,MAAM,CAAC;EACvBC,OAAO,EAAEV,iBAAiB,CAAC,CAAC;EAC5BW,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,MAAM,EAAE;IACNC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;EACjB;AACF,CAAC,CAAC;;AAEF;AACAR,GAAG,CAACS,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EAAA,IAAAC,cAAA,EAAAC,qBAAA;EACV;EACA,MAAMC,SAAS,GAAGjB,kBAAkB,CAACc,MAAM,CAACV,OAAO,IAAIF,GAAG,CAACgB,QAAQ,CAACd,OAAO,CAAC;EAC5E,IAAIa,SAAS,KAAKH,MAAM,CAACV,OAAO,EAAE;IAChCU,MAAM,CAACV,OAAO,GAAGa,SAAS;IAC1Bf,GAAG,CAACgB,QAAQ,CAACd,OAAO,GAAGa,SAAS;IAChCtE,GAAG,CAAC,MAAM,EAAE,kCAAkC,EAAEsE,SAAS,CAAC;EAC5D;;EAEF;EACAtE,GAAG,CAAC,MAAM,EAAE,iBAAiB,EAAE;IAC7BwE,MAAM,GAAAJ,cAAA,GAAED,MAAM,CAACK,MAAM,cAAAJ,cAAA,uBAAbA,cAAA,CAAeK,WAAW,CAAC,CAAC;IACpCC,GAAG,EAAEP,MAAM,CAACO,GAAG,IAAI,UAAU;IAC7BjB,OAAO,EAAEU,MAAM,CAACV,OAAO,IAAI,cAAc;IACzCkB,OAAO,EAAE,CAAC,MAAM;MACd,MAAMzB,IAAI,GAAGiB,MAAM,CAACV,OAAO,IAAIF,GAAG,CAACgB,QAAQ,CAACd,OAAO;MACnD,MAAMmB,IAAI,GAAGT,MAAM,CAACO,GAAG,IAAI,EAAE;MAC7B,IAAI,CAACxB,IAAI,EAAE,OAAO0B,IAAI,IAAI,UAAU;MACpC;MACA,MAAMC,cAAc,GAAG3B,IAAI,CAACjB,QAAQ,CAAC,GAAG,CAAC,GAAGiB,IAAI,CAAChB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAGgB,IAAI;MACpE,MAAM4B,cAAc,GAAGF,IAAI,CAACG,UAAU,CAAC,GAAG,CAAC,GAAGH,IAAI,GAAG,IAAIA,IAAI,EAAE;MAC/D,OAAO,GAAGC,cAAc,GAAGC,cAAc,EAAE;IAC7C,CAAC,EAAE;EACL,CAAC,CAAC;;EAEA;EACA;EACA,IAAIhE,KAAK,GAAG5B,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAID,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC9E,IAAI2B,KAAK,IAAIA,KAAK,CAACyB,QAAQ,CAAC,GAAG,CAAC,EAAE;IAChC,IAAI;MACF,MAAMyC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACpE,KAAK,CAAC;MACrCA,KAAK,GAAGkE,WAAW,CAAClE,KAAK,IAAIA,KAAK;IACpC,CAAC,CAAC,OAAOqE,CAAC,EAAE;MACVnF,GAAG,CAAC,OAAO,EAAE,yCAAyC,EAAEmF,CAAC,CAAC;IAC5D;EACF;EACA,MAAMC,UAAU,GAAGjB,MAAM,CAACR,OAAO,CAAC0B,aAAa,MAAAhB,qBAAA,GAAIF,MAAM,CAACR,OAAO,CAAC2B,MAAM,cAAAjB,qBAAA,uBAArBA,qBAAA,CAAuBgB,aAAa;EACvFrF,GAAG,CAAC,OAAO,EAAE,0BAA0B,EAAE;IACvCuF,cAAc,EAAEzE,KAAK,GAAGA,KAAK,CAAC0E,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,GAAG,MAAM;IAC/DC,aAAa,EAAEL,UAAU,GAAGA,UAAU,CAACI,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,GAAG;EACpE,CAAC,CAAC;EAEF,IAAI,CAACJ,UAAU,IAAItE,KAAK,EAAE;IACxBd,GAAG,CAAC,MAAM,EAAE,kEAAkE,CAAC;IAC/EmE,MAAM,CAACR,OAAO,CAAC0B,aAAa,GAAG,UAAUvE,KAAK,EAAE;EAClD;EACA,OAAOqD,MAAM;AACf,CAAC,EACA7E,KAAK,IAAK;EACTU,GAAG,CAAC,OAAO,EAAE,kBAAkB,EAAEV,KAAK,CAAC;EACvC,OAAOoG,OAAO,CAACC,MAAM,CAACrG,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAiE,GAAG,CAACS,YAAY,CAAC4B,QAAQ,CAAC1B,GAAG,CAC1B0B,QAAQ,IAAK;EAAA,IAAAC,gBAAA;EACZ;EACA7F,GAAG,CAAC,MAAM,EAAE,iBAAiB,EAAE;IAC7B8F,MAAM,EAAEF,QAAQ,CAACE,MAAM;IACvBpB,GAAG,GAAAmB,gBAAA,GAAED,QAAQ,CAACzB,MAAM,cAAA0B,gBAAA,uBAAfA,gBAAA,CAAiBnB,GAAG;IACzB/D,IAAI,EAAEiF,QAAQ,CAACjF;EACjB,CAAC,CAAC;;EAEF;EACA,MAAMoF,QAAQ,GAAGH,QAAQ,CAACjC,OAAO,CAAC,aAAa,CAAC;EAChD,IAAIoC,QAAQ,EAAE;IACZ;IACA,IAAI;MACF7G,YAAY,CAACiE,OAAO,CAAC,OAAO,EAAE4C,QAAQ,CAAC;MACvC7G,YAAY,CAACiE,OAAO,CAAC,WAAW,EAAE4C,QAAQ,CAAC;IAC7C,CAAC,CAAC,OAAO3F,CAAC,EAAE,CAAC;IACbmD,GAAG,CAACgB,QAAQ,CAACZ,OAAO,CAAC2B,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUS,QAAQ,EAAE;IACnE/F,GAAG,CAAC,MAAM,EAAE,oDAAoD,CAAC;EACnE;EAEA,OAAO4F,QAAQ,CAACjF,IAAI;AACtB,CAAC,EACArB,KAAK,IAAK;EAAA,IAAA0G,eAAA,EAAAC,gBAAA,EAAAC,aAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA,EAAAC,iBAAA;EACT;EACA5G,GAAG,CAAC,OAAO,EAAE,uBAAuB,EAAE;IACpCqB,OAAO,EAAE/B,KAAK,CAAC+B,OAAO;IACtByE,MAAM,GAAAE,eAAA,GAAE1G,KAAK,CAACsG,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,MAAM;IAC9Be,UAAU,GAAAZ,gBAAA,GAAE3G,KAAK,CAACsG,QAAQ,cAAAK,gBAAA,uBAAdA,gBAAA,CAAgBY,UAAU;IACtCnC,GAAG,GAAAwB,aAAA,GAAE5G,KAAK,CAAC6E,MAAM,cAAA+B,aAAA,uBAAZA,aAAA,CAAcxB,GAAG;IACtB/D,IAAI,GAAAwF,gBAAA,GAAE7G,KAAK,CAACsG,QAAQ,cAAAO,gBAAA,uBAAdA,gBAAA,CAAgBxF,IAAI;IAC1BgD,OAAO,GAAAyC,gBAAA,GAAE9G,KAAK,CAACsG,QAAQ,cAAAQ,gBAAA,uBAAdA,gBAAA,CAAgBzC,OAAO;IAChCmD,IAAI,EAAExH,KAAK,CAACwH,IAAI;IAChBC,SAAS,EAAEzH;EACb,CAAC,CAAC;;EAEF;EACA,IAAI,EAAA+G,gBAAA,GAAA/G,KAAK,CAACsG,QAAQ,cAAAS,gBAAA,uBAAdA,gBAAA,CAAgBP,MAAM,MAAK,GAAG,EAAE;IAClC9F,GAAG,CAAC,OAAO,EAAE,oFAAoF,CAAC;EACpG,CAAC,MAAM,IAAI,EAAAsG,gBAAA,GAAAhH,KAAK,CAACsG,QAAQ,cAAAU,gBAAA,uBAAdA,gBAAA,CAAgBR,MAAM,MAAK,GAAG,EAAE;IACzC9F,GAAG,CAAC,MAAM,EAAE,qDAAqD,CAAC;EACpE,CAAC,MAAM,IAAI,EAAAuG,gBAAA,GAAAjH,KAAK,CAACsG,QAAQ,cAAAW,gBAAA,uBAAdA,gBAAA,CAAgBT,MAAM,MAAK,GAAG,EAAE;IACzC9F,GAAG,CAAC,MAAM,EAAE,mEAAmE,CAAC;EAClF;;EAEA;EACA,IAAI,EAAAwG,gBAAA,GAAAlH,KAAK,CAACsG,QAAQ,cAAAY,gBAAA,uBAAdA,gBAAA,CAAgBV,MAAM,MAAK,GAAG,IAAI,EAAAW,gBAAA,GAAAnH,KAAK,CAACsG,QAAQ,cAAAa,gBAAA,uBAAdA,gBAAA,CAAgBX,MAAM,MAAK,GAAG,EAAE;IAAA,IAAAkB,gBAAA;IACpEhH,GAAG,CAAC,MAAM,EAAE,4DAA4D,CAAC;IACzEA,GAAG,CAAC,OAAO,EAAE,mBAAmB,GAAAgH,gBAAA,GAAE1H,KAAK,CAACsG,QAAQ,cAAAoB,gBAAA,uBAAdA,gBAAA,CAAgBrG,IAAI,CAAC;IACvD;IACA;EACF;;EAEA;EACA,MAAMsG,YAAY,GAAG,EAAAP,gBAAA,GAAApH,KAAK,CAACsG,QAAQ,cAAAc,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB/F,IAAI,cAAAgG,qBAAA,uBAApBA,qBAAA,CAAsBtF,OAAO,KAAI/B,KAAK,CAAC+B,OAAO,IAAI,mBAAmB;EAC1F,OAAOqE,OAAO,CAACC,MAAM,CAAC;IACpBtE,OAAO,EAAE4F,YAAY;IACrBnB,MAAM,GAAAc,iBAAA,GAAEtH,KAAK,CAACsG,QAAQ,cAAAgB,iBAAA,uBAAdA,iBAAA,CAAgBd,MAAM;IAC9BF,QAAQ,EAAEtG,KAAK,CAACsG,QAAQ;IACxBsB,aAAa,EAAE5H;EACjB,CAAC,CAAC;AACJ,CACF,CAAC;;AAED;AACA,IAAI6H,eAAe,GAAG,KAAK;AAC3B,IAAIC,gBAAgB,GAAG,CAAC;AACxB,MAAMC,cAAc,GAAG,IAAI,CAAC,CAAC;;AAE7B;AACA,OAAO,MAAMC,OAAO,GAAG;EACrB;EACAC,YAAY,EAAGzG,KAAK,IAAK;IACvB,IAAIA,KAAK,EAAE;MACTyC,GAAG,CAACgB,QAAQ,CAACZ,OAAO,CAAC2B,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUxE,KAAK,EAAE;IAClE,CAAC,MAAM;MACL,OAAOyC,GAAG,CAACgB,QAAQ,CAACZ,OAAO,CAAC2B,MAAM,CAAC,eAAe,CAAC;IACrD;EACF,CAAC;EAED;EACAkC,cAAc,EAAEA,CAAA,KAAM;IACpB,OAAOjE,GAAG,CAACgB,QAAQ,CAACZ,OAAO,CAAC2B,MAAM,CAAC,eAAe,CAAC;EACrD,CAAC;EAED;EACAmC,KAAK,EAAE,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAChC3H,GAAG,CAAC,MAAM,EAAE,iCAAiC,EAAE0H,KAAK,CAAC;;IAErD;IACA,IAAIP,eAAe,EAAE;MACnBnH,GAAG,CAAC,MAAM,EAAE,0DAA0D,CAAC;MACvE,OAAO0F,OAAO,CAACC,MAAM,CAAC;QAAEtE,OAAO,EAAE;MAA4B,CAAC,CAAC;IACjE;;IAEA;IACA,MAAM0C,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;IACtB,MAAM6D,oBAAoB,GAAG7D,GAAG,GAAGqD,gBAAgB;IACnD,IAAIQ,oBAAoB,GAAGP,cAAc,EAAE;MACzC,MAAMQ,iBAAiB,GAAGR,cAAc,GAAGO,oBAAoB;MAC/D5H,GAAG,CAAC,MAAM,EAAE,iCAAiC6H,iBAAiB,IAAI,CAAC;MACnE,OAAOnC,OAAO,CAACC,MAAM,CAAC;QACpBtE,OAAO,EAAE,eAAeyG,IAAI,CAACC,IAAI,CAACF,iBAAiB,GAAG,IAAI,CAAC;MAC7D,CAAC,CAAC;IACJ;IAEAV,eAAe,GAAG,IAAI;IACtBC,gBAAgB,GAAGrD,GAAG;IAEtB,IAAI;MACF;MACA,MAAMzD,QAAQ,GAAG,MAAMiD,GAAG,CAACyE,IAAI,CAAC,iBAAiB,EAAE;QAAEN,KAAK;QAAEC;MAAS,CAAC,CAAC;MACvE3H,GAAG,CAAC,MAAM,EAAE,wCAAwC,CAAC;MACrD;MACA,MAAMiI,UAAU,GAAG5H,sBAAsB,CAACC,QAAQ,CAAC;MACnD,OAAO2H,UAAU;IACnB,CAAC,CAAC,OAAO3I,KAAK,EAAE;MAAA,IAAA4I,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA,EAAAC,iBAAA,EAAAC,iBAAA;MACdtI,GAAG,CAAC,OAAO,EAAE,iBAAiB,EAAEV,KAAK,CAAC+B,OAAO,CAAC;;MAE9C;MACA,IAAI,EAAA6G,iBAAA,GAAA5I,KAAK,CAACsG,QAAQ,cAAAsC,iBAAA,uBAAdA,iBAAA,CAAgBpC,MAAM,MAAK,GAAG,EAAE;QAClC9F,GAAG,CAAC,MAAM,EAAE,qCAAqC,CAAC;QAClD,MAAMmF,CAAC,GAAG,IAAIoD,KAAK,CAAC,2DAA2D,CAAC;QAChFpD,CAAC,CAACW,MAAM,GAAG,GAAG;QACdX,CAAC,CAACS,QAAQ,GAAGtG,KAAK,CAACsG,QAAQ;QAC3B,MAAMT,CAAC;MACT;MAEA,IAAI,EAAAgD,iBAAA,GAAA7I,KAAK,CAACsG,QAAQ,cAAAuC,iBAAA,uBAAdA,iBAAA,CAAgBrC,MAAM,MAAK,GAAG,EAAE;QAClC9F,GAAG,CAAC,MAAM,EAAE,iDAAiD,CAAC;QAC9D;QACAwI,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,UAASC,CAAC,EAAE;UAC7CJ,QAAQ,CAACC,MAAM,GAAGG,CAAC,CAACpG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,YAAY,GAAG,IAAIsB,IAAI,CAAC,CAAC,CAAC+E,WAAW,CAAC,CAAC,GAAG,SAAS,CAAC;QAC5G,CAAC,CAAC;QACF,MAAM1D,CAAC,GAAG,IAAIoD,KAAK,CAAC,+DAA+D,CAAC;QACpFpD,CAAC,CAACW,MAAM,GAAG,GAAG;QACdX,CAAC,CAACS,QAAQ,GAAGtG,KAAK,CAACsG,QAAQ;QAC3B,MAAMT,CAAC;MACT;;MAEA;MACA,MAAM2D,cAAc,GAAG,CAACxJ,KAAK,CAACsG,QAAQ,KAAK,gBAAgB,CAACmD,IAAI,CAACzJ,KAAK,CAAC+B,OAAO,CAAC,IAAI/B,KAAK,CAACwH,IAAI,KAAK,aAAa,CAAC;MAChH,IAAIgC,cAAc,EAAE;QAClB9I,GAAG,CAAC,MAAM,EAAE,4DAA4D,CAAC;QACzE,MAAMgJ,UAAU,GAAGpH,oBAAoB,CAAC,CAAC,CAACkB,MAAM,CAACmG,CAAC,IAAIA,CAAC,IAAIA,CAAC,KAAK1F,GAAG,CAACgB,QAAQ,CAACd,OAAO,CAAC;QACtF,KAAK,MAAMP,IAAI,IAAI8F,UAAU,EAAE;UAC7B,IAAI;YACFhJ,GAAG,CAAC,MAAM,EAAE,mCAAmC,EAAEkD,IAAI,CAAC;YACtDK,GAAG,CAACgB,QAAQ,CAACd,OAAO,GAAGP,IAAI;YAC3B,MAAMgG,OAAO,GAAG,MAAM3F,GAAG,CAACyE,IAAI,CAAC,iBAAiB,EAAE;cAAEN,KAAK;cAAEC;YAAS,CAAC,CAAC;YACtE,MAAMM,UAAU,GAAG5H,sBAAsB,CAAC6I,OAAO,CAAC;YAClD,IAAIjB,UAAU,CAAC/G,OAAO,EAAE;cACtBlB,GAAG,CAAC,MAAM,EAAE,uCAAuC,EAAEkD,IAAI,CAAC;cAC1DD,cAAc,CAACC,IAAI,CAAC;cACpB,OAAO+E,UAAU;YACnB;UACF,CAAC,CAAC,OAAO9C,CAAC,EAAE;YAAA,IAAAgE,WAAA,EAAAC,gBAAA;YACV,MAAMC,GAAG,GAAG,CAAAlE,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAE9D,OAAO,MAAI8D,CAAC,aAADA,CAAC,wBAAAgE,WAAA,GAADhE,CAAC,CAAES,QAAQ,cAAAuD,WAAA,wBAAAC,gBAAA,GAAXD,WAAA,CAAaxI,IAAI,cAAAyI,gBAAA,uBAAjBA,gBAAA,CAAmB/H,OAAO,KAAI,SAAS;YACjErB,GAAG,CAAC,MAAM,EAAE,yBAAyB,EAAEkD,IAAI,EAAE,GAAG,EAAEmG,GAAG,CAAC;UACxD;UACA;UACA,IAAI;YACF,MAAMC,UAAU,GAAG,MAAM/F,GAAG,CAACyE,IAAI,CAAC,YAAY,EAAE;cAAEN,KAAK;cAAEC;YAAS,CAAC,CAAC;YACpE,MAAMM,UAAU,GAAG5H,sBAAsB,CAACiJ,UAAU,CAAC;YACrD,IAAIrB,UAAU,CAAC/G,OAAO,EAAE;cACtBlB,GAAG,CAAC,MAAM,EAAE,mDAAmD,EAAEkD,IAAI,CAAC;cACtED,cAAc,CAACC,IAAI,CAAC;cACpB,OAAO+E,UAAU;YACnB;UACF,CAAC,CAAC,OAAO7H,CAAC,EAAE,CAAC;QACf;QACAJ,GAAG,CAAC,OAAO,EAAE,2DAA2D,CAAC;MAC3E;;MAEA;MACA,MAAM8F,MAAM,IAAAsC,qBAAA,GAAI9I,KAAK,aAALA,KAAK,wBAAA+I,iBAAA,GAAL/I,KAAK,CAAEsG,QAAQ,cAAAyC,iBAAA,uBAAfA,iBAAA,CAAiBvC,MAAM,cAAAsC,qBAAA,cAAAA,qBAAA,GAAI9I,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEwG,MAAO;MACzD,MAAMyD,QAAQ,GAAG,QAAOjK,KAAK,aAALA,KAAK,wBAAAgJ,iBAAA,GAALhJ,KAAK,CAAEsG,QAAQ,cAAA0C,iBAAA,uBAAfA,iBAAA,CAAiB3H,IAAI,MAAK,QAAQ,GAAGrB,KAAK,CAACsG,QAAQ,CAACjF,IAAI,GAAG,EAAE;MACrF,MAAM6I,UAAU,GAAG1D,MAAM,KAAK,GAAG,IAAKyD,QAAQ,IAAIA,QAAQ,CAAChH,QAAQ,CAAC,6BAA6B,CAAE;MACnG,IAAIiH,UAAU,EAAE;QACdxJ,GAAG,CAAC,MAAM,EAAE,8DAA8D,CAAC;QAC3E,MAAMyJ,UAAU,GAAG,MAAMlG,GAAG,CAACyE,IAAI,CAAC,YAAY,EAAE;UAAEN,KAAK;UAAEC;QAAS,CAAC,CAAC;QACpE3H,GAAG,CAAC,MAAM,EAAE,mCAAmC,CAAC;QAChD,MAAMiI,UAAU,GAAG5H,sBAAsB,CAACoJ,UAAU,CAAC;QACrD,OAAOxB,UAAU;MACnB;MAEA,MAAM3I,KAAK;IACb,CAAC,SAAS;MACR6H,eAAe,GAAG,KAAK;IACzB;EACF,CAAC;EAED;EACAuC,QAAQ,EAAGC,QAAQ,IAAK;IACtB,OAAOpG,GAAG,CAACyE,IAAI,CAAC,oBAAoB,EAAE2B,QAAQ,CAAC;EACjD,CAAC;EAED;EACAC,UAAU,EAAEA,CAAA,KAAM;IAChB,OAAOrG,GAAG,CAACsG,GAAG,CAAC,cAAc,CAAC;EAChC,CAAC;EAED;EACAC,aAAa,EAAGC,WAAW,IAAK;IAC9B,OAAOxG,GAAG,CAACyG,GAAG,CAAC,cAAc,EAAED,WAAW,CAAC;EAC7C,CAAC;EAED;EACAE,cAAc,EAAEA,CAACC,eAAe,EAAEC,WAAW,KAAK;IAChD,OAAO5G,GAAG,CAACyG,GAAG,CAAC,oBAAoB,EAAE;MACnCE,eAAe;MACfC;IACF,CAAC,CAAC;EACJ,CAAC;EAED;EACAC,cAAc,EAAG1C,KAAK,IAAK;IACzB,OAAOnE,GAAG,CAACyE,IAAI,CAAC,2BAA2B,EAAE;MAAEN;IAAM,CAAC,CAAC;EACzD,CAAC;EAED;EACA2C,aAAa,EAAEA,CAACvJ,KAAK,EAAE6G,QAAQ,KAAK;IAClC,OAAOpE,GAAG,CAACyE,IAAI,CAAC,0BAA0B,EAAE;MAAElH,KAAK;MAAE6G;IAAS,CAAC,CAAC;EAClE,CAAC;EAED;EACA1G,YAAY,EAAGA,YAAY,IAAK;IAC9B,OAAOsC,GAAG,CAACyE,IAAI,CAAC,mBAAmB,EAAE;MAAE/G;IAAa,CAAC,CAAC;EACxD,CAAC;EAED;EACAqJ,MAAM,EAAEA,CAAA,KAAM;IACZ,OAAO/G,GAAG,CAACyE,IAAI,CAAC,kBAAkB,CAAC;EACrC;AACF,CAAC;;AAED;AACA,OAAO,MAAMuC,OAAO,GAAG;EACrB;EACAC,OAAO,EAAEA,CAAC5G,MAAM,GAAG,CAAC,CAAC,KAAK;IACxB,OAAOL,GAAG,CAACsG,GAAG,CAAC,WAAW,EAAE;MAAEjG;IAAO,CAAC,CAAC;EACzC,CAAC;EAED;EACA6G,MAAM,EAAGC,EAAE,IAAK;IACd,OAAOnH,GAAG,CAACsG,GAAG,CAAC,aAAaa,EAAE,EAAE,CAAC;EACnC,CAAC;EAED;EACAC,SAAS,EAAGC,OAAO,IAAK;IACtB,OAAOrH,GAAG,CAACyE,IAAI,CAAC,WAAW,EAAE4C,OAAO,CAAC;EACvC,CAAC;EAED;EACAC,SAAS,EAAEA,CAACH,EAAE,EAAEE,OAAO,KAAK;IAC1B,OAAOrH,GAAG,CAACyG,GAAG,CAAC,aAAaU,EAAE,EAAE,EAAEE,OAAO,CAAC;EAC5C,CAAC;EAED;EACAE,SAAS,EAAGJ,EAAE,IAAK;IACjB,OAAOnH,GAAG,CAACwH,MAAM,CAAC,aAAaL,EAAE,EAAE,CAAC;EACtC,CAAC;EAED;EACAM,SAAS,EAAGN,EAAE,IAAK;IACjB,OAAOnH,GAAG,CAACyE,IAAI,CAAC,aAAa0C,EAAE,SAAS,CAAC;EAC3C,CAAC;EAED;EACAO,QAAQ,EAAGP,EAAE,IAAK;IAChB,OAAOnH,GAAG,CAACyE,IAAI,CAAC,aAAa0C,EAAE,QAAQ,CAAC;EAC1C,CAAC;EAED;EACAQ,WAAW,EAAEA,CAAA,KAAM;IACjB,OAAO3H,GAAG,CAACsG,GAAG,CAAC,iBAAiB,CAAC;EACnC;AACF,CAAC;;AAED;AACA,OAAO,MAAMsB,UAAU,GAAG;EACxB;EACAC,UAAU,EAAEA,CAACC,KAAK,EAAEzH,MAAM,GAAG,CAAC,CAAC,KAAK;IAClC,OAAOL,GAAG,CAACsG,GAAG,CAAC,aAAawB,KAAK,UAAU,EAAE;MAAEzH;IAAO,CAAC,CAAC;EAC1D,CAAC;EAED;EACA0H,eAAe,EAAGD,KAAK,IAAK;IAC1B,OAAO9H,GAAG,CAACsG,GAAG,CAAC,aAAawB,KAAK,SAAS,EAAE;MAAEE,YAAY,EAAE;IAAO,CAAC,CAAC;EACvE;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG;EAC1B;EACAC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,cAAc,GAAGA,CAAA,KACrBxM,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAID,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EACvE;IAED,MAAMwM,cAAc,GAAG,MAAOjH,GAAG,IAAK;MACpC,MAAM5D,KAAK,GAAG4K,cAAc,CAAC,CAAC;MAC9B,MAAM/H,OAAO,GAAG7C,KAAK,GAAG;QAAEuE,aAAa,EAAE,UAAUvE,KAAK;MAAG,CAAC,GAAG,CAAC,CAAC;MACjE,MAAM8K,IAAI,GAAG,MAAMhN,KAAK,CAACiL,GAAG,CAACnF,GAAG,EAAE;QAAEf,OAAO;QAAEC,MAAM,EAAE;UAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;QAAE;MAAE,CAAC,CAAC;MAC1E,OAAO6H,IAAI,CAACjL,IAAI,IAAIiL,IAAI;IAC1B,CAAC;;IAED;IACA,MAAMC,oBAAoB,GAAIlL,IAAI,IAAK;MACrC,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;QAC5B,MAAMmL,CAAC,GAAGnL,IAAI,CAACvB,WAAW,CAAC,CAAC;QAC5B,OAAO0M,CAAC,CAACvJ,QAAQ,CAAC,OAAO,CAAC,KAAKuJ,CAAC,CAACvJ,QAAQ,CAAC,YAAY,CAAC,IAAIuJ,CAAC,CAACvJ,QAAQ,CAAC,aAAa,CAAC,CAAC;MACvF;MACA,OAAO,KAAK;IACd,CAAC;;IAED;IACA,MAAMwJ,0BAA0B,GAAIH,IAAI,IAAK;MAAA,IAAAI,IAAA,EAAAC,KAAA,EAAAC,kBAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,mBAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,oBAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,mBAAA,EAAAC,KAAA,EAAAC,qBAAA,EAAAC,KAAA,EAAAC,oBAAA,EAAAC,KAAA,EAAAC,qBAAA,EAAAC,MAAA,EAAAC,qBAAA;MAC3C,MAAMC,IAAI,GAAGxB,IAAI,IAAIA,IAAI,CAACjL,IAAI,GAAGiL,IAAI,CAACjL,IAAI,GAAGiL,IAAI;MACjD,MAAMyB,OAAO,GAAG,CAAAD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEzM,IAAI,MAAIyM,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,KAAK,KAAIF,IAAI;MAEjD,MAAME,KAAK,GAAG,CAAAD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,KAAK,KAAI,CAAC,CAAC;MAClC,MAAMC,UAAU,GAAG,CAAAF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,UAAU,MAAIH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,UAAU,KAAI,EAAE;MAEhE,MAAMC,SAAS,IAAAxB,IAAA,IAAAC,KAAA,IAAAC,kBAAA,GACbmB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEG,SAAS,cAAAtB,kBAAA,cAAAA,kBAAA,GAAImB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,UAAU,cAAAxB,KAAA,cAAAA,KAAA,GAAIqB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEI,SAAS,cAAA1B,IAAA,cAAAA,IAAA,GAAI,CAClE;MACD,MAAM2B,UAAU,IAAAxB,KAAA,IAAAC,KAAA,IAAAC,mBAAA,GACdgB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEM,UAAU,cAAAtB,mBAAA,cAAAA,mBAAA,GAAIgB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEO,WAAW,cAAAxB,KAAA,cAAAA,KAAA,GAAIkB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEO,OAAO,cAAA1B,KAAA,cAAAA,KAAA,GAAI,CAClE;MACD,MAAM2B,WAAW,IAAAxB,KAAA,IAAAC,KAAA,IAAAC,oBAAA,GACfa,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAES,WAAW,cAAAtB,oBAAA,cAAAA,oBAAA,GAAIa,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEU,YAAY,cAAAxB,KAAA,cAAAA,KAAA,GAAIe,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEU,MAAM,cAAA1B,KAAA,cAAAA,KAAA,GAAI,CACnE;MACD,MAAM2B,UAAU,IAAAxB,KAAA,IAAAC,KAAA,IAAAC,mBAAA,GACdU,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEY,UAAU,cAAAtB,mBAAA,cAAAA,mBAAA,GAAIU,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEa,WAAW,cAAAxB,KAAA,cAAAA,KAAA,GAAIY,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEa,MAAM,cAAA1B,KAAA,cAAAA,KAAA,GAAI,CACjE;MACD,MAAM2B,YAAY,IAAAxB,KAAA,IAAAC,qBAAA,GAChBQ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEe,YAAY,cAAAvB,qBAAA,cAAAA,qBAAA,GAAIQ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEgB,aAAa,cAAAzB,KAAA,cAAAA,KAAA,GAAI,CACpD;MACD,MAAM0B,WAAW,IAAAxB,KAAA,IAAAC,oBAAA,GACfM,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEiB,WAAW,cAAAvB,oBAAA,cAAAA,oBAAA,GAAIM,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEkB,YAAY,cAAAzB,KAAA,cAAAA,KAAA,GAAI,CAClD;MACD,MAAM0B,YAAY,IAAAxB,KAAA,IAAAC,qBAAA,GAChBI,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEmB,YAAY,cAAAvB,qBAAA,cAAAA,qBAAA,GAAII,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEoB,cAAc,cAAAzB,KAAA,cAAAA,KAAA,GAAI,CACrD;MACD,MAAM0B,eAAe,IAAAxB,MAAA,IAAAC,qBAAA,GACnBE,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEqB,eAAe,cAAAvB,qBAAA,cAAAA,qBAAA,GAAIE,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEsB,iBAAiB,cAAAzB,MAAA,cAAAA,MAAA,GAAI,CAC3D;MAED,OAAO;QACLhM,OAAO,EAAE,IAAI;QACbP,IAAI,EAAE;UACJ6M,SAAS;UACTG,UAAU;UACVG,WAAW;UACXG,UAAU;UACVG,YAAY;UACZE,WAAW;UACXE,YAAY;UACZE,eAAe;UACfnB;QACF;MACF,CAAC;IACH,CAAC;IAED,IAAI;MACF;MACA,MAAM3B,IAAI,GAAG,MAAMrI,GAAG,CAACsG,GAAG,CAAC,sBAAsB,CAAC;MAClD,OAAOkC,0BAA0B,CAACH,IAAI,CAAC;IACzC,CAAC,CAAC,OAAOtM,KAAK,EAAE;MAAA,IAAAsP,iBAAA,EAAAC,iBAAA;MACd,MAAM/I,MAAM,GAAG,CAAAxG,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEwG,MAAM,MAAIxG,KAAK,aAALA,KAAK,wBAAAsP,iBAAA,GAALtP,KAAK,CAAEsG,QAAQ,cAAAgJ,iBAAA,uBAAfA,iBAAA,CAAiB9I,MAAM;MACvD,MAAMgJ,GAAG,GAAGxP,KAAK,aAALA,KAAK,wBAAAuP,iBAAA,GAALvP,KAAK,CAAEsG,QAAQ,cAAAiJ,iBAAA,uBAAfA,iBAAA,CAAiBlO,IAAI;MACjC,MAAMoO,QAAQ,GAAGjJ,MAAM,KAAK,GAAG,IAAI+F,oBAAoB,CAACiD,GAAG,CAAC;MAE5D,IAAI,CAACC,QAAQ,EAAE;QACb,MAAMzP,KAAK;MACb;;MAEA;MACA,MAAM0P,SAAS,GAAG,CAAC,YAAY,EAAE,iBAAiB,CAAC;MACnD,KAAK,MAAMpK,IAAI,IAAIoK,SAAS,EAAE;QAC5B,IAAI;UACF,MAAMC,YAAY,GAAG,MAAM1L,GAAG,CAACsG,GAAG,CAACjF,IAAI,CAAC;UACxC,OAAOmH,0BAA0B,CAACkD,YAAY,CAAC;QACjD,CAAC,CAAC,OAAOC,WAAW,EAAE;UAAA,IAAAC,qBAAA,EAAAC,sBAAA;UACpB,MAAMC,QAAQ,GAAG,CAAAH,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEpJ,MAAM,MAAIoJ,WAAW,aAAXA,WAAW,wBAAAC,qBAAA,GAAXD,WAAW,CAAEtJ,QAAQ,cAAAuJ,qBAAA,uBAArBA,qBAAA,CAAuBrJ,MAAM;UACrE,MAAMwJ,KAAK,GAAGJ,WAAW,aAAXA,WAAW,wBAAAE,sBAAA,GAAXF,WAAW,CAAEtJ,QAAQ,cAAAwJ,sBAAA,uBAArBA,sBAAA,CAAuBzO,IAAI;UACzC,MAAM4O,UAAU,GAAGF,QAAQ,KAAK,GAAG,IAAIxD,oBAAoB,CAACyD,KAAK,CAAC;UAClE,IAAI,CAACC,UAAU,EAAE;YACf;YACA,MAAML,WAAW;UACnB;UACA;QACF;MACF;;MAEA;MACA,MAAMM,UAAU,GAAG,uBAAuB;MAC1C,IAAI;QACF,MAAMlG,UAAU,GAAG,MAAMqC,cAAc,CAAC,GAAG6D,UAAU,sBAAsB,CAAC;QAC5E,OAAOzD,0BAA0B,CAACzC,UAAU,CAAC;MAC/C,CAAC,CAAC,OAAOmG,SAAS,EAAE;QAAA,IAAAC,mBAAA,EAAAC,oBAAA;QAClB,MAAMC,EAAE,GAAG,CAAAH,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAE3J,MAAM,MAAI2J,SAAS,aAATA,SAAS,wBAAAC,mBAAA,GAATD,SAAS,CAAE7J,QAAQ,cAAA8J,mBAAA,uBAAnBA,mBAAA,CAAqB5J,MAAM;QAC3D,MAAM+J,EAAE,GAAGJ,SAAS,aAATA,SAAS,wBAAAE,oBAAA,GAATF,SAAS,CAAE7J,QAAQ,cAAA+J,oBAAA,uBAAnBA,oBAAA,CAAqBhP,IAAI;QACpC,MAAMmP,cAAc,GAAGF,EAAE,KAAK,GAAG,IAAI/D,oBAAoB,CAACgE,EAAE,CAAC;QAC7D,IAAI,CAACC,cAAc,IAAIF,EAAE,EAAE;UACzB,MAAMH,SAAS;QACjB;MACF;;MAEA;MACA,IAAI;QACF,MAAMM,QAAQ,GAAG,MAAMpE,cAAc,CAAC,GAAG6D,UAAU,WAAW,CAAC;QAC/D,MAAMQ,WAAW,GAAG,CAAAD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEpP,IAAI,MAAIoP,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,IAAI,KAAIF,QAAQ,IAAI,EAAE;QACtE,MAAME,IAAI,GAAGtN,KAAK,CAACuN,OAAO,CAACF,WAAW,CAAC,GAAGA,WAAW,GAAIA,WAAW,CAACC,IAAI,IAAI,EAAG;QAChF,MAAMzC,SAAS,GAAGyC,IAAI,CAACE,MAAM;QAC7B,MAAMC,aAAa,GAAGH,IAAI,CAACnN,MAAM,CAACuN,CAAC,IAAIA,CAAC,CAACvK,MAAM,KAAK,WAAW,CAAC,CAACqK,MAAM;QACvE,MAAMG,WAAW,GAAGL,IAAI,CAACnN,MAAM,CAACuN,CAAC,IAAIA,CAAC,CAACvK,MAAM,KAAK,SAAS,CAAC,CAACqK,MAAM;QACnE,MAAMI,UAAU,GAAGN,IAAI,CAACnN,MAAM,CAACuN,CAAC,IAAIA,CAAC,CAACvK,MAAM,KAAK,QAAQ,CAAC,CAACqK,MAAM;QACjE,MAAMlC,UAAU,GAAGgC,IAAI,CAACnN,MAAM,CAACuN,CAAC,IAAIA,CAAC,CAACvK,MAAM,KAAK,QAAQ,CAAC,CAACqK,MAAM;QACjE,MAAMrC,WAAW,GAAGmC,IAAI,CAACnN,MAAM,CAACuN,CAAC,IAAIA,CAAC,CAACvK,MAAM,KAAK,SAAS,IAAIuK,CAAC,CAACvK,MAAM,KAAK,QAAQ,CAAC,CAACqK,MAAM;QAC5F,MAAMxC,UAAU,GAAG2C,WAAW,GAAGC,UAAU;QAC3C,MAAMnC,YAAY,GAAG6B,IAAI,CAACO,MAAM,CAAC,CAACC,GAAG,EAAEJ,CAAC,KAAKI,GAAG,IAAIJ,CAAC,CAACK,WAAW,IAAIL,CAAC,CAACM,YAAY,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7F,MAAMrC,WAAW,GAAGd,SAAS,GAAG,CAAC,GAAG1F,IAAI,CAAC8I,KAAK,CAAER,aAAa,GAAG5C,SAAS,GAAI,GAAG,CAAC,GAAG,CAAC;QACrF,MAAMD,UAAU,GAAG0C,IAAI,CAAC/N,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QAEnC,OAAO;UACLhB,OAAO,EAAE,IAAI;UACbP,IAAI,EAAE;YACJ6M,SAAS,EAAE4C,aAAa;YACxBzC,UAAU;YACVG,WAAW;YACXG,UAAU;YACVG,YAAY;YACZE,WAAW;YACXE,YAAY,EAAE,CAAC;YACfE,eAAe,EAAE,CAAC;YAClBnB;UACF;QACF,CAAC;MACH,CAAC,CAAC,OAAOnN,CAAC,EAAE;QACV;MAAA;;MAGF;MACA,OAAO;QACLc,OAAO,EAAE,IAAI;QACbP,IAAI,EAAE;UACJ6M,SAAS,EAAE,CAAC;UACZG,UAAU,EAAE,CAAC;UACbG,WAAW,EAAE,CAAC;UACdG,UAAU,EAAE,CAAC;UACbG,YAAY,EAAE,CAAC;UACfE,WAAW,EAAE,CAAC;UACdE,YAAY,EAAE,CAAC;UACfE,eAAe,EAAE,CAAC;UAClBnB,UAAU,EAAE;QACd;MACF,CAAC;IACH;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMsD,mBAAmB,GAAG;EACjC;EACAC,WAAW,EAAEA,CAAA,KAAM;IACjB,OAAOvN,GAAG,CAACsG,GAAG,CAAC,wBAAwB,CAAC;EAC1C,CAAC;EAED;EACA4B,QAAQ,EAAEA,CAAA,KAAM;IACd,OAAOlI,GAAG,CAACsG,GAAG,CAAC,8BAA8B,CAAC;EAChD,CAAC;EAED;EACAkH,cAAc,EAAGC,QAAQ,IAAK;IAC5B,OAAOzN,GAAG,CAACyE,IAAI,CAAC,yCAAyC,EAAEgJ,QAAQ,EAAE;MACnErN,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ,CAAC;EAED;EACAsN,aAAa,EAAGC,SAAS,IAAK;IAC5B,OAAO3N,GAAG,CAACwH,MAAM,CAAC,0BAA0BmG,SAAS,EAAE,CAAC;EAC1D,CAAC;EAED;EACAC,UAAU,EAAGH,QAAQ,IAAK;IACxB,OAAOzN,GAAG,CAACyE,IAAI,CAAC,6BAA6B,EAAEgJ,QAAQ,EAAE;MACvDrN,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMyN,SAAS,GAAG;EACvBC,KAAK,EAAEA,CAAA,KAAM9N,GAAG,CAACsG,GAAG,CAAC,SAAS;AAChC,CAAC;AAED,eAAetG,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}